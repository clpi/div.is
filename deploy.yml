---
- name: Clean all podman containers and images
  hosts: div.is, io.div.is
  remote_user: root
  tasks:
    - name: Install Podman
      dnf:
        name:
          - podman
          - cockpit
          - cockpit-podman
        state: latest
    - name: Clean images
      command: sudo podman image rm --all --force
    - name: Prune images
      command: sudo podman image prune --force
    - name: Clean containers
      command: sudo podman container rm --all --force
    - name: Prune images
      command: sudo podman container prune --force
    - name: Create base app dir
      file:
        path: /usr/src/div
        state: directory

- name: Deploy to div.is
  hosts: div.is
  remote_user: root
  tasks:
    - name: Copy front end files
      synchronize:
        src: client
        dest: /usr/src/div/
        mode: push
        rsync_opts:
          - "--exclude=node_modules"
          - "--exclude=scripts"
      run_once: true
    - name: Build frontend image
      command: sudo podman build /usr/src/div/client -f Dockerfile.prod -t divfprod
    - name: Run frontend image
      command: sudo podman run --rm -dt -p 80:5005 --name divfprod localhost/divfprod

- name: Deploy to io.div.is
  hosts: io.div.is
  remote_user: root
  vars:
    pg_user: user
    pg_pass: pass
    pg_db: db
    host_port: 80
    cont_port: 5005
  tasks:
    - name: Install podman
      dnf:
        name:
          - podman
        state: latest
    - name: Create app data dir
      file:
        path: /usr/src/div/data
        state: directory
    - name: Copy postgres files
      synchronize:
        src: data
        dest: /usr/src/div/
        mode: push
    - name: Copy back end files
      synchronize:
        src: back
        dest: /usr/src/div/
        mode: push
        rsync_opts:
          - "--exclude=target"
    - name: Build postgres image
      command: sudo podman build /usr/src/div/data/pg -t divdb
    - name: Run postgres container
      command: sudo podman run -dt --rm -p 5432:5432 -v /usr/src/div/data/pg/pgdata:/var/lib/postgresql/data --env-file /usr/src/div/data/pg/pg.env --restart always --name divdb --hostname divdb localhost/divdb
    - name: Run pgadmin container
      command: sudo podman run -dt --rm -p 5050:5050 -v /usr/src/div/data/pg/pgadmin:/var/lib/pgadmin --env-file /usr/src/div/data/pg/pgadmin.env --restart always --name divpgadmin --hostname divpgadmin dpage/pgadmin4
    - name: Build backend image
      command: sudo podman build /usr/src/div/back -t divb
    - name: Run backend image
      command: sudo podman run --rm -dt -p 3001:3001 --name divb localhost/divb

# to add: build, run postgres db
# to add: build, run redis
# to add: build, run ip networking w/ api.div.is or something
# to add: build, run yew website
# to add: second host droplet
# to add: create pod + networking
# to add: become sudo before each sudo podman command

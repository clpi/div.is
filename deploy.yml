---
- name: Clean all podman containers and images
  hosts: div.is, io.div.is
  remote_user: root
  tasks:
    - name: Install Podman
      dnf:
        name:
          - podman
        state: latest
    - name: Clean images
      command: podman image rm --all --force
      become: sudo
    - name: Clean containers
      command: podman container rm --all --force
      become: sudo

- name: Deploy to div.is
  hosts: div.is
  remote_user: root
  vars:
    api_url: default
    host_front_port: 80
    cont_front_port: 5005
    host_back_port: 3001
    cont_back_port: 3001
  tasks:
    - name: Copy back end files
      synchronize:
        src: client
        dest: /usr/src/div/
        mode: push
        rsync_opts:
          - "--exclude=node_modules"
          - "--exclude=scripts"
      run_once: true
    - name: Build frontend image
      command: sudo podman build /usr/src/div/client -f Dockerfile.prod -t divfprod
    - name: Run frontend image
      command: sudo podman run --rm -dt -p 80:5005 --name divfprod localhost/divfprod

- name: Deploy to io.div.is
  hosts: io.div.is
  remote_user: root
  vars:
    pg_user: user
    pg_pass: pass
    pg_db: db
    host_port: 80
    cont_port: 5005
  tasks:
    - name: Install podman
      dnf:
        name:
          - podman
        state: latest
    - name: Copy postgres files
      synchronize:
        src: data/pg
        dest: /usr/src/div/data/
        mode: push
    - name: Copy back end files
      synchronize:
        src: back
        dest: /usr/src/div/
        mode: push
    - name: Build postgres image
      command: podman build /usr/src/div/data/pg -t divdb
      become: sudo
    - name: Run postgres container
      command: podman run -idt --rm -p 5432:5432 -v /usr/src/div/data/pg/pgdata:/usr/src/div/data/pg/pgdata --env-file /usr/src/data/pg/pg.env --restart always --name divdb --hostname divdb localhost/divdb
      become: sudo
    - name: Run pgadmin container
      command: podman run -idt --rm -p 5050:5050 -v /usr/src/div/data/pg/pgadmin:/usr/src/div/data/pg/pgadmin --env-file /usr/src/data/pg/pgadmin.env --restart always --name divpgadmin --hostname divpgadmin dpage/pgadmin4
      become: sudo
    - name: Build backend image
      command: podman build /usr/src/div/back -t divb
      become: sudo
    - name: Run backend image
      command: podman run --rm -dt -p 3001:3001 --name divb localhost/divb
      become: sudo

# to add: build, run postgres db
# to add: build, run redis
# to add: build, run ip networking w/ api.div.is or something
# to add: build, run yew website
# to add: second host droplet
# to add: create pod + networking

{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2","program":"/home/chrisp/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","async_std","--edition=2018","/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-task\"","--cfg","feature=\"crossbeam-utils\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-channel\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-timer\"","--cfg","feature=\"kv-log-macro\"","--cfg","feature=\"log\"","--cfg","feature=\"memchr\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"pin-project-lite\"","--cfg","feature=\"pin-utils\"","--cfg","feature=\"slab\"","--cfg","feature=\"smol\"","--cfg","feature=\"std\"","--cfg","feature=\"unstable\"","--cfg","feature=\"wasm-bindgen-futures\"","-C","metadata=e9ef0eeccdcd3b14","-C","extra-filename=-e9ef0eeccdcd3b14","--out-dir","/home/chrisp/scr/rust/mem/back/target/rls/debug/deps","-L","dependency=/home/chrisp/scr/rust/mem/back/target/rls/debug/deps","--extern","async_task=/home/chrisp/scr/rust/mem/back/target/rls/debug/deps/libasync_task-c3e4adee539f98b7.rmeta","--extern","crossbeam_utils=/home/chrisp/scr/rust/mem/back/target/rls/debug/deps/libcrossbeam_utils-86dafc106ec47733.rmeta","--extern","futures_core=/home/chrisp/scr/rust/mem/back/target/rls/debug/deps/libfutures_core-5c0a35886093976f.rmeta","--extern","futures_io=/home/chrisp/scr/rust/mem/back/target/rls/debug/deps/libfutures_io-2a8abf0f55dde3b2.rmeta","--extern","futures_timer=/home/chrisp/scr/rust/mem/back/target/rls/debug/deps/libfutures_timer-78da9123a5470a34.rmeta","--extern","kv_log_macro=/home/chrisp/scr/rust/mem/back/target/rls/debug/deps/libkv_log_macro-4989e6e8ee1c1dd1.rmeta","--extern","log=/home/chrisp/scr/rust/mem/back/target/rls/debug/deps/liblog-b8ca7815676709fa.rmeta","--extern","memchr=/home/chrisp/scr/rust/mem/back/target/rls/debug/deps/libmemchr-7fdc0f5b2929483e.rmeta","--extern","num_cpus=/home/chrisp/scr/rust/mem/back/target/rls/debug/deps/libnum_cpus-b6663cdf31579d21.rmeta","--extern","once_cell=/home/chrisp/scr/rust/mem/back/target/rls/debug/deps/libonce_cell-b6679a1ffae1b145.rmeta","--extern","pin_project_lite=/home/chrisp/scr/rust/mem/back/target/rls/debug/deps/libpin_project_lite-1b4eb86172389b95.rmeta","--extern","pin_utils=/home/chrisp/scr/rust/mem/back/target/rls/debug/deps/libpin_utils-2d35bfc5f15dac22.rmeta","--extern","slab=/home/chrisp/scr/rust/mem/back/target/rls/debug/deps/libslab-c270f9c9634d84b4.rmeta","--extern","smol=/home/chrisp/scr/rust/mem/back/target/rls/debug/deps/libsmol-197f8fb38730ce21.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/chrisp/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/chrisp/scr/rust/mem/back/target/rls/debug/deps/libasync_std-e9ef0eeccdcd3b14.rmeta"},"prelude":{"crate_id":{"name":"async_std","disambiguator":[3369844652290334774,5099595922264500512]},"crate_root":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src","external_crates":[{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12673765241971086519,1979875191208036248]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/all.rs","num":2,"id":{"name":"core","disambiguator":[16221439354469382097,15565837348772828253]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15613252303691562375,4556165055238676072]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[12269617896898487533,65142111397584226]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15862783141653200230,4773813417861420487]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[501305773035659233,3889300012469539238]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9126002216567348836,15610270334556716503]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9479301707518706798,13352731276321566042]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[15203654865662241151,17897348793673631766]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10290502124864695413,7672610073830174493]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14838544226648722576,13006716085524361330]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9246889555580827340,16878203682218964580]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8284748314555817558,4769950866534510046]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14671874173783541769,17969261176539820175]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","num":15,"id":{"name":"kv_log_macro","disambiguator":[9549110438809262014,2203525515990944262]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","num":16,"id":{"name":"log","disambiguator":[15431548593249118868,2693370015432533440]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/waker_set.rs","num":17,"id":{"name":"cfg_if","disambiguator":[14120910342779792701,9417334303588493238]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/ready.rs","num":18,"id":{"name":"futures_core","disambiguator":[9699940771339593027,9150941052897031702]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","num":19,"id":{"name":"pin_utils","disambiguator":[4011354305193784913,8671934865247231396]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[11180755593672383318,1923472545722174435]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/waker_set.rs","num":21,"id":{"name":"crossbeam_utils","disambiguator":[13581088153680202647,16010409438987234610]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/waker_set.rs","num":22,"id":{"name":"lazy_static","disambiguator":[310868096459646930,4888036795938822682]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/waker_set.rs","num":23,"id":{"name":"slab","disambiguator":[1071625034261435208,7943119999997615539]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/mod.rs","num":24,"id":{"name":"futures_io","disambiguator":[7036498867148201199,8274790416510336554]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":25,"id":{"name":"smol","disambiguator":[9518679890207515576,14818245002089710862]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":26,"id":{"name":"futures_util","disambiguator":[2883927810235282664,12141422520102234838]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":27,"id":{"name":"proc_macro_hack","disambiguator":[4794601933312575610,15919723353395929246]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":28,"id":{"name":"futures_task","disambiguator":[1991422993109823797,15552661071367297073]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/rt/mod.rs","num":29,"id":{"name":"once_cell","disambiguator":[9094853054732093989,17976453148380825861]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":30,"id":{"name":"futures_sink","disambiguator":[18289512142261575756,16342698699872147633]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":31,"id":{"name":"pin_project","disambiguator":[541452204866130481,4375264023881576773]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":32,"id":{"name":"pin_project_internal","disambiguator":[10050240421559963623,9410665855497653640]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":33,"id":{"name":"futures_channel","disambiguator":[8523018950284517520,224139537411527425]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":34,"id":{"name":"futures_macro","disambiguator":[16179344704106114443,17184822349497043685]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":35,"id":{"name":"proc_macro_nested","disambiguator":[10342932614019065867,10686315834619120211]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/mod.rs","num":36,"id":{"name":"memchr","disambiguator":[18433424966369529987,7935616423453276587]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":37,"id":{"name":"socket2","disambiguator":[17421245625396176558,8182024228243121286]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":38,"id":{"name":"libc","disambiguator":[15595400005844348090,10697968585224272427]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":39,"id":{"name":"concurrent_queue","disambiguator":[3407033686513538499,5669990781491561908]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":40,"id":{"name":"cache_padded","disambiguator":[15875711503447899994,17467157223315286264]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":41,"id":{"name":"scoped_tls","disambiguator":[275276356103154397,165115508056622369]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":42,"id":{"name":"blocking","disambiguator":[18185742548772599405,134480897128897863]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":43,"id":{"name":"parking","disambiguator":[16901367718684714499,3904604625097150055]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":44,"id":{"name":"waker_fn","disambiguator":[10328135549402209995,1367201285018273577]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","num":45,"id":{"name":"async_task","disambiguator":[6468966875300334665,1082609229290846907]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","num":46,"id":{"name":"fastrand","disambiguator":[4968030637774836141,11841796279179452001]}},{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/rt/mod.rs","num":47,"id":{"name":"num_cpus","disambiguator":[11989928122524717159,9217452082757737383]}}],"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":0,"byte_end":11093,"line_start":1,"line_end":321,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":8282},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779665,"byte_end":7779672,"line_start":122,"line_end":122,"column_start":26,"column_end":33},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":2,"index":32057},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779674,"byte_end":7779678,"line_start":122,"line_end":122,"column_start":35,"column_end":39},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":2,"index":8292},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779680,"byte_end":7779685,"line_start":122,"line_end":122,"column_start":41,"column_end":46},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":18,"index":131},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779707,"byte_end":7779712,"line_start":123,"line_end":123,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":18,"index":131},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/ready.rs","byte_start":7932168,"byte_end":7932173,"line_start":4,"line_end":4,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":1103}},{"kind":"Use","ref_id":{"krate":0,"index":1112},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779767,"byte_end":7779776,"line_start":129,"line_end":129,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1137},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779837,"byte_end":7779845,"line_start":134,"line_end":134,"column_start":23,"column_end":31},"alias_span":null,"name":"block_on","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1311},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779868,"byte_end":7779875,"line_start":135,"line_end":135,"column_start":22,"column_end":29},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1180},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779898,"byte_end":7779905,"line_start":136,"line_end":136,"column_start":22,"column_end":29},"alias_span":null,"name":"current","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1331},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779925,"byte_end":7779929,"line_start":137,"line_end":137,"column_start":19,"column_end":23},"alias_span":null,"name":"Task","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1336},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779952,"byte_end":7779958,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"TaskId","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1324},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779985,"byte_end":7779995,"line_start":139,"line_end":139,"column_start":26,"column_end":36},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1206},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7780016,"byte_end":7780021,"line_start":140,"line_end":140,"column_start":20,"column_end":25},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1214},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7780081,"byte_end":7780086,"line_start":142,"line_end":142,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1361},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7780113,"byte_end":7780124,"line_start":143,"line_end":143,"column_start":26,"column_end":37},"alias_span":null,"name":"AccessError","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1354},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7780126,"byte_end":7780134,"line_start":143,"line_end":143,"column_start":39,"column_end":47},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1221},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7780637,"byte_end":7780651,"line_start":164,"line_end":164,"column_start":29,"column_end":43},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":1392},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7780868,"byte_end":7780879,"line_start":172,"line_end":172,"column_start":26,"column_end":37},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":2,"index":8192},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7783463,"byte_end":7783469,"line_start":50,"line_end":50,"column_start":21,"column_end":27},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":2,"index":8192},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8069815,"byte_end":8069821,"line_start":139,"line_end":139,"column_start":40,"column_end":46},"alias_span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8066042,"byte_end":8066048,"line_start":61,"line_end":61,"column_start":15,"column_end":21},"name":"Future","value":"","parent":{"krate":0,"index":1396}},{"kind":"Use","ref_id":{"krate":0,"index":1573},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7783533,"byte_end":7783540,"line_start":55,"line_end":55,"column_start":22,"column_end":29},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":1590},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7783563,"byte_end":7783570,"line_start":56,"line_end":56,"column_start":22,"column_end":29},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":1606},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7783591,"byte_end":7783596,"line_start":57,"line_end":57,"column_start":20,"column_end":25},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":63},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7783724,"byte_end":7783731,"line_start":65,"line_end":65,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":1610},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7783733,"byte_end":7783745,"line_start":65,"line_end":65,"column_start":28,"column_end":40},"alias_span":null,"name":"TimeoutError","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":1628},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7783858,"byte_end":7783868,"line_start":70,"line_end":70,"column_start":26,"column_end":36},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":1014},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796362,"byte_end":7796367,"line_start":303,"line_end":303,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2026},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796369,"byte_end":7796374,"line_start":303,"line_end":303,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":1028},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796395,"byte_end":7796402,"line_start":304,"line_end":304,"column_start":19,"column_end":26},"alias_span":null,"name":"from_fn","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2032},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796404,"byte_end":7796410,"line_start":304,"line_end":304,"column_start":28,"column_end":34},"alias_span":null,"name":"FromFn","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":1044},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796433,"byte_end":7796442,"line_start":305,"line_end":305,"column_start":21,"column_end":30},"alias_span":null,"name":"from_iter","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":7324},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796444,"byte_end":7796452,"line_start":305,"line_end":305,"column_start":32,"column_end":40},"alias_span":null,"name":"FromIter","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":1061},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796470,"byte_end":7796474,"line_start":306,"line_end":306,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":7285},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796476,"byte_end":7796480,"line_start":306,"line_end":306,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":1076},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796500,"byte_end":7796506,"line_start":307,"line_end":307,"column_start":18,"column_end":24},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2041},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796508,"byte_end":7796514,"line_start":307,"line_end":307,"column_start":26,"column_end":32},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":1090},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796539,"byte_end":7796550,"line_start":308,"line_end":308,"column_start":23,"column_end":34},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2050},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796552,"byte_end":7796562,"line_start":308,"line_end":308,"column_start":36,"column_end":46},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":78}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796581,"byte_end":7796582,"line_start":309,"line_end":309,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Stream, Fuse","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":7710},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7799711,"byte_end":7799716,"line_start":128,"line_end":128,"column_start":20,"column_end":25},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":98}},{"kind":"Use","ref_id":{"krate":0,"index":2172},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796959,"byte_end":7796976,"line_start":333,"line_end":333,"column_start":34,"column_end":51},"alias_span":null,"name":"DoubleEndedStream","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2187},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7797009,"byte_end":7797024,"line_start":334,"line_end":334,"column_start":32,"column_end":47},"alias_span":null,"name":"ExactSizeStream","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2201},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7797047,"byte_end":7797053,"line_start":335,"line_end":335,"column_start":22,"column_end":28},"alias_span":null,"name":"extend","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2196},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7797055,"byte_end":7797061,"line_start":335,"line_end":335,"column_start":30,"column_end":36},"alias_span":null,"name":"Extend","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2212},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7797089,"byte_end":7797099,"line_start":336,"line_end":336,"column_start":26,"column_end":36},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2219},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7797127,"byte_end":7797138,"line_start":337,"line_end":337,"column_start":27,"column_end":38},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2233},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7797163,"byte_end":7797171,"line_start":338,"line_end":338,"column_start":24,"column_end":32},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2337},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7797173,"byte_end":7797181,"line_start":338,"line_end":338,"column_start":34,"column_end":42},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2239},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7797209,"byte_end":7797219,"line_start":339,"line_end":339,"column_start":26,"column_end":36},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2259},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7797243,"byte_end":7797250,"line_start":340,"line_end":340,"column_start":23,"column_end":30},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2342},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7797252,"byte_end":7797259,"line_start":340,"line_end":340,"column_start":32,"column_end":39},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2277},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7797283,"byte_end":7797290,"line_start":341,"line_end":341,"column_start":22,"column_end":29},"alias_span":null,"name":"Product","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":7710},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7797312,"byte_end":7797317,"line_start":342,"line_end":342,"column_start":21,"column_end":26},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2295},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7797344,"byte_end":7797354,"line_start":343,"line_end":343,"column_start":26,"column_end":36},"alias_span":null,"name":"successors","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":7128},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7797356,"byte_end":7797366,"line_start":343,"line_end":343,"column_start":38,"column_end":48},"alias_span":null,"name":"Successors","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2307},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7797386,"byte_end":7797389,"line_start":344,"line_end":344,"column_start":18,"column_end":21},"alias_span":null,"name":"Sum","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":1,"index":2505},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181348,"byte_end":8181353,"line_start":276,"line_end":276,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":1,"index":6538},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181355,"byte_end":8181364,"line_start":276,"line_end":276,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":1,"index":6601},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181366,"byte_end":8181373,"line_start":276,"line_end":276,"column_start":41,"column_end":48},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":1,"index":2899},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181375,"byte_end":8181385,"line_start":276,"line_end":276,"column_start":50,"column_end":60},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":1,"index":2503},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181387,"byte_end":8181393,"line_start":276,"line_end":276,"column_start":62,"column_end":68},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":1,"index":6615},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181395,"byte_end":8181403,"line_start":276,"line_end":276,"column_start":70,"column_end":78},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":24,"index":27},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181430,"byte_end":8181437,"line_start":278,"line_end":278,"column_start":24,"column_end":31},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":7077},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181439,"byte_end":8181444,"line_start":278,"line_end":278,"column_start":33,"column_end":38},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":7029},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181446,"byte_end":8181451,"line_start":278,"line_end":278,"column_start":40,"column_end":45},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":6870},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181478,"byte_end":8181487,"line_start":279,"line_end":279,"column_start":25,"column_end":34},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":6829},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181514,"byte_end":8181523,"line_start":280,"line_end":280,"column_start":26,"column_end":35},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":3990},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181525,"byte_end":8181539,"line_start":280,"line_end":280,"column_start":37,"column_end":51},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":3774},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181560,"byte_end":8181564,"line_start":281,"line_end":281,"column_start":19,"column_end":23},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":3998},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181586,"byte_end":8181592,"line_start":282,"line_end":282,"column_start":21,"column_end":27},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":3841},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181614,"byte_end":8181619,"line_start":283,"line_end":283,"column_start":21,"column_end":26},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":3842},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181621,"byte_end":8181626,"line_start":283,"line_end":283,"column_start":28,"column_end":33},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":2928}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181287,"byte_end":8181288,"line_start":272,"line_end":272,"column_start":35,"column_end":36},"alias_span":null,"name":"*","value":"Read, _","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":3861},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181671,"byte_end":8181677,"line_start":285,"line_end":285,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":3862},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181679,"byte_end":8181685,"line_start":285,"line_end":285,"column_start":30,"column_end":36},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":24,"index":25},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181706,"byte_end":8181710,"line_start":286,"line_end":286,"column_start":19,"column_end":23},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":3877},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181731,"byte_end":8181735,"line_start":287,"line_end":287,"column_start":20,"column_end":24},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":3878},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181737,"byte_end":8181741,"line_start":287,"line_end":287,"column_start":26,"column_end":30},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":24,"index":20},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181763,"byte_end":8181768,"line_start":288,"line_end":288,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":24,"index":27},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8220085,"byte_end":8220092,"line_start":12,"line_end":12,"column_start":20,"column_end":27},"alias_span":null,"name":"BufRead","value":"","parent":{"krate":0,"index":3236}},{"kind":"Use","ref_id":{"krate":24,"index":17},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8220131,"byte_end":8220135,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":3236}},{"kind":"Use","ref_id":{"krate":24,"index":25},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8220174,"byte_end":8220178,"line_start":16,"line_end":16,"column_start":20,"column_end":24},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":3236}},{"kind":"Use","ref_id":{"krate":24,"index":20},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8220217,"byte_end":8220222,"line_start":18,"line_end":18,"column_start":20,"column_end":25},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":3236}},{"kind":"Use","ref_id":{"krate":0,"index":3898},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8220269,"byte_end":8220279,"line_start":21,"line_end":21,"column_start":30,"column_end":40},"alias_span":null,"name":"BufReadExt","value":"","parent":{"krate":0,"index":3236}},{"kind":"Use","ref_id":{"krate":0,"index":3925},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8220321,"byte_end":8220328,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"alias_span":null,"name":"ReadExt","value":"","parent":{"krate":0,"index":3236}},{"kind":"Use","ref_id":{"krate":0,"index":3955},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8220370,"byte_end":8220377,"line_start":25,"line_end":25,"column_start":26,"column_end":33},"alias_span":null,"name":"SeekExt","value":"","parent":{"krate":0,"index":3236}},{"kind":"Use","ref_id":{"krate":0,"index":3971},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8220420,"byte_end":8220428,"line_start":27,"line_end":27,"column_start":27,"column_end":35},"alias_span":null,"name":"WriteExt","value":"","parent":{"krate":0,"index":3236}},{"kind":"Use","ref_id":{"krate":24,"index":25},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/seek/mod.rs","byte_start":8275491,"byte_end":8275500,"line_start":51,"line_end":51,"column_start":36,"column_end":45},"alias_span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/seek/mod.rs","byte_start":8275090,"byte_end":8275094,"line_start":35,"line_end":35,"column_start":15,"column_end":19},"name":"Seek","value":"","parent":{"krate":0,"index":3533}},{"kind":"Use","ref_id":{"krate":24,"index":20},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/mod.rs","byte_start":8280535,"byte_end":8280545,"line_start":84,"line_end":84,"column_start":37,"column_end":47},"alias_span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/mod.rs","byte_start":8279352,"byte_end":8279357,"line_start":46,"line_end":46,"column_start":15,"column_end":20},"name":"Write","value":"","parent":{"krate":0,"index":3555}},{"kind":"Use","ref_id":{"krate":0,"index":4098},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8182172,"byte_end":8182179,"line_start":311,"line_end":311,"column_start":21,"column_end":28},"alias_span":null,"name":"_eprint","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":4095},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8182181,"byte_end":8182187,"line_start":311,"line_end":311,"column_start":30,"column_end":36},"alias_span":null,"name":"_print","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":4057},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8182251,"byte_end":8182257,"line_start":314,"line_end":314,"column_start":22,"column_end":28},"alias_span":null,"name":"stderr","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":4120},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8182259,"byte_end":8182265,"line_start":314,"line_end":314,"column_start":30,"column_end":36},"alias_span":null,"name":"Stderr","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":4078},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8182327,"byte_end":8182332,"line_start":316,"line_end":316,"column_start":21,"column_end":26},"alias_span":null,"name":"stdin","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":4154},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8182334,"byte_end":8182339,"line_start":316,"line_end":316,"column_start":28,"column_end":33},"alias_span":null,"name":"Stdin","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":4113},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8182402,"byte_end":8182408,"line_start":318,"line_end":318,"column_start":22,"column_end":28},"alias_span":null,"name":"stdout","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":4189},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8182410,"byte_end":8182416,"line_start":318,"line_end":318,"column_start":30,"column_end":36},"alias_span":null,"name":"Stdout","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":0,"index":4035},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8182440,"byte_end":8182447,"line_start":319,"line_end":319,"column_start":22,"column_end":29},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":2928}},{"kind":"Use","ref_id":{"krate":1,"index":8188},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/io.rs","byte_start":8355371,"byte_end":8355378,"line_start":4,"line_end":4,"column_start":33,"column_end":40},"alias_span":null,"name":"AsRawFd","value":"","parent":{"krate":0,"index":4224}},{"kind":"Use","ref_id":{"krate":1,"index":8190},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/io.rs","byte_start":8355380,"byte_end":8355389,"line_start":4,"line_end":4,"column_start":42,"column_end":51},"alias_span":null,"name":"FromRawFd","value":"","parent":{"krate":0,"index":4224}},{"kind":"Use","ref_id":{"krate":1,"index":8192},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/io.rs","byte_start":8355391,"byte_end":8355400,"line_start":4,"line_end":4,"column_start":53,"column_end":62},"alias_span":null,"name":"IntoRawFd","value":"","parent":{"krate":0,"index":4224}},{"kind":"Use","ref_id":{"krate":1,"index":8187},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/io.rs","byte_start":8355402,"byte_end":8355407,"line_start":4,"line_end":4,"column_start":64,"column_end":69},"alias_span":null,"name":"RawFd","value":"","parent":{"krate":0,"index":4224}},{"kind":"Use","ref_id":{"krate":1,"index":8174},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8358465,"byte_end":8358478,"line_start":33,"line_end":33,"column_start":33,"column_end":46},"alias_span":null,"name":"DirBuilderExt","value":"","parent":{"krate":0,"index":4230}},{"kind":"Use","ref_id":{"krate":1,"index":8167},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8358480,"byte_end":8358491,"line_start":33,"line_end":33,"column_start":48,"column_end":59},"alias_span":null,"name":"DirEntryExt","value":"","parent":{"krate":0,"index":4230}},{"kind":"Use","ref_id":{"krate":1,"index":8117},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8358493,"byte_end":8358507,"line_start":33,"line_end":33,"column_start":61,"column_end":75},"alias_span":null,"name":"OpenOptionsExt","value":"","parent":{"krate":0,"index":4230}},{"kind":"Use","ref_id":{"krate":0,"index":4259},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/mod.rs","byte_start":8360099,"byte_end":8360111,"line_start":3,"line_end":3,"column_start":19,"column_end":31},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":4240}},{"kind":"Use","ref_id":{"krate":0,"index":4400},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/mod.rs","byte_start":8360132,"byte_end":8360140,"line_start":4,"line_end":4,"column_start":20,"column_end":28},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":4240}},{"kind":"Use","ref_id":{"krate":0,"index":4319},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/mod.rs","byte_start":8360142,"byte_end":8360154,"line_start":4,"line_end":4,"column_start":30,"column_end":42},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":4240}},{"kind":"Use","ref_id":{"krate":0,"index":4407},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/mod.rs","byte_start":8360173,"byte_end":8360183,"line_start":5,"line_end":5,"column_start":17,"column_end":27},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":4240}},{"kind":"Use","ref_id":{"krate":1,"index":9461},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/mod.rs","byte_start":8360275,"byte_end":8360285,"line_start":12,"line_end":12,"column_start":33,"column_end":43},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":4240}},{"kind":"Use","ref_id":{"krate":2,"index":8192},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183090,"byte_end":8183096,"line_start":16,"line_end":16,"column_start":26,"column_end":32},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":2931}},{"kind":"Use","ref_id":{"krate":18,"index":68},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183147,"byte_end":8183153,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":2931}},{"kind":"Use","ref_id":{"krate":0,"index":1544},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183210,"byte_end":8183219,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":2931}},{"kind":"Use","ref_id":{"krate":0,"index":1906},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183275,"byte_end":8183284,"line_start":23,"line_end":23,"column_start":36,"column_end":45},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":2931}},{"kind":"Use","ref_id":{"krate":24,"index":27},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183331,"byte_end":8183338,"line_start":25,"line_end":25,"column_start":24,"column_end":31},"alias_span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183342,"byte_end":8183343,"line_start":25,"line_end":25,"column_start":35,"column_end":36},"name":"_","value":"","parent":{"krate":0,"index":2931}},{"kind":"Use","ref_id":{"krate":24,"index":17},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183390,"byte_end":8183394,"line_start":27,"line_end":27,"column_start":24,"column_end":28},"alias_span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183398,"byte_end":8183399,"line_start":27,"line_end":27,"column_start":32,"column_end":33},"name":"_","value":"","parent":{"krate":0,"index":2931}},{"kind":"Use","ref_id":{"krate":24,"index":25},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183446,"byte_end":8183450,"line_start":29,"line_end":29,"column_start":24,"column_end":28},"alias_span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183454,"byte_end":8183455,"line_start":29,"line_end":29,"column_start":32,"column_end":33},"name":"_","value":"","parent":{"krate":0,"index":2931}},{"kind":"Use","ref_id":{"krate":24,"index":20},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183502,"byte_end":8183507,"line_start":31,"line_end":31,"column_start":24,"column_end":29},"alias_span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183511,"byte_end":8183512,"line_start":31,"line_end":31,"column_start":33,"column_end":34},"name":"_","value":"","parent":{"krate":0,"index":2931}},{"kind":"Use","ref_id":{"krate":0,"index":3898},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183569,"byte_end":8183579,"line_start":34,"line_end":34,"column_start":33,"column_end":43},"alias_span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183583,"byte_end":8183584,"line_start":34,"line_end":34,"column_start":47,"column_end":48},"name":"_","value":"","parent":{"krate":0,"index":2931}},{"kind":"Use","ref_id":{"krate":0,"index":3925},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183640,"byte_end":8183647,"line_start":36,"line_end":36,"column_start":33,"column_end":40},"alias_span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183651,"byte_end":8183652,"line_start":36,"line_end":36,"column_start":44,"column_end":45},"name":"_","value":"","parent":{"krate":0,"index":2931}},{"kind":"Use","ref_id":{"krate":0,"index":3955},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183708,"byte_end":8183715,"line_start":38,"line_end":38,"column_start":33,"column_end":40},"alias_span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183719,"byte_end":8183720,"line_start":38,"line_end":38,"column_start":44,"column_end":45},"name":"_","value":"","parent":{"krate":0,"index":2931}},{"kind":"Use","ref_id":{"krate":0,"index":3971},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183776,"byte_end":8183784,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"alias_span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183788,"byte_end":8183789,"line_start":40,"line_end":40,"column_start":45,"column_end":46},"name":"_","value":"","parent":{"krate":0,"index":2931}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183850,"byte_end":8183860,"line_start":45,"line_end":45,"column_start":20,"column_end":30},"alias_span":null,"name":"task_local","value":"","parent":{"krate":0,"index":2931}},{"kind":"Use","ref_id":{"krate":0,"index":2172},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183930,"byte_end":8183947,"line_start":50,"line_end":50,"column_start":28,"column_end":45},"alias_span":null,"name":"DoubleEndedStream","value":"","parent":{"krate":0,"index":2931}},{"kind":"Use","ref_id":{"krate":0,"index":2187},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183998,"byte_end":8184013,"line_start":52,"line_end":52,"column_start":28,"column_end":43},"alias_span":null,"name":"ExactSizeStream","value":"","parent":{"krate":0,"index":2931}},{"kind":"Use","ref_id":{"krate":5,"index":3840},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190824,"byte_end":8190827,"line_start":177,"line_end":177,"column_start":21,"column_end":24},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":5,"index":3858},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190829,"byte_end":8190833,"line_start":177,"line_end":177,"column_start":26,"column_end":30},"alias_span":null,"name":"Weak","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":0,"index":2958},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190853,"byte_end":8190858,"line_start":179,"line_end":179,"column_start":17,"column_end":22},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":0,"index":3004},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190860,"byte_end":8190870,"line_start":179,"line_end":179,"column_start":24,"column_end":34},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":0,"index":3052},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190890,"byte_end":8190896,"line_start":180,"line_end":180,"column_start":18,"column_end":24},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":0,"index":3116},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190898,"byte_end":8190913,"line_start":180,"line_end":180,"column_start":26,"column_end":41},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":0,"index":3138},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190915,"byte_end":8190931,"line_start":180,"line_end":180,"column_start":43,"column_end":59},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":0,"index":4676},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190997,"byte_end":8191004,"line_start":186,"line_end":186,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":0,"index":4687},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8191006,"byte_end":8191023,"line_start":186,"line_end":186,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":0,"index":4545},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8191048,"byte_end":8191055,"line_start":187,"line_end":187,"column_start":23,"column_end":30},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":0,"index":4547},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8191057,"byte_end":8191063,"line_start":187,"line_end":187,"column_start":32,"column_end":38},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":0,"index":4584},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8191065,"byte_end":8191073,"line_start":187,"line_end":187,"column_start":40,"column_end":48},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":0,"index":6708},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8191075,"byte_end":8191084,"line_start":187,"line_end":187,"column_start":50,"column_end":59},"alias_span":null,"name":"RecvError","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":0,"index":6718},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8191086,"byte_end":8191098,"line_start":187,"line_end":187,"column_start":61,"column_end":73},"alias_span":null,"name":"TryRecvError","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":0,"index":4709},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8191100,"byte_end":8191112,"line_start":187,"line_end":187,"column_start":75,"column_end":87},"alias_span":null,"name":"TrySendError","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":0,"index":4465},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8191136,"byte_end":8191143,"line_start":188,"line_end":188,"column_start":22,"column_end":29},"alias_span":null,"name":"Condvar","value":"","parent":{"krate":0,"index":2932}},{"kind":"Use","ref_id":{"krate":0,"index":5759},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441568,"byte_end":8441578,"line_start":30,"line_end":30,"column_start":22,"column_end":32},"alias_span":null,"name":"DirBuilder","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":4840},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441599,"byte_end":8441607,"line_start":31,"line_end":31,"column_start":20,"column_end":28},"alias_span":null,"name":"DirEntry","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":4895},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441623,"byte_end":8441627,"line_start":32,"line_end":32,"column_start":15,"column_end":19},"alias_span":null,"name":"File","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":1,"index":6478},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441648,"byte_end":8441656,"line_start":33,"line_end":33,"column_start":20,"column_end":28},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":1,"index":6447},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441676,"byte_end":8441684,"line_start":34,"line_end":34,"column_start":19,"column_end":27},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":5785},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441708,"byte_end":8441719,"line_start":35,"line_end":35,"column_start":23,"column_end":34},"alias_span":null,"name":"OpenOptions","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":1,"index":6464},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441742,"byte_end":8441753,"line_start":36,"line_end":36,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":5797},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441773,"byte_end":8441780,"line_start":37,"line_end":37,"column_start":19,"column_end":26},"alias_span":null,"name":"ReadDir","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":4777},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441805,"byte_end":8441817,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"alias_span":null,"name":"canonicalize","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":4788},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441833,"byte_end":8441837,"line_start":40,"line_end":40,"column_start":15,"column_end":19},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":4800},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441859,"byte_end":8441869,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"alias_span":null,"name":"create_dir","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":4811},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441895,"byte_end":8441909,"line_start":42,"line_end":42,"column_start":25,"column_end":39},"alias_span":null,"name":"create_dir_all","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":5030},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441930,"byte_end":8441939,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"alias_span":null,"name":"hard_link","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":5041},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441959,"byte_end":8441967,"line_start":44,"line_end":44,"column_start":19,"column_end":27},"alias_span":null,"name":"metadata","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":5073},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441983,"byte_end":8441987,"line_start":45,"line_end":45,"column_start":15,"column_end":19},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":5092},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8442007,"byte_end":8442015,"line_start":46,"line_end":46,"column_start":19,"column_end":27},"alias_span":null,"name":"read_dir","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":5112},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8442036,"byte_end":8442045,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"alias_span":null,"name":"read_link","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":5123},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8442071,"byte_end":8442085,"line_start":48,"line_end":48,"column_start":25,"column_end":39},"alias_span":null,"name":"read_to_string","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":5134},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8442107,"byte_end":8442117,"line_start":49,"line_end":49,"column_start":21,"column_end":31},"alias_span":null,"name":"remove_dir","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":5145},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8442143,"byte_end":8442157,"line_start":50,"line_end":50,"column_start":25,"column_end":39},"alias_span":null,"name":"remove_dir_all","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":5156},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8442180,"byte_end":8442191,"line_start":51,"line_end":51,"column_start":22,"column_end":33},"alias_span":null,"name":"remove_file","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":5167},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8442209,"byte_end":8442215,"line_start":52,"line_end":52,"column_start":17,"column_end":23},"alias_span":null,"name":"rename","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":5179},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8442242,"byte_end":8442257,"line_start":53,"line_end":53,"column_start":26,"column_end":41},"alias_span":null,"name":"set_permissions","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":5189},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8442285,"byte_end":8442301,"line_start":54,"line_end":54,"column_start":27,"column_end":43},"alias_span":null,"name":"symlink_metadata","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":0,"index":5199},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8442318,"byte_end":8442323,"line_start":55,"line_end":55,"column_start":16,"column_end":21},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":4744}},{"kind":"Use","ref_id":{"krate":1,"index":6478},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file_type.rs","byte_start":8484873,"byte_end":8484881,"line_start":2,"line_end":2,"column_start":22,"column_end":30},"alias_span":null,"name":"FileType","value":"","parent":{"krate":0,"index":5024}},{"kind":"Use","ref_id":{"krate":1,"index":6447},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8490113,"byte_end":8490121,"line_start":41,"line_end":41,"column_start":22,"column_end":30},"alias_span":null,"name":"Metadata","value":"","parent":{"krate":0,"index":5037}},{"kind":"Use","ref_id":{"krate":1,"index":6464},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/permissions.rs","byte_start":8504846,"byte_end":8504857,"line_start":2,"line_end":2,"column_start":22,"column_end":33},"alias_span":null,"name":"Permissions","value":"","parent":{"krate":0,"index":5067}},{"kind":"Use","ref_id":{"krate":1,"index":3795},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524546,"byte_end":8524558,"line_start":80,"line_end":80,"column_start":5,"column_end":17},"alias_span":null,"name":"is_separator","value":"","parent":{"krate":0,"index":5206}},{"kind":"Use","ref_id":{"krate":1,"index":6984},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524560,"byte_end":8524569,"line_start":80,"line_end":80,"column_start":19,"column_end":28},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":5206}},{"kind":"Use","ref_id":{"krate":1,"index":4068},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524571,"byte_end":8524578,"line_start":80,"line_end":80,"column_start":30,"column_end":37},"alias_span":null,"name":"Display","value":"","parent":{"krate":0,"index":5206}},{"kind":"Use","ref_id":{"krate":1,"index":6881},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524580,"byte_end":8524586,"line_start":80,"line_end":80,"column_start":39,"column_end":45},"alias_span":null,"name":"Prefix","value":"","parent":{"krate":0,"index":5206}},{"kind":"Use","ref_id":{"krate":1,"index":6967},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524588,"byte_end":8524603,"line_start":80,"line_end":80,"column_start":47,"column_end":62},"alias_span":null,"name":"PrefixComponent","value":"","parent":{"krate":0,"index":5206}},{"kind":"Use","ref_id":{"krate":1,"index":7062},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524605,"byte_end":8524621,"line_start":80,"line_end":80,"column_start":64,"column_end":80},"alias_span":null,"name":"StripPrefixError","value":"","parent":{"krate":0,"index":5206}},{"kind":"Use","ref_id":{"krate":1,"index":3796},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524623,"byte_end":8524637,"line_start":80,"line_end":80,"column_start":82,"column_end":96},"alias_span":null,"name":"MAIN_SEPARATOR","value":"","parent":{"krate":0,"index":5206}},{"kind":"Use","ref_id":{"krate":0,"index":5811},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524662,"byte_end":8524671,"line_start":83,"line_end":83,"column_start":20,"column_end":29},"alias_span":null,"name":"Ancestors","value":"","parent":{"krate":0,"index":5206}},{"kind":"Use","ref_id":{"krate":0,"index":5822},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524693,"byte_end":8524703,"line_start":84,"line_end":84,"column_start":21,"column_end":31},"alias_span":null,"name":"Components","value":"","parent":{"krate":0,"index":5206}},{"kind":"Use","ref_id":{"krate":0,"index":5852},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524719,"byte_end":8524723,"line_start":85,"line_end":85,"column_start":15,"column_end":19},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5206}},{"kind":"Use","ref_id":{"krate":0,"index":5858},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524739,"byte_end":8524743,"line_start":86,"line_end":86,"column_start":15,"column_end":19},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":5206}},{"kind":"Use","ref_id":{"krate":0,"index":6136},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524762,"byte_end":8524769,"line_start":87,"line_end":87,"column_start":18,"column_end":25},"alias_span":null,"name":"PathBuf","value":"","parent":{"krate":0,"index":5206}},{"kind":"Use","ref_id":{"krate":1,"index":6756},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573422,"byte_end":8573436,"line_start":59,"line_end":59,"column_start":19,"column_end":33},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":5511}},{"kind":"Use","ref_id":{"krate":1,"index":6776},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573456,"byte_end":8573464,"line_start":60,"line_end":60,"column_start":19,"column_end":27},"alias_span":null,"name":"Shutdown","value":"","parent":{"krate":0,"index":5511}},{"kind":"Use","ref_id":{"krate":1,"index":6691},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573485,"byte_end":8573491,"line_start":61,"line_end":61,"column_start":20,"column_end":26},"alias_span":null,"name":"IpAddr","value":"","parent":{"krate":0,"index":5511}},{"kind":"Use","ref_id":{"krate":1,"index":6721},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573493,"byte_end":8573501,"line_start":61,"line_end":61,"column_start":28,"column_end":36},"alias_span":null,"name":"Ipv4Addr","value":"","parent":{"krate":0,"index":5511}},{"kind":"Use","ref_id":{"krate":1,"index":6724},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573503,"byte_end":8573511,"line_start":61,"line_end":61,"column_start":38,"column_end":46},"alias_span":null,"name":"Ipv6Addr","value":"","parent":{"krate":0,"index":5511}},{"kind":"Use","ref_id":{"krate":1,"index":6663},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573533,"byte_end":8573543,"line_start":62,"line_end":62,"column_start":20,"column_end":30},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":5511}},{"kind":"Use","ref_id":{"krate":1,"index":6685},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573545,"byte_end":8573557,"line_start":62,"line_end":62,"column_start":32,"column_end":44},"alias_span":null,"name":"SocketAddrV4","value":"","parent":{"krate":0,"index":5511}},{"kind":"Use","ref_id":{"krate":1,"index":6688},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573559,"byte_end":8573571,"line_start":62,"line_end":62,"column_start":46,"column_end":58},"alias_span":null,"name":"SocketAddrV6","value":"","parent":{"krate":0,"index":5511}},{"kind":"Use","ref_id":{"krate":0,"index":5547},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573624,"byte_end":8573637,"line_start":65,"line_end":65,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":5511}},{"kind":"Use","ref_id":{"krate":0,"index":6167},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573688,"byte_end":8573696,"line_start":67,"line_end":67,"column_start":15,"column_end":23},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":5511}},{"kind":"Use","ref_id":{"krate":0,"index":6163},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573698,"byte_end":8573709,"line_start":67,"line_end":67,"column_start":25,"column_end":36},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":5511}},{"kind":"Use","ref_id":{"krate":0,"index":6185},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573711,"byte_end":8573720,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":5511}},{"kind":"Use","ref_id":{"krate":0,"index":6202},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573771,"byte_end":8573780,"line_start":69,"line_end":69,"column_start":14,"column_end":23},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":5511}},{"kind":"Use","ref_id":{"krate":2,"index":29654},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/pin/mod.rs","byte_start":8621112,"byte_end":8621115,"line_start":6,"line_end":6,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":6217}},{"kind":"Use","ref_id":{"krate":1,"index":7393},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/process/mod.rs","byte_start":8621503,"byte_end":8621513,"line_start":11,"line_end":11,"column_start":24,"column_end":34},"alias_span":null,"name":"ExitStatus","value":"","parent":{"krate":0,"index":6219}},{"kind":"Use","ref_id":{"krate":1,"index":7380},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/process/mod.rs","byte_start":8621515,"byte_end":8621521,"line_start":11,"line_end":11,"column_start":36,"column_end":42},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":6219}},{"kind":"Use","ref_id":{"krate":1,"index":4270},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/process/mod.rs","byte_start":8621572,"byte_end":8621577,"line_start":14,"line_end":14,"column_start":24,"column_end":29},"alias_span":null,"name":"abort","value":"","parent":{"krate":0,"index":6219}},{"kind":"Use","ref_id":{"krate":1,"index":4269},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/process/mod.rs","byte_start":8621579,"byte_end":8621583,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"exit","value":"","parent":{"krate":0,"index":6219}},{"kind":"Use","ref_id":{"krate":1,"index":4271},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/process/mod.rs","byte_start":8621585,"byte_end":8621587,"line_start":14,"line_end":14,"column_start":37,"column_end":39},"alias_span":null,"name":"id","value":"","parent":{"krate":0,"index":6219}},{"kind":"Use","ref_id":{"krate":2,"index":11},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":11075,"byte_end":11080,"line_start":320,"line_end":320,"column_start":19,"column_end":24},"alias_span":null,"name":"write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":12},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":11082,"byte_end":11089,"line_start":320,"line_end":320,"column_start":26,"column_end":33},"alias_span":null,"name":"writeln","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":0,"byte_end":11093,"line_start":1,"line_end":321,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":35},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":78},{"krate":0,"index":2928},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":4744},{"krate":0,"index":5206},{"krate":0,"index":5511},{"krate":0,"index":5748},{"krate":0,"index":6217},{"krate":0,"index":6219},{"krate":0,"index":6227},{"krate":0,"index":6249},{"krate":0,"index":6304},{"krate":0,"index":6322},{"krate":0,"index":6339},{"krate":0,"index":6412},{"krate":0,"index":6705}],"decl_id":null,"docs":" # Async version of the Rust standard library","sig":null,"attributes":[{"value":"! # Async version of the Rust standard library","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":0,"byte_end":48,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":49,"byte_end":52,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! `async-std` is a foundation of portable Rust software, a set of minimal and battle-tested","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":53,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"! shared abstractions for the [broader Rust ecosystem][crates.io]. It offers std types, like","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":147,"byte_end":241,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"! [`Future`] and [`Stream`], library-defined [operations on language primitives](#primitives),","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":242,"byte_end":338,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"! [standard macros](#macros), [I/O] and [multithreading], among [many other things][other].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":339,"byte_end":432,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":433,"byte_end":436,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! `async-std` is available from [crates.io]. Once included, `async-std` can be accessed","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":437,"byte_end":526,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"! in [`use`] statements through the path `async_std`, as in [`use async_std::future`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":527,"byte_end":615,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":616,"byte_end":619,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! [I/O]: io/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":620,"byte_end":644,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"! [multithreading]: task/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":645,"byte_end":682,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"! [other]: #what-is-in-the-standard-library-documentation","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":683,"byte_end":742,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"! [`use`]: https://doc.rust-lang.org/book/ch07-02-defining-modules-to-control-scope-and-privacy.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":743,"byte_end":845,"line_start":14,"line_end":14,"column_start":1,"column_end":103}},{"value":"! [`use async_std::future`]: future/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":846,"byte_end":894,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"! [crates.io]: https://crates.io","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":895,"byte_end":929,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"! [`Future`]: future/trait.Future.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":930,"byte_end":970,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"! [`Stream`]: stream/trait.Stream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":971,"byte_end":1011,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1012,"byte_end":1015,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! # How to read this documentation","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1016,"byte_end":1052,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1053,"byte_end":1056,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! If you already know the name of what you are looking for, the fastest way to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1057,"byte_end":1137,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"! find it is to use the <a href=\"#\" onclick=\"focusSearchBar();\">search","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1138,"byte_end":1210,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"! bar</a> at the top of the page.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1211,"byte_end":1246,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1247,"byte_end":1250,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Otherwise, you may want to jump to one of these useful sections:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1251,"byte_end":1319,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1320,"byte_end":1323,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! * [`async_std::*` modules](#modules)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1324,"byte_end":1364,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"! * [Async macros](#macros)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1365,"byte_end":1394,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"! * [The Async Prelude](prelude/index.html)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1395,"byte_end":1440,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"! * [Cargo.toml feature flags](#features)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1441,"byte_end":1484,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"! * [Examples](#examples)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1485,"byte_end":1512,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1513,"byte_end":1516,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! If this is your first time, the documentation for `async-std` is","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1517,"byte_end":1585,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"! written to be casually perused. Clicking on interesting things should","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1586,"byte_end":1659,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"! generally lead you to interesting places. Still, there are important bits","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1660,"byte_end":1737,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"! you don't want to miss, so read on for a tour of the `async-std` and","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1738,"byte_end":1810,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"! its documentation!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1811,"byte_end":1833,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1834,"byte_end":1837,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! Once you are familiar with the contents of `async-std` you may","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1838,"byte_end":1904,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"! begin to find the verbosity of the prose distracting. At this stage in your","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1905,"byte_end":1984,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"! development you may want to press the `[-]` button near the top of the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":1985,"byte_end":2059,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"! page to collapse it into a more skimmable view.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2060,"byte_end":2111,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2112,"byte_end":2115,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! While you are looking at that `[-]` button also notice the `[src]`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2116,"byte_end":2186,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"! button. Rust's API documentation comes with the source code and you are","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2187,"byte_end":2262,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"! encouraged to read it. The `async-std` source is generally high","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2263,"byte_end":2330,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"! quality and a peek behind the curtains is often enlightening.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2331,"byte_end":2396,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2397,"byte_end":2400,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! Modules in this crate are organized in the same way as in `std`, except blocking","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2401,"byte_end":2485,"line_start":50,"line_end":50,"column_start":1,"column_end":85}},{"value":"! functions have been replaced with async functions and threads have been replaced with","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2486,"byte_end":2575,"line_start":51,"line_end":51,"column_start":1,"column_end":90}},{"value":"! lightweight tasks.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2576,"byte_end":2598,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2599,"byte_end":2602,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! You can find more information, reading materials, and other resources here:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2603,"byte_end":2682,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2683,"byte_end":2686,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! * [The async-std website](https://async.rs/)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2687,"byte_end":2735,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"! * [The async-std book](https://book.async.rs)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2736,"byte_end":2785,"line_start":57,"line_end":57,"column_start":1,"column_end":50}},{"value":"! * [GitHub repository](https://github.com/async-rs/async-std)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2786,"byte_end":2850,"line_start":58,"line_end":58,"column_start":1,"column_end":65}},{"value":"! * [List of code examples](https://github.com/async-rs/async-std/tree/master/examples)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2851,"byte_end":2940,"line_start":59,"line_end":59,"column_start":1,"column_end":90}},{"value":"! * [Discord chat](https://discord.gg/JvZeVNe)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2941,"byte_end":2989,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2990,"byte_end":2993,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! # What is in the `async-std` documentation?","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":2994,"byte_end":3041,"line_start":62,"line_end":62,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3042,"byte_end":3045,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! First, `async-std` is divided into a number of focused","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3046,"byte_end":3104,"line_start":64,"line_end":64,"column_start":1,"column_end":59}},{"value":"! modules, [all listed further down this page](#modules). These modules are","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3105,"byte_end":3182,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"! the bedrock upon which async Rust is forged, and they have mighty names","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3183,"byte_end":3258,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"! like [`async_std::os`] and [`async_std::task`]. Modules' documentation","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3259,"byte_end":3333,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"! typically includes an overview of the module along with examples, and are","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3334,"byte_end":3411,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"! a smart place to start familiarizing yourself with the library.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3412,"byte_end":3479,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3480,"byte_end":3483,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! Second, `async-std` defines [The Async Prelude], a small collection","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3484,"byte_end":3555,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"! of items - mostly traits - that should be imported into every module of","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3556,"byte_end":3631,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"! every async crate. The traits in the prelude are pervasive, making the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3632,"byte_end":3706,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"! prelude documentation a good entry point to learning about the library.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3707,"byte_end":3782,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3783,"byte_end":3786,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! [The Async Prelude]: prelude/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3787,"byte_end":3830,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"! [`async_std::os`]: os/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3831,"byte_end":3867,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"! [`async_std::task`]: task/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3868,"byte_end":3908,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3909,"byte_end":3912,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! And finally, `async-std` exports a number of async macros, and","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3913,"byte_end":3979,"line_start":80,"line_end":80,"column_start":1,"column_end":67}},{"value":"! [lists them on this page](#macros).","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":3980,"byte_end":4019,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4020,"byte_end":4023,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! # Contributing changes to the documentation","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4024,"byte_end":4071,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4072,"byte_end":4075,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! Check out `async-std`'s contribution guidelines [here](https://async.rs/contribute).","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4076,"byte_end":4164,"line_start":85,"line_end":85,"column_start":1,"column_end":89}},{"value":"! The source for this documentation can be found on [GitHub](https://github.com/async-rs).","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4165,"byte_end":4257,"line_start":86,"line_end":86,"column_start":1,"column_end":93}},{"value":"! To contribute changes, make sure you read the guidelines first, then submit","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4258,"byte_end":4337,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"! pull requests for your suggested changes.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4338,"byte_end":4383,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4384,"byte_end":4387,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! Contributions are appreciated! If you see a part of the docs that can be","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4388,"byte_end":4464,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"! improved, submit a PR, or chat with us first on","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4465,"byte_end":4516,"line_start":91,"line_end":91,"column_start":1,"column_end":52}},{"value":"! [Discord](https://discord.gg/JvZeVNe).","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4517,"byte_end":4559,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4560,"byte_end":4563,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! # A tour of `async-std`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4564,"byte_end":4591,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4592,"byte_end":4595,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"! The rest of this crate documentation is dedicated to pointing out notable","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4596,"byte_end":4673,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"! features of `async-std`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4674,"byte_end":4702,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4703,"byte_end":4706,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ## Platform abstractions and I/O","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4707,"byte_end":4743,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4744,"byte_end":4747,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! Besides basic data types, `async-std` is largely concerned with","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4748,"byte_end":4815,"line_start":101,"line_end":101,"column_start":1,"column_end":68}},{"value":"! abstracting over differences in common platforms, most notably Windows and","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4816,"byte_end":4894,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"! Unix derivatives.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4895,"byte_end":4916,"line_start":103,"line_end":103,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4917,"byte_end":4920,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! Common types of I/O, including [files], [TCP], [UDP], are defined in the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4921,"byte_end":4997,"line_start":105,"line_end":105,"column_start":1,"column_end":77}},{"value":"! [`io`], [`fs`], and [`net`] modules.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":4998,"byte_end":5038,"line_start":106,"line_end":106,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5039,"byte_end":5042,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! The [`task`] module contains `async-std`'s task abstractions. [`sync`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5043,"byte_end":5117,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"! contains further primitive shared memory types, including [`channel`],","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5118,"byte_end":5192,"line_start":109,"line_end":109,"column_start":1,"column_end":75}},{"value":"! which contains the channel types for message passing.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5193,"byte_end":5250,"line_start":110,"line_end":110,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5251,"byte_end":5254,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! [files]: fs/struct.File.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5255,"byte_end":5287,"line_start":112,"line_end":112,"column_start":1,"column_end":33}},{"value":"! [TCP]: net/struct.TcpStream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5288,"byte_end":5324,"line_start":113,"line_end":113,"column_start":1,"column_end":37}},{"value":"! [UDP]: net/struct.UdpSocket.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5325,"byte_end":5361,"line_start":114,"line_end":114,"column_start":1,"column_end":37}},{"value":"! [`io`]: fs/struct.File.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5362,"byte_end":5393,"line_start":115,"line_end":115,"column_start":1,"column_end":32}},{"value":"! [`sync`]: sync/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5394,"byte_end":5423,"line_start":116,"line_end":116,"column_start":1,"column_end":30}},{"value":"! [`channel`]: sync/fn.channel.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5424,"byte_end":5461,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5462,"byte_end":5465,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"! ## Timeouts, intervals, and delays","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5466,"byte_end":5504,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5505,"byte_end":5508,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! `async-std` provides several methods to manipulate time:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5509,"byte_end":5569,"line_start":121,"line_end":121,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5570,"byte_end":5573,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! * [`task::sleep`] to wait for a duration to pass without blocking.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5574,"byte_end":5644,"line_start":123,"line_end":123,"column_start":1,"column_end":71}},{"value":"! * [`stream::interval`] for emitting an event at a set interval.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5645,"byte_end":5712,"line_start":124,"line_end":124,"column_start":1,"column_end":68}},{"value":"! * [`future::timeout`] to time-out futures if they don't resolve within a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5713,"byte_end":5789,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"!   set interval.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5790,"byte_end":5809,"line_start":126,"line_end":126,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5810,"byte_end":5813,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! [`task::sleep`]: task/fn.sleep.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5814,"byte_end":5853,"line_start":128,"line_end":128,"column_start":1,"column_end":40}},{"value":"! [`stream::interval`]: stream/fn.interval.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5854,"byte_end":5903,"line_start":129,"line_end":129,"column_start":1,"column_end":50}},{"value":"! [`future::timeout`]: future/fn.timeout.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5904,"byte_end":5951,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5952,"byte_end":5955,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5956,"byte_end":5970,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5971,"byte_end":5974,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"! All examples require the [`\"attributes\"` feature](#features) to be enabled.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":5975,"byte_end":6054,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"! This feature is not enabled by default because it significantly impacts","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6055,"byte_end":6130,"line_start":135,"line_end":135,"column_start":1,"column_end":76}},{"value":"! compile times. See [`task::block_on`] for an alternative way to start","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6131,"byte_end":6204,"line_start":136,"line_end":136,"column_start":1,"column_end":74}},{"value":"! executing tasks.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6205,"byte_end":6225,"line_start":137,"line_end":137,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6226,"byte_end":6229,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! Call an async function from the main function:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6230,"byte_end":6280,"line_start":139,"line_end":139,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6281,"byte_end":6284,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! async fn say_hello() {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6396,"byte_end":6422,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"!     println!(\"Hello, world!\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6423,"byte_end":6457,"line_start":144,"line_end":144,"column_start":1,"column_end":35}},{"value":"! }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6458,"byte_end":6463,"line_start":145,"line_end":145,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6464,"byte_end":6467,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! #[async_std::main]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6468,"byte_end":6490,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"! async fn main() {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6491,"byte_end":6512,"line_start":148,"line_end":148,"column_start":1,"column_end":22}},{"value":"!     say_hello().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6513,"byte_end":6539,"line_start":149,"line_end":149,"column_start":1,"column_end":27}},{"value":"! }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6540,"byte_end":6545,"line_start":150,"line_end":150,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6546,"byte_end":6553,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6554,"byte_end":6557,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Await two futures concurrently, and return a tuple of their output:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6558,"byte_end":6629,"line_start":153,"line_end":153,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6630,"byte_end":6633,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6745,"byte_end":6775,"line_start":157,"line_end":157,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6776,"byte_end":6779,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! #[async_std::main]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6780,"byte_end":6802,"line_start":159,"line_end":159,"column_start":1,"column_end":23}},{"value":"! async fn main() {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6803,"byte_end":6824,"line_start":160,"line_end":160,"column_start":1,"column_end":22}},{"value":"!     let a = async { 1u8 };","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6825,"byte_end":6855,"line_start":161,"line_end":161,"column_start":1,"column_end":31}},{"value":"!     let b = async { 2u8 };","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6856,"byte_end":6886,"line_start":162,"line_end":162,"column_start":1,"column_end":31}},{"value":"!     assert_eq!(a.join(b).await, (1u8, 2u8))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6887,"byte_end":6934,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"! }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6935,"byte_end":6940,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6941,"byte_end":6948,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6949,"byte_end":6952,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"! Create a UDP server that echoes back each received message to the sender:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":6953,"byte_end":7030,"line_start":167,"line_end":167,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7031,"byte_end":7034,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"! use async_std::net::UdpSocket;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7152,"byte_end":7186,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7187,"byte_end":7190,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"! #[async_std::main]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7191,"byte_end":7213,"line_start":173,"line_end":173,"column_start":1,"column_end":23}},{"value":"! async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7214,"byte_end":7258,"line_start":174,"line_end":174,"column_start":1,"column_end":45}},{"value":"!     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7259,"byte_end":7321,"line_start":175,"line_end":175,"column_start":1,"column_end":63}},{"value":"!     println!(\"Listening on {}\", socket.local_addr()?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7322,"byte_end":7380,"line_start":176,"line_end":176,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7381,"byte_end":7384,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"!     let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7385,"byte_end":7423,"line_start":178,"line_end":178,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7424,"byte_end":7427,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7428,"byte_end":7442,"line_start":180,"line_end":180,"column_start":1,"column_end":15}},{"value":"!         let (recv, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7443,"byte_end":7508,"line_start":181,"line_end":181,"column_start":1,"column_end":66}},{"value":"!         let sent = socket.send_to(&buf[..recv], &peer).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7509,"byte_end":7575,"line_start":182,"line_end":182,"column_start":1,"column_end":67}},{"value":"!         println!(\"Sent {} out of {} bytes to {}\", sent, recv, peer);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7576,"byte_end":7648,"line_start":183,"line_end":183,"column_start":1,"column_end":73}},{"value":"!     }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7649,"byte_end":7658,"line_start":184,"line_end":184,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7659,"byte_end":7664,"line_start":185,"line_end":185,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7665,"byte_end":7672,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"! [`task::block_on`]: task/fn.block_on.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7673,"byte_end":7718,"line_start":187,"line_end":187,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7719,"byte_end":7722,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"! # Features","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7723,"byte_end":7737,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7738,"byte_end":7741,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"! Items marked with","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7742,"byte_end":7763,"line_start":191,"line_end":191,"column_start":1,"column_end":22}},{"value":"! <span","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7764,"byte_end":7773,"line_start":192,"line_end":192,"column_start":1,"column_end":10}},{"value":"!   class=\"module-item stab portability\"","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7774,"byte_end":7816,"line_start":193,"line_end":193,"column_start":1,"column_end":43}},{"value":"!   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7817,"byte_end":7915,"line_start":194,"line_end":194,"column_start":1,"column_end":99}},{"value":"! ><code>unstable</code></span>","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7916,"byte_end":7949,"line_start":195,"line_end":195,"column_start":1,"column_end":34}},{"value":"! are available only when the `unstable` Cargo feature is enabled:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":7950,"byte_end":8018,"line_start":196,"line_end":196,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8019,"byte_end":8022,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8023,"byte_end":8034,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"! [dependencies.async-std]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8035,"byte_end":8063,"line_start":199,"line_end":199,"column_start":1,"column_end":29}},{"value":"! version = \"1.6.2\"","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8064,"byte_end":8085,"line_start":200,"line_end":200,"column_start":1,"column_end":22}},{"value":"! features = [\"unstable\"]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8086,"byte_end":8113,"line_start":201,"line_end":201,"column_start":1,"column_end":28}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8114,"byte_end":8121,"line_start":202,"line_end":202,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8122,"byte_end":8125,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"! Items marked with","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8126,"byte_end":8147,"line_start":204,"line_end":204,"column_start":1,"column_end":22}},{"value":"! <span","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8148,"byte_end":8157,"line_start":205,"line_end":205,"column_start":1,"column_end":10}},{"value":"!   class=\"module-item stab portability\"","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8158,"byte_end":8200,"line_start":206,"line_end":206,"column_start":1,"column_end":43}},{"value":"!   style=\"display: inline; border-radius: 3px; padding: 2px; font-size: 80%; line-height: 1.2;\"","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8201,"byte_end":8299,"line_start":207,"line_end":207,"column_start":1,"column_end":99}},{"value":"! ><code>attributes</code></span>","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8300,"byte_end":8335,"line_start":208,"line_end":208,"column_start":1,"column_end":36}},{"value":"! are available only when the `attributes` Cargo feature is enabled:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8336,"byte_end":8406,"line_start":209,"line_end":209,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8407,"byte_end":8410,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8411,"byte_end":8422,"line_start":211,"line_end":211,"column_start":1,"column_end":12}},{"value":"! [dependencies.async-std]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8423,"byte_end":8451,"line_start":212,"line_end":212,"column_start":1,"column_end":29}},{"value":"! version = \"1.6.2\"","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8452,"byte_end":8473,"line_start":213,"line_end":213,"column_start":1,"column_end":22}},{"value":"! features = [\"attributes\"]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8474,"byte_end":8503,"line_start":214,"line_end":214,"column_start":1,"column_end":30}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8504,"byte_end":8511,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8512,"byte_end":8515,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"! Compatibility with the `tokio` runtime is possible using the `tokio02`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8516,"byte_end":8590,"line_start":217,"line_end":217,"column_start":1,"column_end":75}},{"value":"! Cargo feature:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8591,"byte_end":8609,"line_start":218,"line_end":218,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8610,"byte_end":8613,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8614,"byte_end":8625,"line_start":220,"line_end":220,"column_start":1,"column_end":12}},{"value":"! [dependencies.async-std]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8626,"byte_end":8654,"line_start":221,"line_end":221,"column_start":1,"column_end":29}},{"value":"! version = \"1.6.2\"","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8655,"byte_end":8676,"line_start":222,"line_end":222,"column_start":1,"column_end":22}},{"value":"! features = [\"tokio02\"]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8677,"byte_end":8703,"line_start":223,"line_end":223,"column_start":1,"column_end":27}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8704,"byte_end":8711,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8712,"byte_end":8715,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"! Additionally it's possible to only use the core traits and combinators by","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8716,"byte_end":8793,"line_start":226,"line_end":226,"column_start":1,"column_end":78}},{"value":"! only enabling the `std` Cargo feature:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8794,"byte_end":8836,"line_start":227,"line_end":227,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8837,"byte_end":8840,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8841,"byte_end":8852,"line_start":229,"line_end":229,"column_start":1,"column_end":12}},{"value":"! [dependencies.async-std]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8853,"byte_end":8881,"line_start":230,"line_end":230,"column_start":1,"column_end":29}},{"value":"! version = \"1.6.2\"","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8882,"byte_end":8903,"line_start":231,"line_end":231,"column_start":1,"column_end":22}},{"value":"! default-features = false","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8904,"byte_end":8932,"line_start":232,"line_end":232,"column_start":1,"column_end":29}},{"value":"! features = [\"std\"]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8933,"byte_end":8955,"line_start":233,"line_end":233,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8956,"byte_end":8963,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8964,"byte_end":8967,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"! And to use async-std on `no_std` targets that only support `alloc` only","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":8968,"byte_end":9043,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"! enable the `alloc` Cargo feature:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9044,"byte_end":9081,"line_start":237,"line_end":237,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9082,"byte_end":9085,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9086,"byte_end":9097,"line_start":239,"line_end":239,"column_start":1,"column_end":12}},{"value":"! [dependencies.async-std]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9098,"byte_end":9126,"line_start":240,"line_end":240,"column_start":1,"column_end":29}},{"value":"! version = \"1.6.2\"","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9127,"byte_end":9148,"line_start":241,"line_end":241,"column_start":1,"column_end":22}},{"value":"! default-features = false","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9149,"byte_end":9177,"line_start":242,"line_end":242,"column_start":1,"column_end":29}},{"value":"! features = [\"alloc\"]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9178,"byte_end":9202,"line_start":243,"line_end":243,"column_start":1,"column_end":25}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9203,"byte_end":9210,"line_start":244,"line_end":244,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9211,"byte_end":9214,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"! # Runtime configuration","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9215,"byte_end":9242,"line_start":246,"line_end":246,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9243,"byte_end":9246,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"! Several environment variables are available to tune the async-std","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9247,"byte_end":9316,"line_start":248,"line_end":248,"column_start":1,"column_end":70}},{"value":"! runtime:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9317,"byte_end":9329,"line_start":249,"line_end":249,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9330,"byte_end":9333,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"! * `ASYNC_STD_THREAD_COUNT`: The number of threads that the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9334,"byte_end":9396,"line_start":251,"line_end":251,"column_start":1,"column_end":63}},{"value":"! async-std runtime will start. By default, this is one per logical","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9397,"byte_end":9466,"line_start":252,"line_end":252,"column_start":1,"column_end":70}},{"value":"! cpu as reported by the [num_cpus](num_cpus) crate, which may be","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9467,"byte_end":9534,"line_start":253,"line_end":253,"column_start":1,"column_end":68}},{"value":"! different than the number of physical cpus. Async-std _will panic_","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9535,"byte_end":9605,"line_start":254,"line_end":254,"column_start":1,"column_end":71}},{"value":"! if this is set to any value other than a positive integer.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9606,"byte_end":9668,"line_start":255,"line_end":255,"column_start":1,"column_end":63}},{"value":"! * `ASYNC_STD_THREAD_NAME`: The name that async-std's runtime","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9669,"byte_end":9733,"line_start":256,"line_end":256,"column_start":1,"column_end":65}},{"value":"! threads report to the operating system. The default value is","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9734,"byte_end":9798,"line_start":257,"line_end":257,"column_start":1,"column_end":65}},{"value":"! `\"async-std/runtime\"`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9799,"byte_end":9825,"line_start":258,"line_end":258,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9826,"byte_end":9829,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9923,"byte_end":9994,"line_start":263,"line_end":263,"column_start":1,"column_end":72}},{"value":"allow(clippy :: mutex_atomic, clippy :: module_inception)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":9995,"byte_end":10052,"line_start":264,"line_end":264,"column_start":1,"column_end":58}},{"value":"recursion_limit = \"2048\"","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":10240,"byte_end":10268,"line_start":268,"line_end":268,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":45},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1140},{"krate":0,"index":1176},{"krate":0,"index":1182},{"krate":0,"index":1202},{"krate":0,"index":1209},{"krate":0,"index":1217},{"krate":0,"index":1225},{"krate":0,"index":1236},{"krate":0,"index":1246},{"krate":0,"index":1283},{"krate":0,"index":1310},{"krate":0,"index":1386},{"krate":0,"index":1387}],"decl_id":null,"docs":" Types and traits for working with asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":16250,"byte_end":16275,"line_start":220,"line_end":220,"column_start":13,"column_end":38}},{"value":"! Types and traits for working with asynchronous tasks.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7774926,"byte_end":7774983,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7774984,"byte_end":7774987,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is similar to [`std::thread`], except it uses asynchronous tasks in place of","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7774988,"byte_end":7775080,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"! threads.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775081,"byte_end":7775093,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775094,"byte_end":7775097,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! [`std::thread`]: https://doc.rust-lang.org/std/thread","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775098,"byte_end":7775155,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775156,"byte_end":7775159,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! ## The task model","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775160,"byte_end":7775181,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775182,"byte_end":7775185,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! An executing asynchronous Rust program consists of a collection of native OS threads, on top of","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775186,"byte_end":7775285,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"! which multiple stackless coroutines are multiplexed. We refer to these as \"tasks\".  Tasks can","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775286,"byte_end":7775383,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"! be named, and provide some built-in support for synchronization.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775384,"byte_end":7775452,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775453,"byte_end":7775456,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! Communication between tasks can be done through channels, Rust's message-passing types, along","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775457,"byte_end":7775554,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"! with [other forms of tasks synchronization](../sync/index.html) and shared-memory data","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775555,"byte_end":7775645,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"! structures. In particular, types that are guaranteed to be threadsafe are easily shared between","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775646,"byte_end":7775745,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"! tasks using the atomically-reference-counted container, [`Arc`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775746,"byte_end":7775814,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775815,"byte_end":7775818,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! Fatal logic errors in Rust cause *thread panic*, during which a thread will unwind the stack,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775819,"byte_end":7775916,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"! running destructors and freeing owned resources. If a panic occurs inside a task, there is no","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7775917,"byte_end":7776014,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"! meaningful way of recovering, so the panic will propagate through any thread boundaries all the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776015,"byte_end":7776114,"line_start":21,"line_end":21,"column_start":1,"column_end":100}},{"value":"! way to the root task. This is also known as a \"panic = abort\" model.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776115,"byte_end":7776187,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776188,"byte_end":7776191,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! ## Spawning a task","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776192,"byte_end":7776214,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776215,"byte_end":7776218,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! A new task can be spawned using the [`task::spawn`][`spawn`] function:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776219,"byte_end":7776293,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776294,"byte_end":7776297,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776298,"byte_end":7776311,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"! use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776312,"byte_end":7776336,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776337,"byte_end":7776340,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! task::spawn(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776341,"byte_end":7776364,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"!     // some work here","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776365,"byte_end":7776390,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"! });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776391,"byte_end":7776398,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776399,"byte_end":7776406,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776407,"byte_end":7776410,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! In this example, the spawned task is \"detached\" from the current task. This means that it can","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776411,"byte_end":7776508,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"! outlive its parent (the task that spawned it), unless this parent is the root task.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776509,"byte_end":7776596,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776597,"byte_end":7776600,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! The root task can also wait on the completion of the child task; a call to [`spawn`] produces a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776601,"byte_end":7776700,"line_start":39,"line_end":39,"column_start":1,"column_end":100}},{"value":"! [`JoinHandle`], which implements `Future` and can be `await`ed:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776701,"byte_end":7776768,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776769,"byte_end":7776772,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776773,"byte_end":7776780,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"! use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776781,"byte_end":7776805,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776806,"byte_end":7776809,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776810,"byte_end":7776849,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776850,"byte_end":7776855,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"! let child = task::spawn(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776856,"byte_end":7776891,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"!     // some work here","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776892,"byte_end":7776917,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"! });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776918,"byte_end":7776925,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"! // some work here","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776926,"byte_end":7776947,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"! let res = child.await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776948,"byte_end":7776974,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776975,"byte_end":7776980,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"! # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776981,"byte_end":7776989,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776990,"byte_end":7776997,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7776998,"byte_end":7777001,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! The `await` operator returns the final value produced by the child task.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777002,"byte_end":7777078,"line_start":56,"line_end":56,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777079,"byte_end":7777082,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! ## Configuring tasks","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777083,"byte_end":7777107,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777108,"byte_end":7777111,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! A new task can be configured before it is spawned via the [`Builder`] type,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777112,"byte_end":7777191,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"! which currently allows you to set the name for the child task:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777192,"byte_end":7777258,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777259,"byte_end":7777262,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777263,"byte_end":7777270,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"! # #![allow(unused_must_use)]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777271,"byte_end":7777303,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"! use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777304,"byte_end":7777328,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777329,"byte_end":7777332,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777333,"byte_end":7777372,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777373,"byte_end":7777378,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"! task::Builder::new().name(\"child1\".to_string()).spawn(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777379,"byte_end":7777444,"line_start":69,"line_end":69,"column_start":1,"column_end":66}},{"value":"!     println!(\"Hello, world!\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777445,"byte_end":7777479,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"! });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777480,"byte_end":7777487,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777488,"byte_end":7777493,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"! # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777494,"byte_end":7777502,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777503,"byte_end":7777510,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777511,"byte_end":7777514,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! ## The `Task` type","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777515,"byte_end":7777537,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777538,"byte_end":7777541,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! Tasks are represented via the [`Task`] type, which you can get in one of","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777542,"byte_end":7777618,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"! two ways:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777619,"byte_end":7777632,"line_start":79,"line_end":79,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777633,"byte_end":7777636,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! * By spawning a new task, e.g., using the [`task::spawn`][`spawn`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777637,"byte_end":7777707,"line_start":81,"line_end":81,"column_start":1,"column_end":71}},{"value":"!   function, and calling [`task`][`JoinHandle::task`] on the [`JoinHandle`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777708,"byte_end":7777787,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"! * By requesting the current task, using the [`task::current`] function.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777788,"byte_end":7777863,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777864,"byte_end":7777867,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! ## Task-local storage","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777868,"byte_end":7777893,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777894,"byte_end":7777897,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! This module also provides an implementation of task-local storage for Rust","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777898,"byte_end":7777976,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"! programs. Task-local storage is a method of storing data into a global","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7777977,"byte_end":7778051,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"! variable that each task in the program will have its own copy of.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778052,"byte_end":7778121,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"! Tasks do not share this data, so accesses do not need to be synchronized.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778122,"byte_end":7778199,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778200,"byte_end":7778203,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! A task-local key owns the value it contains and will destroy the value when the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778204,"byte_end":7778287,"line_start":92,"line_end":92,"column_start":1,"column_end":84}},{"value":"! task exits. It is created with the [`task_local!`] macro and can contain any","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778288,"byte_end":7778368,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"! value that is `'static` (no borrowed pointers). It provides an accessor function,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778369,"byte_end":7778454,"line_start":94,"line_end":94,"column_start":1,"column_end":86}},{"value":"! [`with`], that yields a shared reference to the value to the specified","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778455,"byte_end":7778529,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"! closure. Task-local keys allow only shared access to values, as there would be no","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778530,"byte_end":7778615,"line_start":96,"line_end":96,"column_start":1,"column_end":86}},{"value":"! way to guarantee uniqueness if mutable borrows were allowed.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778616,"byte_end":7778680,"line_start":97,"line_end":97,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778681,"byte_end":7778684,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! ## Naming tasks","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778685,"byte_end":7778704,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778705,"byte_end":7778708,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! Tasks are able to have associated names for identification purposes. By default, spawned","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778709,"byte_end":7778801,"line_start":101,"line_end":101,"column_start":1,"column_end":93}},{"value":"! tasks are unnamed. To specify a name for a task, build the task with [`Builder`] and pass","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778802,"byte_end":7778895,"line_start":102,"line_end":102,"column_start":1,"column_end":94}},{"value":"! the desired task name to [`Builder::name`]. To retrieve the task name from within the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778896,"byte_end":7778985,"line_start":103,"line_end":103,"column_start":1,"column_end":90}},{"value":"! task, use [`Task::name`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7778986,"byte_end":7779015,"line_start":104,"line_end":104,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779016,"byte_end":7779019,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"! [`Arc`]: ../gsync/struct.Arc.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779020,"byte_end":7779057,"line_start":106,"line_end":106,"column_start":1,"column_end":38}},{"value":"! [`spawn`]: fn.spawn.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779058,"byte_end":7779086,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"! [`JoinHandle`]: struct.JoinHandle.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779087,"byte_end":7779129,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"! [`JoinHandle::task`]: struct.JoinHandle.html#method.task","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779130,"byte_end":7779190,"line_start":109,"line_end":109,"column_start":1,"column_end":61}},{"value":"! [`join`]: struct.JoinHandle.html#method.join","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779191,"byte_end":7779239,"line_start":110,"line_end":110,"column_start":1,"column_end":49}},{"value":"! [`panic!`]: https://doc.rust-lang.org/std/macro.panic.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779240,"byte_end":7779302,"line_start":111,"line_end":111,"column_start":1,"column_end":63}},{"value":"! [`Builder`]: struct.Builder.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779303,"byte_end":7779339,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"! [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779340,"byte_end":7779394,"line_start":113,"line_end":113,"column_start":1,"column_end":55}},{"value":"! [`task::current`]: fn.current.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779395,"byte_end":7779433,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"! [`Task`]: struct.Task.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779434,"byte_end":7779464,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"! [`Task::name`]: struct.Task.html#method.name","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779465,"byte_end":7779513,"line_start":116,"line_end":116,"column_start":1,"column_end":49}},{"value":"! [`task_local!`]: ../macro.task_local.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779514,"byte_end":7779559,"line_start":117,"line_end":117,"column_start":1,"column_end":46}},{"value":"! [`with`]: struct.LocalKey.html#method.with","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/mod.rs","byte_start":7779560,"byte_end":7779606,"line_start":118,"line_end":118,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":1112},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932859,"byte_end":7932868,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Cooperatively gives up a timeslice to the task scheduler.","sig":null,"attributes":[{"value":"/ Cooperatively gives up a timeslice to the task scheduler.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932256,"byte_end":7932317,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932318,"byte_end":7932321,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Calling this function will move the currently executing future to the back","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932322,"byte_end":7932400,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ of the execution queue, making room for other futures to execute. This is","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932401,"byte_end":7932478,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ especially useful after running CPU-intensive operations inside a future.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932479,"byte_end":7932556,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932557,"byte_end":7932560,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ See also [`task::spawn_blocking`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932561,"byte_end":7932599,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932600,"byte_end":7932603,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932604,"byte_end":7932656,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932657,"byte_end":7932660,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932661,"byte_end":7932675,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932676,"byte_end":7932679,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932680,"byte_end":7932696,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932697,"byte_end":7932700,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932701,"byte_end":7932708,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932709,"byte_end":7932748,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932749,"byte_end":7932754,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932755,"byte_end":7932779,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932780,"byte_end":7932783,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ task::yield_now().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932784,"byte_end":7932812,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932813,"byte_end":7932818,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932819,"byte_end":7932827,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932828,"byte_end":7932835,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932836,"byte_end":7932845,"line_start":29,"line_end":29,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1137},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7934170,"byte_end":7934178,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"block_on","qualname":"::task::block_on::block_on","value":"fn <F, T> (future: F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task and blocks the current thread on its result.","sig":null,"attributes":[{"value":"/ Spawns a task and blocks the current thread on its result.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933486,"byte_end":7933548,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933549,"byte_end":7933552,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Calling this function is similar to [spawning] a thread and immediately [joining] it, except an","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933553,"byte_end":7933652,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ asynchronous task will be spawned.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933653,"byte_end":7933691,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933692,"byte_end":7933695,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::spawn_blocking`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933696,"byte_end":7933735,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933736,"byte_end":7933739,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: fn.spawn_blocking.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933740,"byte_end":7933792,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933793,"byte_end":7933796,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [spawning]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933797,"byte_end":7933863,"line_start":14,"line_end":14,"column_start":1,"column_end":67}},{"value":"/ [joining]: https://doc.rust-lang.org/std/thread/struct.JoinHandle.html#method.join","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933864,"byte_end":7933950,"line_start":15,"line_end":15,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933951,"byte_end":7933954,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933955,"byte_end":7933969,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933970,"byte_end":7933973,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933974,"byte_end":7933987,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7933988,"byte_end":7934012,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7934013,"byte_end":7934016,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7934017,"byte_end":7934032,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/     task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7934033,"byte_end":7934063,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/         println!(\"Hello, world!\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7934064,"byte_end":7934102,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/     })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7934103,"byte_end":7934113,"line_start":25,"line_end":25,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7934114,"byte_end":7934119,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7934120,"byte_end":7934127,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/block_on.rs","byte_start":7934128,"byte_end":7934162,"line_start":28,"line_end":28,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1311},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7934815,"byte_end":7934822,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Builder","qualname":"::task::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1312}],"decl_id":null,"docs":" Task builder that configures the settings of a new task.\n","sig":null,"attributes":[{"value":"/ Task builder that configures the settings of a new task.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7934717,"byte_end":7934777,"line_start":12,"line_end":12,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7934936,"byte_end":7934939,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new builder.\n","sig":null,"attributes":[{"value":"/ Creates a new builder.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7934884,"byte_end":7934910,"line_start":19,"line_end":19,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7934915,"byte_end":7934924,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7935059,"byte_end":7935063,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"fn (mut self, name: String) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Configures the name of the task.\n","sig":null,"attributes":[{"value":"/ Configures the name of the task.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7934997,"byte_end":7935033,"line_start":25,"line_end":25,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7935038,"byte_end":7935047,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7935690,"byte_end":7935695,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Builder>::spawn","value":"fn <F, T> (self, future: F) -> io::Result<JoinHandle<T>>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7935592,"byte_end":7935639,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7935644,"byte_end":7935678,"line_start":50,"line_end":50,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7936359,"byte_end":7936364,"line_start":71,"line_end":71,"column_start":12,"column_end":17},"name":"local","qualname":"<Builder>::local","value":"fn <F, T> (self, future: F) -> io::Result<JoinHandle<T>>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task locally with the configured settings.\n","sig":null,"attributes":[{"value":"/ Spawns a task locally with the configured settings.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7936226,"byte_end":7936281,"line_start":69,"line_end":69,"column_start":5,"column_end":60}},{"value":"cfg(all(not(target_os = \"unknown\"), feature = \"unstable\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7936286,"byte_end":7936347,"line_start":70,"line_end":70,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7938685,"byte_end":7938693,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"blocking","qualname":"<Builder>::blocking","value":"fn <F, T> (self, future: F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task with the configured settings, blocking on its execution.\n","sig":null,"attributes":[{"value":"/ Spawns a task with the configured settings, blocking on its execution.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7938560,"byte_end":7938634,"line_start":140,"line_end":140,"column_start":5,"column_end":79}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7938639,"byte_end":7938673,"line_start":141,"line_end":141,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1180},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7941062,"byte_end":7941069,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"current","qualname":"::task::current::current","value":"fn () -> Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the current task.","sig":null,"attributes":[{"value":"/ Returns a handle to the current task.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940532,"byte_end":7940573,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940574,"byte_end":7940577,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940578,"byte_end":7940590,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940591,"byte_end":7940594,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will panic if not called within the context of a task created by [`block_on`],","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940595,"byte_end":7940691,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940692,"byte_end":7940729,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940730,"byte_end":7940733,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940734,"byte_end":7940768,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940769,"byte_end":7940797,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940798,"byte_end":7940854,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940855,"byte_end":7940858,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940859,"byte_end":7940873,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940874,"byte_end":7940877,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940878,"byte_end":7940885,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940886,"byte_end":7940925,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940926,"byte_end":7940931,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940932,"byte_end":7940956,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940957,"byte_end":7940960,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ println!(\"The name of this task is {:?}\", task::current().name());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7940961,"byte_end":7941031,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7941032,"byte_end":7941037,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7941038,"byte_end":7941046,"line_start":23,"line_end":23,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/current.rs","byte_start":7941047,"byte_end":7941054,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1324},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7941593,"byte_end":7941603,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"JoinHandle","qualname":"::task::join_handle::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327}],"decl_id":null,"docs":" A handle that awaits the result of a task.","sig":null,"attributes":[{"value":"/ A handle that awaits the result of a task.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7941302,"byte_end":7941348,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7941349,"byte_end":7941352,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Dropping a [`JoinHandle`] will detach the task, meaning that there is no longer","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7941353,"byte_end":7941436,"line_start":8,"line_end":8,"column_start":1,"column_end":84}},{"value":"/ a handle to the task and no way to `join` on it.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7941437,"byte_end":7941489,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7941490,"byte_end":7941493,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Created when a task is [spawned].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7941494,"byte_end":7941531,"line_start":11,"line_end":11,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7941532,"byte_end":7941535,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [spawned]: fn.spawn.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7941536,"byte_end":7941564,"line_start":13,"line_end":13,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942411,"byte_end":7942415,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"task","qualname":"<JoinHandle<T>>::task","value":"fn (&self) -> &Task","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying task.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying task.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942074,"byte_end":7942118,"line_start":34,"line_end":34,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942123,"byte_end":7942126,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942131,"byte_end":7942145,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942150,"byte_end":7942153,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942158,"byte_end":7942165,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942170,"byte_end":7942209,"line_start":39,"line_end":39,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942214,"byte_end":7942219,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942224,"byte_end":7942248,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942253,"byte_end":7942256,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942261,"byte_end":7942297,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/     1 + 2","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942302,"byte_end":7942315,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942320,"byte_end":7942327,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ println!(\"id = {}\", handle.task().id());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942332,"byte_end":7942376,"line_start":46,"line_end":46,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942381,"byte_end":7942386,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942391,"byte_end":7942399,"line_start":48,"line_end":48,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942542,"byte_end":7942548,"line_start":55,"line_end":55,"column_start":18,"column_end":24},"name":"cancel","qualname":"<JoinHandle<T>>::cancel","value":"fn (mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Cancel this task.\n","sig":null,"attributes":[{"value":"/ Cancel this task.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942464,"byte_end":7942485,"line_start":53,"line_end":53,"column_start":5,"column_end":26}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942490,"byte_end":7942524,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":1206},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943989,"byte_end":7943994,"line_start":31,"line_end":31,"column_start":14,"column_end":19},"name":"sleep","qualname":"::task::sleep::sleep","value":"fn (dur: Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sleeps for the specified amount of time.","sig":null,"attributes":[{"value":"/ Sleeps for the specified amount of time.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943375,"byte_end":7943419,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943420,"byte_end":7943423,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function might sleep for slightly longer than the specified duration but never less.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943424,"byte_end":7943517,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943518,"byte_end":7943521,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::thread::sleep`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943522,"byte_end":7943586,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943587,"byte_end":7943590,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::thread::sleep`]: https://doc.rust-lang.org/std/thread/fn.sleep.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943591,"byte_end":7943669,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943670,"byte_end":7943673,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See also: [`stream::interval`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943674,"byte_end":7943709,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943710,"byte_end":7943713,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`stream::interval`]: ../stream/fn.interval.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943714,"byte_end":7943766,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943767,"byte_end":7943770,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943771,"byte_end":7943785,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943786,"byte_end":7943789,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943790,"byte_end":7943797,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943798,"byte_end":7943837,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943838,"byte_end":7943843,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943844,"byte_end":7943872,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943873,"byte_end":7943876,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943877,"byte_end":7943901,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943902,"byte_end":7943905,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ task::sleep(Duration::from_secs(1)).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943906,"byte_end":7943952,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943953,"byte_end":7943958,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943959,"byte_end":7943967,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/sleep.rs","byte_start":7943968,"byte_end":7943975,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1214},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944579,"byte_end":7944584,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::spawn","value":"fn <F, T> (future: F) -> JoinHandle<T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task.","sig":null,"attributes":[{"value":"/ Spawns a task.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944153,"byte_end":7944171,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944172,"byte_end":7944175,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is similar to [`std::thread::spawn`], except it spawns an asynchronous task.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944176,"byte_end":7944270,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944271,"byte_end":7944274,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`std::thread`]: https://doc.rust-lang.org/std/thread/fn.spawn.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944275,"byte_end":7944346,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944347,"byte_end":7944350,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944351,"byte_end":7944365,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944366,"byte_end":7944369,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944370,"byte_end":7944377,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944378,"byte_end":7944417,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944418,"byte_end":7944423,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944424,"byte_end":7944448,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944449,"byte_end":7944452,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944453,"byte_end":7944489,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     1 + 2","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944490,"byte_end":7944503,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944504,"byte_end":7944511,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944512,"byte_end":7944515,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944516,"byte_end":7944548,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944549,"byte_end":7944554,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944555,"byte_end":7944563,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn.rs","byte_start":7944564,"byte_end":7944571,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1221},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945509,"byte_end":7945523,"line_start":33,"line_end":33,"column_start":8,"column_end":22},"name":"spawn_blocking","qualname":"::task::spawn_blocking::spawn_blocking","value":"fn <F, T> (f: F) -> JoinHandle<T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a blocking task.","sig":null,"attributes":[{"value":"/ Spawns a blocking task.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7944796,"byte_end":7944823,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7944824,"byte_end":7944827,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The task will be spawned onto a thread pool specifically dedicated to blocking tasks. This","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7944828,"byte_end":7944922,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/ is useful to prevent long-running synchronous operations from blocking the main futures","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7944923,"byte_end":7945014,"line_start":6,"line_end":6,"column_start":1,"column_end":92}},{"value":"/ executor.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945015,"byte_end":7945028,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945029,"byte_end":7945032,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::block_on`], [`task::spawn`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945033,"byte_end":7945083,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945084,"byte_end":7945087,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`task::block_on`]: fn.block_on.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945088,"byte_end":7945128,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ [`task::spawn`]: fn.spawn.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945129,"byte_end":7945163,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945164,"byte_end":7945167,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945168,"byte_end":7945182,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945183,"byte_end":7945186,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945187,"byte_end":7945203,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945204,"byte_end":7945207,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945208,"byte_end":7945215,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"unstable\")]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945216,"byte_end":7945250,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945251,"byte_end":7945290,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945291,"byte_end":7945296,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945297,"byte_end":7945321,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945322,"byte_end":7945325,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945326,"byte_end":7945355,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/     println!(\"long-running task here\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945356,"byte_end":7945399,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/ })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945400,"byte_end":7945406,"line_start":26,"line_end":26,"column_start":1,"column_end":7}},{"value":"/ .await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945407,"byte_end":7945418,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945419,"byte_end":7945424,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945425,"byte_end":7945433,"line_start":29,"line_end":29,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945434,"byte_end":7945441,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_blocking.rs","byte_start":7945492,"byte_end":7945501,"line_start":32,"line_end":32,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task.rs","byte_start":7945906,"byte_end":7945910,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Task","qualname":"::task::task::Task","value":"Task {  }","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333}],"decl_id":null,"docs":" A handle to a task.\n","sig":null,"attributes":[{"value":"/ A handle to a task.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task.rs","byte_start":7945854,"byte_end":7945877,"line_start":6,"line_end":6,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task.rs","byte_start":7946291,"byte_end":7946293,"line_start":28,"line_end":28,"column_start":12,"column_end":14},"name":"id","qualname":"<Task>::id","value":"fn (&self) -> TaskId","parent":null,"children":[],"decl_id":null,"docs":" Gets the task's unique identifier.\n","sig":null,"attributes":[{"value":"/ Gets the task's unique identifier.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task.rs","byte_start":7946227,"byte_end":7946265,"line_start":26,"line_end":26,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task.rs","byte_start":7946270,"byte_end":7946279,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task.rs","byte_start":7946530,"byte_end":7946534,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"name","qualname":"<Task>::name","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of this task.","sig":null,"attributes":[{"value":"/ Returns the name of this task.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task.rs","byte_start":7946340,"byte_end":7946374,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task.rs","byte_start":7946379,"byte_end":7946382,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The name is configured by [`Builder::name`] before spawning.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task.rs","byte_start":7946387,"byte_end":7946451,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task.rs","byte_start":7946456,"byte_end":7946459,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`Builder::name`]: struct.Builder.html#method.name","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task.rs","byte_start":7946464,"byte_end":7946518,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1336},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7947162,"byte_end":7947168,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"TaskId","qualname":"::task::task_id::TaskId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier for a task.","sig":null,"attributes":[{"value":"/ A unique identifier for a task.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7946909,"byte_end":7946944,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7946945,"byte_end":7946948,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7946949,"byte_end":7946963,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7946964,"byte_end":7946967,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7946968,"byte_end":7946975,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7946976,"byte_end":7947000,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7947001,"byte_end":7947004,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7947005,"byte_end":7947031,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/     println!(\"id = {:?}\", task::current().id());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7947032,"byte_end":7947084,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7947085,"byte_end":7947091,"line_start":13,"line_end":13,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7947092,"byte_end":7947099,"line_start":14,"line_end":14,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1354},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948058,"byte_end":7948066,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { __init, __key }","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1357}],"decl_id":null,"docs":" The key for accessing a task-local value.","sig":null,"attributes":[{"value":"/ The key for accessing a task-local value.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7947872,"byte_end":7947917,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7947918,"byte_end":7947921,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Every task-local value is lazily initialized on first access and destroyed when the task","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7947922,"byte_end":7948014,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ completes.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948015,"byte_end":7948029,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1356},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948115,"byte_end":7948121,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"__init","qualname":"::task::task_local::LocalKey::__init","value":"fn() -> T","parent":{"krate":0,"index":1354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1357},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948162,"byte_end":7948167,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"__key","qualname":"::task::task_local::LocalKey::__key","value":"std::sync::atomic::AtomicU32","parent":{"krate":0,"index":1354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949189,"byte_end":7949193,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"fn <F, R> (&'static self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Gets a reference to the task-local value with this key.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948225,"byte_end":7948284,"line_start":22,"line_end":22,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948289,"byte_end":7948292,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948297,"byte_end":7948365,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948370,"byte_end":7948373,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948378,"byte_end":7948470,"line_start":26,"line_end":26,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948475,"byte_end":7948478,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948483,"byte_end":7948495,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948500,"byte_end":7948503,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a task created by","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948508,"byte_end":7948590,"line_start":30,"line_end":30,"column_start":5,"column_end":87}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948595,"byte_end":7948646,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948651,"byte_end":7948654,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948659,"byte_end":7948693,"line_start":33,"line_end":33,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948698,"byte_end":7948726,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948731,"byte_end":7948787,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948792,"byte_end":7948795,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948800,"byte_end":7948814,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948819,"byte_end":7948822,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948827,"byte_end":7948834,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948839,"byte_end":7948844,"line_start":40,"line_end":40,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948849,"byte_end":7948873,"line_start":41,"line_end":41,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948878,"byte_end":7948881,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948886,"byte_end":7948910,"line_start":43,"line_end":43,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948915,"byte_end":7948945,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948950,"byte_end":7948953,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948958,"byte_end":7948975,"line_start":46,"line_end":46,"column_start":5,"column_end":22}},{"value":"/     static NUMBER: Cell<u32> = Cell::new(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948980,"byte_end":7949028,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949033,"byte_end":7949038,"line_start":48,"line_end":48,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949043,"byte_end":7949046,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949051,"byte_end":7949077,"line_start":50,"line_end":50,"column_start":5,"column_end":31}},{"value":"/     let v = NUMBER.with(|c| c.get());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949082,"byte_end":7949123,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, 5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949128,"byte_end":7949153,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949158,"byte_end":7949165,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949170,"byte_end":7949177,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950479,"byte_end":7950487,"line_start":97,"line_end":97,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"fn <F, R> (&'static self, f: F) -> Result<R, AccessError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to get a reference to the task-local value with this key.","sig":null,"attributes":[{"value":"/ Attempts to get a reference to the task-local value with this key.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949383,"byte_end":7949453,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949458,"byte_end":7949461,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The passed closure receives a reference to the task-local value.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949466,"byte_end":7949534,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949539,"byte_end":7949542,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The task-local value will be lazily initialized if this task has not accessed it before.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949547,"byte_end":7949639,"line_start":67,"line_end":67,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949644,"byte_end":7949647,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This function returns an error if not called within the context of a task created by","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949652,"byte_end":7949740,"line_start":69,"line_end":69,"column_start":5,"column_end":93}},{"value":"/ [`block_on`], [`spawn`], or [`Builder::spawn`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949745,"byte_end":7949796,"line_start":70,"line_end":70,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949801,"byte_end":7949804,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`block_on`]: fn.block_on.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949809,"byte_end":7949843,"line_start":72,"line_end":72,"column_start":5,"column_end":39}},{"value":"/ [`spawn`]: fn.spawn.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949848,"byte_end":7949876,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/ [`Builder::spawn`]: struct.Builder.html#method.spawn","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949881,"byte_end":7949937,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949942,"byte_end":7949945,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949950,"byte_end":7949964,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949969,"byte_end":7949972,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949977,"byte_end":7949984,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949989,"byte_end":7949994,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7949999,"byte_end":7950023,"line_start":80,"line_end":80,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950028,"byte_end":7950031,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950036,"byte_end":7950060,"line_start":82,"line_end":82,"column_start":5,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950065,"byte_end":7950095,"line_start":83,"line_end":83,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950100,"byte_end":7950103,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ task_local! {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950108,"byte_end":7950125,"line_start":85,"line_end":85,"column_start":5,"column_end":22}},{"value":"/     static VAL: Cell<u32> = Cell::new(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950130,"byte_end":7950175,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950180,"byte_end":7950185,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950190,"byte_end":7950193,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950198,"byte_end":7950224,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/     let v = VAL.try_with(|c| c.get());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950229,"byte_end":7950271,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     assert_eq!(v, Ok(5));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950276,"byte_end":7950305,"line_start":91,"line_end":91,"column_start":5,"column_end":34}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950310,"byte_end":7950317,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950322,"byte_end":7950325,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // Returns an error because not called within the context of a task.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950330,"byte_end":7950402,"line_start":94,"line_end":94,"column_start":5,"column_end":77}},{"value":"/ assert!(VAL.try_with(|c| c.get()).is_err());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950407,"byte_end":7950455,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7950460,"byte_end":7950467,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1361},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7952012,"byte_end":7952023,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":1362}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`].","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7951845,"byte_end":7951893,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7951894,"byte_end":7951897,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ [`LocalKey::try_with`]: struct.LocalKey.html#method.try_with","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7951898,"byte_end":7951962,"line_start":142,"line_end":142,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":1392},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8064007,"byte_end":8064018,"line_start":22,"line_end":22,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn_local::spawn_local","value":"fn <F, T> (future: F) -> JoinHandle<T>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a task onto the thread-local executor.","sig":null,"attributes":[{"value":"/ Spawns a task onto the thread-local executor.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063719,"byte_end":8063768,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063769,"byte_end":8063772,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063773,"byte_end":8063787,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063788,"byte_end":8063791,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063792,"byte_end":8063799,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063800,"byte_end":8063839,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063840,"byte_end":8063845,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063846,"byte_end":8063870,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063871,"byte_end":8063874,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let handle = task::spawn_local(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063875,"byte_end":8063917,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/     1 + 2","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063918,"byte_end":8063931,"line_start":15,"line_end":15,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063932,"byte_end":8063939,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063940,"byte_end":8063943,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(handle.await, 3);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063944,"byte_end":8063976,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063977,"byte_end":8063982,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063983,"byte_end":8063991,"line_start":20,"line_end":20,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/spawn_local.rs","byte_start":8063992,"byte_end":8063999,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":46},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1584},{"krate":0,"index":1605},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1637}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":16250,"byte_end":16275,"line_start":220,"line_end":220,"column_start":13,"column_end":38}},{"value":"! Asynchronous values.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7780938,"byte_end":7780962,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7780963,"byte_end":7780966,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ## Base Futures Concurrency","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7780967,"byte_end":7780998,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7780999,"byte_end":7781002,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Often it's desireable to await multiple futures as if it was a single","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781003,"byte_end":7781076,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"! future. The `join` family of operations converts multiple futures into a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781077,"byte_end":7781153,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"! single future that returns all of their outputs. The `race` family of","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781154,"byte_end":7781227,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"! operations converts multiple future into a single future that returns the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781228,"byte_end":7781305,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"! first output.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781306,"byte_end":7781323,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781324,"byte_end":7781327,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! For operating on futures the following functions can be used:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781328,"byte_end":7781393,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781394,"byte_end":7781397,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! | Name               | Return signature | When does it return?     |","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781398,"byte_end":7781470,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"! | ---                | ---              | ---                      |","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781471,"byte_end":7781543,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"! | [`Future::join`]   | `(T1, T2)`       | Wait for all to complete","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781544,"byte_end":7781614,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"! | [`Future::race`]   | `T`              | Return on first value","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781615,"byte_end":7781682,"line_start":16,"line_end":16,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781683,"byte_end":7781686,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ## Fallible Futures Concurrency","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781687,"byte_end":7781722,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781723,"byte_end":7781726,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! For operating on futures that return `Result` additional `try_` variants of","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781727,"byte_end":7781806,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! the functions mentioned before can be used. These functions are aware of `Result`,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781807,"byte_end":7781893,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"! and will behave slightly differently from their base variants.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781894,"byte_end":7781960,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781961,"byte_end":7781964,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! In the case of `try_join`, if any of the futures returns `Err` all","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7781965,"byte_end":7782035,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"! futures are dropped and an error is returned. This is referred to as","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782036,"byte_end":7782108,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"! \"short-circuiting\".","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782109,"byte_end":7782132,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782133,"byte_end":7782136,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! In the case of `try_race`, instead of returning the first future that","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782137,"byte_end":7782210,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"! completes it returns the first future that _successfully_ completes. This","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782211,"byte_end":7782288,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"! means `try_race` will keep going until any one of the futures returns","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782289,"byte_end":7782362,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"! `Ok`, or _all_ futures have returned `Err`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782363,"byte_end":7782410,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782411,"byte_end":7782414,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! However sometimes it can be useful to use the base variants of the functions","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782415,"byte_end":7782495,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"! even on futures that return `Result`. Here is an overview of operations that","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782496,"byte_end":7782576,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"! work on `Result`, and their respective semantics:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782577,"byte_end":7782630,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782631,"byte_end":7782634,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! | Name                   | Return signature               | When does it return? |","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782635,"byte_end":7782721,"line_start":37,"line_end":37,"column_start":1,"column_end":87}},{"value":"! | ---                    | ---                            | ---                  |","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782722,"byte_end":7782808,"line_start":38,"line_end":38,"column_start":1,"column_end":87}},{"value":"! | [`Future::join`]       | `(Result<T, E>, Result<T, E>)` | Wait for all to complete","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782809,"byte_end":7782897,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"! | [`Future::try_join`]   | `Result<(T1, T2), E>`          | Return on first `Err`, wait for all to complete","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7782898,"byte_end":7783009,"line_start":40,"line_end":40,"column_start":1,"column_end":112}},{"value":"! | [`Future::race`]       | `Result<T, E>`                 | Return on first value","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7783010,"byte_end":7783095,"line_start":41,"line_end":41,"column_start":1,"column_end":86}},{"value":"! | [`Future::try_race`]   | `Result<T, E>`                 | Return on first `Ok`, reject on last Err","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7783096,"byte_end":7783200,"line_start":42,"line_end":42,"column_start":1,"column_end":105}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7783201,"byte_end":7783204,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! [`Future::join`]: trait.Future.html#method.join","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7783205,"byte_end":7783256,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"! [`Future::try_join`]: trait.Future.html#method.try_join","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7783257,"byte_end":7783316,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"! [`Future::race`]: trait.Future.html#method.race","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7783317,"byte_end":7783368,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"! [`Future::try_race`]: trait.Future.html#method.try_race","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/mod.rs","byte_start":7783369,"byte_end":7783428,"line_start":47,"line_end":47,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":9547},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/delay.rs","byte_start":8079700,"byte_end":8079711,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"DelayFuture","qualname":"::future::future::delay::DelayFuture","value":"DelayFuture {  }","parent":null,"children":[{"krate":0,"index":9549},{"krate":0,"index":9550}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/delay.rs","byte_start":8079833,"byte_end":8079836,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayFuture<F>>::new","value":"fn (future: F, dur: Duration) -> DelayFuture<F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1423},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/flatten.rs","byte_start":8080614,"byte_end":8080627,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"FlattenFuture","qualname":"::future::future::flatten::FlattenFuture","value":"FlattenFuture {  }","parent":null,"children":[{"krate":0,"index":1426}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/flatten.rs","byte_start":8080563,"byte_end":8080602,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9502},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/race.rs","byte_start":8082125,"byte_end":8082129,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Race","qualname":"::future::future::race::Race","value":"Race {  }","parent":null,"children":[{"krate":0,"index":9505},{"krate":0,"index":9506}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9457},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/try_race.rs","byte_start":8083377,"byte_end":8083384,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryRace","qualname":"::future::future::try_race::TryRace","value":"TryRace {  }","parent":null,"children":[{"krate":0,"index":9460},{"krate":0,"index":9461}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9412},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/join.rs","byte_start":8085145,"byte_end":8085149,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Join","qualname":"::future::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":9415},{"krate":0,"index":9416}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9367},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/try_join.rs","byte_start":8086562,"byte_end":8086569,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryJoin","qualname":"::future::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":9370},{"krate":0,"index":9371}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":1544},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8069790,"byte_end":8069799,"line_start":139,"line_end":139,"column_start":15,"column_end":24},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1551},{"krate":0,"index":1555},{"krate":0,"index":1557},{"krate":0,"index":1562}],"decl_id":null,"docs":"\n        Extension methods for [`Future`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8070370,"byte_end":8070375,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"name":"delay","qualname":"::future::future::FutureExt::delay","value":"fn (self, dur: Duration) -> DelayFuture<Self>","parent":{"krate":0,"index":1544},"children":[],"decl_id":null,"docs":" Returns a Future that delays execution for a specified time.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8070272,"byte_end":8070300,"line_start":154,"line_end":154,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8071128,"byte_end":8071135,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"fn (self) -> FlattenFuture<Self, <Self::Output as IntoFuture>::Future>","parent":{"krate":0,"index":1544},"children":[],"decl_id":null,"docs":" Flatten out the execution of this future when the result itself\n can be converted into another future.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8071030,"byte_end":8071058,"line_start":177,"line_end":177,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8072559,"byte_end":8072563,"line_start":221,"line_end":221,"column_start":12,"column_end":16},"name":"race","qualname":"::future::future::FutureExt::race","value":"fn <F> (self, other: F) -> Race<Self, F>","parent":{"krate":0,"index":1544},"children":[],"decl_id":null,"docs":"\n            Waits for one of two similarly-typed futures to complete.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8072461,"byte_end":8072489,"line_start":219,"line_end":219,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8074150,"byte_end":8074158,"line_start":267,"line_end":267,"column_start":12,"column_end":20},"name":"try_race","qualname":"::future::future::FutureExt::try_race","value":"fn <F, T, E> (self, other: F) -> TryRace<Self, F>","parent":{"krate":0,"index":1544},"children":[],"decl_id":null,"docs":"\n            Waits for one of two similarly-typed fallible futures to complete.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8074052,"byte_end":8074080,"line_start":265,"line_end":265,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8075328,"byte_end":8075332,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"join","qualname":"::future::future::FutureExt::join","value":"fn <F> (self, other: F) -> Join<Self, F>","parent":{"krate":0,"index":1544},"children":[],"decl_id":null,"docs":"\n            Waits for two similarly-typed futures to complete.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8075207,"byte_end":8075258,"line_start":302,"line_end":302,"column_start":9,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8076816,"byte_end":8076824,"line_start":351,"line_end":351,"column_start":12,"column_end":20},"name":"try_join","qualname":"::future::future::FutureExt::try_join","value":"fn <F, A, B, E> (self, other: F) -> TryJoin<Self, F>","parent":{"krate":0,"index":1544},"children":[],"decl_id":null,"docs":"\n            Waits for two similarly-typed fallible futures to complete.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8076695,"byte_end":8076746,"line_start":349,"line_end":349,"column_start":9,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8078085,"byte_end":8078092,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"timeout","qualname":"::future::future::FutureExt::timeout","value":"fn (self, dur: Duration) -> TimeoutFuture<Self>","parent":{"krate":0,"index":1544},"children":[],"decl_id":null,"docs":"\n            Waits for both the future and a timeout, if the timeout completes before\n            the future, it returns an TimeoutError.","sig":null,"attributes":[{"value":"cfg(any(all(feature = \"default\", feature = \"unstable\"), feature = \"docs\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8077938,"byte_end":8078015,"line_start":388,"line_end":388,"column_start":9,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":1573},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088739,"byte_end":8088746,"line_start":27,"line_end":27,"column_start":14,"column_end":21},"name":"pending","qualname":"::future::pending::pending","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Never resolves to a value.","sig":null,"attributes":[{"value":"/ Never resolves to a value.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088347,"byte_end":8088377,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088378,"byte_end":8088381,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088382,"byte_end":8088396,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088397,"byte_end":8088400,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088401,"byte_end":8088408,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088409,"byte_end":8088448,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088449,"byte_end":8088454,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088455,"byte_end":8088483,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088484,"byte_end":8088487,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088488,"byte_end":8088514,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088515,"byte_end":8088537,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088538,"byte_end":8088541,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_secs(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088542,"byte_end":8088579,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/ let fut = future::pending();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088580,"byte_end":8088612,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088613,"byte_end":8088616,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let res: io::Result<()> = io::timeout(dur, fut).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088617,"byte_end":8088675,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/ assert!(res.is_err());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088676,"byte_end":8088702,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088703,"byte_end":8088708,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088709,"byte_end":8088717,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088718,"byte_end":8088725,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1590},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089637,"byte_end":8089644,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn <F, T> (f: F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089122,"byte_end":8089193,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089194,"byte_end":8089197,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089198,"byte_end":8089264,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089265,"byte_end":8089268,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089269,"byte_end":8089283,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089284,"byte_end":8089287,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089288,"byte_end":8089295,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089296,"byte_end":8089335,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089336,"byte_end":8089341,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089342,"byte_end":8089368,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/ use async_std::task::{Context, Poll};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089369,"byte_end":8089410,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089411,"byte_end":8089414,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn poll_greeting(_: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089415,"byte_end":8089474,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/     Poll::Ready(\"hello world\".to_string())","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089475,"byte_end":8089521,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089522,"byte_end":8089527,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089528,"byte_end":8089531,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::poll_fn(poll_greeting).await, \"hello world\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089532,"byte_end":8089600,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089601,"byte_end":8089606,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089607,"byte_end":8089615,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089616,"byte_end":8089623,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1606},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090424,"byte_end":8090429,"line_start":18,"line_end":18,"column_start":14,"column_end":19},"name":"ready","qualname":"::future::ready::ready","value":"fn <T> (val: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Resolves to the provided value.","sig":null,"attributes":[{"value":"/ Resolves to the provided value.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090035,"byte_end":8090070,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090071,"byte_end":8090074,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::convert::identity`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090075,"byte_end":8090143,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090144,"byte_end":8090147,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`std::convert::identity`]: https://doc.rust-lang.org/std/convert/fn.identity.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090148,"byte_end":8090234,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090235,"byte_end":8090238,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090239,"byte_end":8090253,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090254,"byte_end":8090257,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090258,"byte_end":8090265,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090266,"byte_end":8090305,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090306,"byte_end":8090311,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/ use async_std::future;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090312,"byte_end":8090338,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090339,"byte_end":8090342,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(future::ready(10).await, 10);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090343,"byte_end":8090387,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090388,"byte_end":8090393,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090394,"byte_end":8090402,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/ready.rs","byte_start":8090403,"byte_end":8090410,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":63},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784702,"byte_end":7784709,"line_start":32,"line_end":32,"column_start":14,"column_end":21},"name":"timeout","qualname":"::future::timeout::timeout","value":"fn <F, T> (dur: Duration, f: F) -> Result<T, TimeoutError>","parent":null,"children":[],"decl_id":null,"docs":" Awaits a future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits a future or times out after a duration of time.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784174,"byte_end":7784232,"line_start":12,"line_end":12,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784233,"byte_end":7784236,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you want to await an I/O future consider using","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784237,"byte_end":7784290,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/ [`io::timeout`](../io/fn.timeout.html) instead.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784291,"byte_end":7784342,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784343,"byte_end":7784346,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784347,"byte_end":7784361,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784362,"byte_end":7784365,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784366,"byte_end":7784373,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784374,"byte_end":7784448,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784449,"byte_end":7784454,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784455,"byte_end":7784483,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784484,"byte_end":7784487,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ use async_std::future;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784488,"byte_end":7784514,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784515,"byte_end":7784518,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let never = future::pending::<()>();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784519,"byte_end":7784559,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ let dur = Duration::from_millis(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784560,"byte_end":7784599,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ assert!(future::timeout(dur, never).await.is_err());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784600,"byte_end":7784656,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784657,"byte_end":7784662,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784663,"byte_end":7784680,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784681,"byte_end":7784688,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9330},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7784927,"byte_end":7784940,"line_start":41,"line_end":41,"column_start":16,"column_end":29},"name":"TimeoutFuture","qualname":"::future::timeout::TimeoutFuture","value":"TimeoutFuture {  }","parent":null,"children":[{"krate":0,"index":9332},{"krate":0,"index":9333}],"decl_id":null,"docs":" A future that times out after a duration of time.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1610},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7785872,"byte_end":7785884,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::future::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":1611}],"decl_id":null,"docs":" An error returned when a future times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a future times out.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7785769,"byte_end":7785815,"line_start":74,"line_end":74,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":1628},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091203,"byte_end":8091213,"line_start":35,"line_end":35,"column_start":11,"column_end":21},"name":"IntoFuture","qualname":"::future::into_future::IntoFuture","value":"IntoFuture","parent":null,"children":[{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631}],"decl_id":null,"docs":" Convert a type into a `Future`.","sig":null,"attributes":[{"value":"/ Convert a type into a `Future`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090485,"byte_end":8090520,"line_start":3,"line_end":3,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090521,"byte_end":8090524,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090525,"byte_end":8090539,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090540,"byte_end":8090543,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090544,"byte_end":8090551,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ use async_std::future::{Future, IntoFuture};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090552,"byte_end":8090600,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/ use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090601,"byte_end":8090623,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/ use async_std::pin::Pin;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090624,"byte_end":8090652,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090653,"byte_end":8090656,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ struct Client;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090657,"byte_end":8090675,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090676,"byte_end":8090679,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ impl Client {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090680,"byte_end":8090697,"line_start":14,"line_end":14,"column_start":1,"column_end":18}},{"value":"/     pub async fn send(self) -> io::Result<()> {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090698,"byte_end":8090749,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/         // Send a request","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090750,"byte_end":8090779,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/         Ok(())","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090780,"byte_end":8090798,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090799,"byte_end":8090808,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090809,"byte_end":8090814,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090815,"byte_end":8090818,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ impl IntoFuture for Client {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090819,"byte_end":8090851,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/     type Output = io::Result<()>;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090852,"byte_end":8090889,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090890,"byte_end":8090893,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/     type Future = Pin<Box<dyn Future<Output = Self::Output>>>;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090894,"byte_end":8090960,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090961,"byte_end":8090964,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     fn into_future(self) -> Self::Future {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8090965,"byte_end":8091011,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/         Box::pin(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091012,"byte_end":8091040,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/             self.send().await","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091041,"byte_end":8091074,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/         })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091075,"byte_end":8091089,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091090,"byte_end":8091099,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091100,"byte_end":8091105,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091106,"byte_end":8091113,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091114,"byte_end":8091142,"line_start":33,"line_end":33,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1629},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091275,"byte_end":8091281,"line_start":37,"line_end":37,"column_start":10,"column_end":16},"name":"Output","qualname":"::future::into_future::IntoFuture::Output","value":"type Output;","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" The type of value produced on completion.\n","sig":null,"attributes":[{"value":"/ The type of value produced on completion.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091220,"byte_end":8091265,"line_start":36,"line_end":36,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1630},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091348,"byte_end":8091354,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Future","qualname":"::future::into_future::IntoFuture::Future","value":"type Future: Future<Output = Self::Output>;","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" Which kind of future are we turning this into?\n","sig":null,"attributes":[{"value":"/ Which kind of future are we turning this into?","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091288,"byte_end":8091338,"line_start":39,"line_end":39,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091432,"byte_end":8091443,"line_start":43,"line_end":43,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::into_future::IntoFuture::into_future","value":"fn (self) -> Self::Future","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":" Create a future from a value\n","sig":null,"attributes":[{"value":"/ Create a future from a value","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091392,"byte_end":8091424,"line_start":42,"line_end":42,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":78},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":1007},{"krate":0,"index":1020},{"krate":0,"index":1036},{"krate":0,"index":1053},{"krate":0,"index":1070},{"krate":0,"index":1082},{"krate":0,"index":2059},{"krate":0,"index":2185},{"krate":0,"index":2192},{"krate":0,"index":2208},{"krate":0,"index":2217},{"krate":0,"index":2222},{"krate":0,"index":2237},{"krate":0,"index":2248},{"krate":0,"index":2273},{"krate":0,"index":2287},{"krate":0,"index":2303},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":2322},{"krate":0,"index":2323},{"krate":0,"index":2324},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2336}],"decl_id":null,"docs":" Composable asynchronous iteration.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":16250,"byte_end":16275,"line_start":220,"line_end":220,"column_start":13,"column_end":38}},{"value":"! Composable asynchronous iteration.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786087,"byte_end":7786125,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786126,"byte_end":7786129,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::iter`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786130,"byte_end":7786183,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786184,"byte_end":7786187,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! If you've found yourself with an asynchronous collection of some kind,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786188,"byte_end":7786262,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"! and needed to perform an operation on the elements of said collection,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786263,"byte_end":7786337,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"! you'll quickly run into 'streams'. Streams are heavily used in idiomatic","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786338,"byte_end":7786414,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"! asynchronous Rust code, so it's worth becoming familiar with them.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786415,"byte_end":7786485,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786486,"byte_end":7786489,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! Before explaining more, let's talk about how this module is structured:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786490,"byte_end":7786565,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786566,"byte_end":7786569,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786570,"byte_end":7786588,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786589,"byte_end":7786592,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! This module is largely organized by type:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786593,"byte_end":7786638,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786639,"byte_end":7786642,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! * [Traits] are the core portion: these traits define what kind of streams","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786643,"byte_end":7786720,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"!   exist and what you can do with them. The methods of these traits are worth","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786721,"byte_end":7786801,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"!   putting some extra study time into.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786802,"byte_end":7786843,"line_start":18,"line_end":18,"column_start":1,"column_end":42}},{"value":"! * [Functions] provide some helpful ways to create some basic streams.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786844,"byte_end":7786917,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"! * [Structs] are often the return types of the various methods on this","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786918,"byte_end":7786991,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"!   module's traits. You'll usually want to look at the method that creates","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7786992,"byte_end":7787069,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"!   the `struct`, rather than the `struct` itself. For more detail about why,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787070,"byte_end":7787149,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"!   see '[Implementing Stream](#implementing-stream)'.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787150,"byte_end":7787206,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787207,"byte_end":7787210,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! [Traits]: #traits","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787211,"byte_end":7787232,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"! [Functions]: #functions","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787233,"byte_end":7787260,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"! [Structs]: #structs","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787261,"byte_end":7787284,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787285,"byte_end":7787288,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! That's it! Let's dig into streams.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787289,"byte_end":7787327,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787328,"byte_end":7787331,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! # Stream","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787332,"byte_end":7787344,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787345,"byte_end":7787348,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! The heart and soul of this module is the [`Stream`] trait. The core of","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787349,"byte_end":7787423,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"! [`Stream`] looks like this:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787424,"byte_end":7787455,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787456,"byte_end":7787459,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787460,"byte_end":7787467,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"! # use async_std::task::{Context, Poll};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787468,"byte_end":7787511,"line_start":37,"line_end":37,"column_start":1,"column_end":44}},{"value":"! # use std::pin::Pin;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787512,"byte_end":7787536,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"! trait Stream {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787537,"byte_end":7787555,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"!     type Item;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787556,"byte_end":7787574,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"!     fn poll_next(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787575,"byte_end":7787668,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"! }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787669,"byte_end":7787674,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787675,"byte_end":7787682,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787683,"byte_end":7787686,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! A stream has a method, [`next`], which when called, returns an","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787687,"byte_end":7787753,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"! [`Poll`]<[`Option`]`<Item>>`. [`next`] will return `Ready(Some(Item))`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787754,"byte_end":7787828,"line_start":46,"line_end":46,"column_start":1,"column_end":75}},{"value":"! as long as there are elements, and once they've all been exhausted, will","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787829,"byte_end":7787905,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"! return `None` to indicate that iteration is finished. If we're waiting on","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787906,"byte_end":7787983,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"! something asynchronous to resolve `Pending` is returned.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7787984,"byte_end":7788044,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788045,"byte_end":7788048,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Individual streams may choose to resume iteration, and so calling","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788049,"byte_end":7788118,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"! [`next`] again may or may not eventually start returning `Ready(Some(Item))`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788119,"byte_end":7788199,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"! again at some point.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788200,"byte_end":7788224,"line_start":53,"line_end":53,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788225,"byte_end":7788228,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! [`Stream`]'s full definition includes a number of other methods as well,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788229,"byte_end":7788305,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"! but they are default methods, built on top of [`next`], and so you get","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788306,"byte_end":7788380,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"! them for free.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788381,"byte_end":7788399,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788400,"byte_end":7788403,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! Streams are also composable, and it's common to chain them together to do","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788404,"byte_end":7788481,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"! more complex forms of processing. See the [Adapters](#adapters) section","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788482,"byte_end":7788557,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"! below for more details.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788558,"byte_end":7788585,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788586,"byte_end":7788589,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! [`Poll`]: ../task/enum.Poll.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788590,"byte_end":7788626,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"! [`Stream`]: trait.Stream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788627,"byte_end":7788660,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"! [`next`]: trait.Stream.html#tymethod.next","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788661,"byte_end":7788706,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"! [`Option`]: ../../std/option/enum.Option.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788707,"byte_end":7788756,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788757,"byte_end":7788760,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! # The three forms of streaming","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788761,"byte_end":7788795,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788796,"byte_end":7788799,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! There are three common methods which can create streams from a collection:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788800,"byte_end":7788878,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788879,"byte_end":7788882,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! * `stream()`, which iterates over `&T`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788883,"byte_end":7788926,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"! * `stream_mut()`, which iterates over `&mut T`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788927,"byte_end":7788978,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"! * `into_stream()`, which iterates over `T`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7788979,"byte_end":7789026,"line_start":74,"line_end":74,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789027,"byte_end":7789030,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! Various things in async-std may implement one or more of the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789031,"byte_end":7789095,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"! three, where appropriate.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789096,"byte_end":7789125,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789126,"byte_end":7789129,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! # Implementing Stream","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789130,"byte_end":7789155,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789156,"byte_end":7789159,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! Creating a stream of your own involves two steps: creating a `struct` to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789160,"byte_end":7789236,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"! hold the stream's state, and then `impl`ementing [`Stream`] for that","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789237,"byte_end":7789309,"line_start":82,"line_end":82,"column_start":1,"column_end":73}},{"value":"! `struct`. This is why there are so many `struct`s in this module: there is","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789310,"byte_end":7789388,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"! one for each stream and iterator adapter.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789389,"byte_end":7789434,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789435,"byte_end":7789438,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! Let's make a stream named `Counter` which counts from `1` to `5`:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789439,"byte_end":7789508,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789509,"byte_end":7789512,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789513,"byte_end":7789520,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"! # use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789521,"byte_end":7789553,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"! # use async_std::task::{Context, Poll};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789554,"byte_end":7789597,"line_start":90,"line_end":90,"column_start":1,"column_end":44}},{"value":"! # use std::pin::Pin;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789598,"byte_end":7789622,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"! // First, the struct:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789623,"byte_end":7789648,"line_start":92,"line_end":92,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789649,"byte_end":7789652,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! /// A stream which counts from one to five","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789653,"byte_end":7789699,"line_start":94,"line_end":94,"column_start":1,"column_end":47}},{"value":"! struct Counter {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789700,"byte_end":7789720,"line_start":95,"line_end":95,"column_start":1,"column_end":21}},{"value":"!     count: usize,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789721,"byte_end":7789742,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"! }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789743,"byte_end":7789748,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789749,"byte_end":7789752,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"! // we want our count to start at one, so let's add a new() method to help.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789753,"byte_end":7789831,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"! // This isn't strictly necessary, but is convenient. Note that we start","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789832,"byte_end":7789907,"line_start":100,"line_end":100,"column_start":1,"column_end":76}},{"value":"! // `count` at zero, we'll see why in `next()`'s implementation below.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789908,"byte_end":7789981,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"! impl Counter {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7789982,"byte_end":7790000,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"!     fn new() -> Counter {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790001,"byte_end":7790030,"line_start":103,"line_end":103,"column_start":1,"column_end":30}},{"value":"!         Counter { count: 0 }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790031,"byte_end":7790063,"line_start":104,"line_end":104,"column_start":1,"column_end":33}},{"value":"!     }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790064,"byte_end":7790073,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790074,"byte_end":7790079,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790080,"byte_end":7790083,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! // Then, we implement `Stream` for our `Counter`:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790084,"byte_end":7790137,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790138,"byte_end":7790141,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! impl Stream for Counter {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790142,"byte_end":7790171,"line_start":110,"line_end":110,"column_start":1,"column_end":30}},{"value":"!     // we will be counting with usize","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790172,"byte_end":7790213,"line_start":111,"line_end":111,"column_start":1,"column_end":42}},{"value":"!     type Item = usize;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790214,"byte_end":7790240,"line_start":112,"line_end":112,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790241,"byte_end":7790244,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"!     // poll_next() is the only required method","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790245,"byte_end":7790295,"line_start":114,"line_end":114,"column_start":1,"column_end":51}},{"value":"!     fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790296,"byte_end":7790394,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"!         // Increment our count. This is why we started at zero.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790395,"byte_end":7790462,"line_start":116,"line_end":116,"column_start":1,"column_end":68}},{"value":"!         self.count += 1;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790463,"byte_end":7790491,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790492,"byte_end":7790495,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"!         // Check to see if we've finished counting or not.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790496,"byte_end":7790558,"line_start":119,"line_end":119,"column_start":1,"column_end":63}},{"value":"!         if self.count < 6 {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790559,"byte_end":7790590,"line_start":120,"line_end":120,"column_start":1,"column_end":32}},{"value":"!             Poll::Ready(Some(self.count))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790591,"byte_end":7790636,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"!         } else {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790637,"byte_end":7790657,"line_start":122,"line_end":122,"column_start":1,"column_end":21}},{"value":"!             Poll::Ready(None)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790658,"byte_end":7790691,"line_start":123,"line_end":123,"column_start":1,"column_end":34}},{"value":"!         }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790692,"byte_end":7790705,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790706,"byte_end":7790715,"line_start":125,"line_end":125,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790716,"byte_end":7790721,"line_start":126,"line_end":126,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790722,"byte_end":7790725,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! // And now we can use it!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790726,"byte_end":7790755,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790756,"byte_end":7790830,"line_start":129,"line_end":129,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790831,"byte_end":7790836,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"! let mut counter = Counter::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790837,"byte_end":7790874,"line_start":131,"line_end":131,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790875,"byte_end":7790878,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! let x = counter.next().await.unwrap();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790879,"byte_end":7790921,"line_start":133,"line_end":133,"column_start":1,"column_end":43}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790922,"byte_end":7790944,"line_start":134,"line_end":134,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790945,"byte_end":7790948,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! let x = counter.next().await.unwrap();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790949,"byte_end":7790991,"line_start":136,"line_end":136,"column_start":1,"column_end":43}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7790992,"byte_end":7791014,"line_start":137,"line_end":137,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791015,"byte_end":7791018,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! let x = counter.next().await.unwrap();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791019,"byte_end":7791061,"line_start":139,"line_end":139,"column_start":1,"column_end":43}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791062,"byte_end":7791084,"line_start":140,"line_end":140,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791085,"byte_end":7791088,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"! let x = counter.next().await.unwrap();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791089,"byte_end":7791131,"line_start":142,"line_end":142,"column_start":1,"column_end":43}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791132,"byte_end":7791154,"line_start":143,"line_end":143,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791155,"byte_end":7791158,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! let x = counter.next().await.unwrap();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791159,"byte_end":7791201,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791202,"byte_end":7791224,"line_start":146,"line_end":146,"column_start":1,"column_end":23}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791225,"byte_end":7791230,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791231,"byte_end":7791248,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791249,"byte_end":7791256,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791257,"byte_end":7791260,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! This will print `1` through `5`, each on their own line.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791261,"byte_end":7791321,"line_start":151,"line_end":151,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791322,"byte_end":7791325,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Calling `next().await` this way gets repetitive. Rust has a construct which","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791326,"byte_end":7791405,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"! can call `next()` on your stream, until it reaches `None`. Let's go over","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791406,"byte_end":7791482,"line_start":154,"line_end":154,"column_start":1,"column_end":77}},{"value":"! that next.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791483,"byte_end":7791497,"line_start":155,"line_end":155,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791498,"byte_end":7791501,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"! # while let Loops and IntoStream","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791502,"byte_end":7791538,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791539,"byte_end":7791542,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! Rust's `while let` loop syntax is an idiomatic way to iterate over streams. Here's a basic","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791543,"byte_end":7791637,"line_start":159,"line_end":159,"column_start":1,"column_end":95}},{"value":"! example of `while let`:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791638,"byte_end":7791665,"line_start":160,"line_end":160,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791666,"byte_end":7791669,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791670,"byte_end":7791677,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791678,"byte_end":7791752,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791753,"byte_end":7791758,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"! # use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791759,"byte_end":7791791,"line_start":165,"line_end":165,"column_start":1,"column_end":33}},{"value":"! # use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791792,"byte_end":7791820,"line_start":166,"line_end":166,"column_start":1,"column_end":29}},{"value":"! let mut values = stream::repeat(1u8).take(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791821,"byte_end":7791870,"line_start":167,"line_end":167,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791871,"byte_end":7791874,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"! while let Some(x) = values.next().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791875,"byte_end":7791920,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"!     println!(\"{}\", x);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791921,"byte_end":7791947,"line_start":170,"line_end":170,"column_start":1,"column_end":27}},{"value":"! }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791948,"byte_end":7791953,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791954,"byte_end":7791959,"line_start":172,"line_end":172,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791960,"byte_end":7791977,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791978,"byte_end":7791985,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791986,"byte_end":7791989,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"! This will print the numbers one through five, each on their own line. But","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7791990,"byte_end":7792067,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"! you'll notice something here: we never called anything on our vector to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792068,"byte_end":7792143,"line_start":177,"line_end":177,"column_start":1,"column_end":76}},{"value":"! produce a stream. What gives?","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792144,"byte_end":7792177,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792178,"byte_end":7792181,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"! There's a trait in the standard library for converting something into an","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792182,"byte_end":7792258,"line_start":180,"line_end":180,"column_start":1,"column_end":77}},{"value":"! stream: [`IntoStream`]. This trait has one method, [`into_stream`],","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792259,"byte_end":7792330,"line_start":181,"line_end":181,"column_start":1,"column_end":72}},{"value":"! which converts the thing implementing [`IntoStream`] into a stream.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792331,"byte_end":7792402,"line_start":182,"line_end":182,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792403,"byte_end":7792406,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"! Unlike `std::iter::IntoIterator`, `IntoStream` does not have compiler","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792407,"byte_end":7792480,"line_start":184,"line_end":184,"column_start":1,"column_end":74}},{"value":"! support yet. This means that automatic conversions like with `for` loops","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792481,"byte_end":7792557,"line_start":185,"line_end":185,"column_start":1,"column_end":77}},{"value":"! doesn't occur yet, and `into_stream` will always have to be called manually.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792558,"byte_end":7792638,"line_start":186,"line_end":186,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792639,"byte_end":7792642,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"! [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792643,"byte_end":7792684,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"! [`into_stream`]: trait.IntoStream.html#tymethod.into_stream","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792685,"byte_end":7792748,"line_start":189,"line_end":189,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792749,"byte_end":7792752,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"! # Adapters","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792753,"byte_end":7792767,"line_start":191,"line_end":191,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792768,"byte_end":7792771,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"! Functions which take an [`Stream`] and return another [`Stream`] are","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792772,"byte_end":7792844,"line_start":193,"line_end":193,"column_start":1,"column_end":73}},{"value":"! often called 'stream adapters', as they are a form of the 'adapter","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792845,"byte_end":7792915,"line_start":194,"line_end":194,"column_start":1,"column_end":71}},{"value":"! pattern'.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792916,"byte_end":7792929,"line_start":195,"line_end":195,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792930,"byte_end":7792933,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! Common stream adapters include [`map`], [`take`], and [`filter`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7792934,"byte_end":7793003,"line_start":197,"line_end":197,"column_start":1,"column_end":70}},{"value":"! For more, see their documentation.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793004,"byte_end":7793042,"line_start":198,"line_end":198,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793043,"byte_end":7793046,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"! [`map`]: trait.Stream.html#method.map","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793047,"byte_end":7793088,"line_start":200,"line_end":200,"column_start":1,"column_end":42}},{"value":"! [`take`]: trait.Stream.html#method.take","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793089,"byte_end":7793132,"line_start":201,"line_end":201,"column_start":1,"column_end":44}},{"value":"! [`filter`]: trait.Stream.html#method.filter","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793133,"byte_end":7793180,"line_start":202,"line_end":202,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793181,"byte_end":7793184,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"! # Laziness","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793185,"byte_end":7793199,"line_start":204,"line_end":204,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793200,"byte_end":7793203,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"! Streams (and stream [adapters](#adapters)) are *lazy*. This means that","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793204,"byte_end":7793278,"line_start":206,"line_end":206,"column_start":1,"column_end":75}},{"value":"! just creating a stream doesn't _do_ a whole lot. Nothing really happens","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793279,"byte_end":7793354,"line_start":207,"line_end":207,"column_start":1,"column_end":76}},{"value":"! until you call [`next`]. This is sometimes a source of confusion when","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793355,"byte_end":7793428,"line_start":208,"line_end":208,"column_start":1,"column_end":74}},{"value":"! creating a stream solely for its side effects. For example, the [`map`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793429,"byte_end":7793504,"line_start":209,"line_end":209,"column_start":1,"column_end":76}},{"value":"! method calls a closure on each element it iterates over:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793505,"byte_end":7793565,"line_start":210,"line_end":210,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793566,"byte_end":7793569,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793570,"byte_end":7793577,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"! # #![allow(unused_must_use)]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793578,"byte_end":7793610,"line_start":213,"line_end":213,"column_start":1,"column_end":33}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793611,"byte_end":7793685,"line_start":214,"line_end":214,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793686,"byte_end":7793691,"line_start":215,"line_end":215,"column_start":1,"column_end":6}},{"value":"! # use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793692,"byte_end":7793724,"line_start":216,"line_end":216,"column_start":1,"column_end":33}},{"value":"! # use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793725,"byte_end":7793753,"line_start":217,"line_end":217,"column_start":1,"column_end":29}},{"value":"! let v = stream::repeat(1u8).take(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793754,"byte_end":7793794,"line_start":218,"line_end":218,"column_start":1,"column_end":41}},{"value":"! v.map(|x| println!(\"{}\", x));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793795,"byte_end":7793828,"line_start":219,"line_end":219,"column_start":1,"column_end":34}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793829,"byte_end":7793834,"line_start":220,"line_end":220,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793835,"byte_end":7793852,"line_start":221,"line_end":221,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793853,"byte_end":7793860,"line_start":222,"line_end":222,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793861,"byte_end":7793864,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"! This will not print any values, as we only created a stream, rather than","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793865,"byte_end":7793941,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"! using it. The compiler will warn us about this kind of behavior:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7793942,"byte_end":7794010,"line_start":225,"line_end":225,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794011,"byte_end":7794014,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794015,"byte_end":7794026,"line_start":227,"line_end":227,"column_start":1,"column_end":12}},{"value":"! warning: unused result that must be used: streams are lazy and","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794027,"byte_end":7794093,"line_start":228,"line_end":228,"column_start":1,"column_end":67}},{"value":"! do nothing unless consumed","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794094,"byte_end":7794124,"line_start":229,"line_end":229,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794125,"byte_end":7794132,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794133,"byte_end":7794136,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"! The idiomatic way to write a [`map`] for its side effects is to use a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794137,"byte_end":7794210,"line_start":232,"line_end":232,"column_start":1,"column_end":74}},{"value":"! `while let` loop instead:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794211,"byte_end":7794240,"line_start":233,"line_end":233,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794241,"byte_end":7794244,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794245,"byte_end":7794252,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794253,"byte_end":7794327,"line_start":236,"line_end":236,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794328,"byte_end":7794333,"line_start":237,"line_end":237,"column_start":1,"column_end":6}},{"value":"! # use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794334,"byte_end":7794366,"line_start":238,"line_end":238,"column_start":1,"column_end":33}},{"value":"! # use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794367,"byte_end":7794395,"line_start":239,"line_end":239,"column_start":1,"column_end":29}},{"value":"! let mut v = stream::repeat(1u8).take(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794396,"byte_end":7794440,"line_start":240,"line_end":240,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794441,"byte_end":7794444,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"! while let Some(x) = &v.next().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794445,"byte_end":7794486,"line_start":242,"line_end":242,"column_start":1,"column_end":42}},{"value":"!     println!(\"{}\", x);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794487,"byte_end":7794513,"line_start":243,"line_end":243,"column_start":1,"column_end":27}},{"value":"! }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794514,"byte_end":7794519,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794520,"byte_end":7794525,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794526,"byte_end":7794543,"line_start":246,"line_end":246,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794544,"byte_end":7794551,"line_start":247,"line_end":247,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794552,"byte_end":7794555,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"! [`map`]: trait.Stream.html#method.map","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794556,"byte_end":7794597,"line_start":249,"line_end":249,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794598,"byte_end":7794601,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"! The two most common ways to evaluate a stream are to use a `while let` loop","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794602,"byte_end":7794681,"line_start":251,"line_end":251,"column_start":1,"column_end":80}},{"value":"! like this, or using the [`collect`] method to produce a new collection.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794682,"byte_end":7794757,"line_start":252,"line_end":252,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794758,"byte_end":7794761,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"! [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794762,"byte_end":7794811,"line_start":254,"line_end":254,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794812,"byte_end":7794815,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"! # Infinity","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794816,"byte_end":7794830,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794831,"byte_end":7794834,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"! Streams do not have to be finite. As an example, an repeat stream is","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794835,"byte_end":7794907,"line_start":258,"line_end":258,"column_start":1,"column_end":73}},{"value":"! an infinite stream:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794908,"byte_end":7794931,"line_start":259,"line_end":259,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794932,"byte_end":7794935,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794936,"byte_end":7794943,"line_start":261,"line_end":261,"column_start":1,"column_end":8}},{"value":"! # use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794944,"byte_end":7794972,"line_start":262,"line_end":262,"column_start":1,"column_end":29}},{"value":"! let numbers = stream::repeat(1u8);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7794973,"byte_end":7795011,"line_start":263,"line_end":263,"column_start":1,"column_end":39}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795012,"byte_end":7795019,"line_start":264,"line_end":264,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795020,"byte_end":7795023,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"! It is common to use the [`take`] stream adapter to turn an infinite","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795024,"byte_end":7795095,"line_start":266,"line_end":266,"column_start":1,"column_end":72}},{"value":"! stream into a finite one:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795096,"byte_end":7795125,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795126,"byte_end":7795129,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795130,"byte_end":7795137,"line_start":269,"line_end":269,"column_start":1,"column_end":8}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795138,"byte_end":7795212,"line_start":270,"line_end":270,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795213,"byte_end":7795218,"line_start":271,"line_end":271,"column_start":1,"column_end":6}},{"value":"! # use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795219,"byte_end":7795251,"line_start":272,"line_end":272,"column_start":1,"column_end":33}},{"value":"! # use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795252,"byte_end":7795280,"line_start":273,"line_end":273,"column_start":1,"column_end":29}},{"value":"! let numbers = stream::repeat(1u8);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795281,"byte_end":7795319,"line_start":274,"line_end":274,"column_start":1,"column_end":39}},{"value":"! let mut five_numbers = numbers.take(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795320,"byte_end":7795363,"line_start":275,"line_end":275,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795364,"byte_end":7795367,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"! while let Some(number) = five_numbers.next().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795368,"byte_end":7795424,"line_start":277,"line_end":277,"column_start":1,"column_end":57}},{"value":"!     println!(\"{}\", number);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795425,"byte_end":7795456,"line_start":278,"line_end":278,"column_start":1,"column_end":32}},{"value":"! }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795457,"byte_end":7795462,"line_start":279,"line_end":279,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795463,"byte_end":7795468,"line_start":280,"line_end":280,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795469,"byte_end":7795486,"line_start":281,"line_end":281,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795487,"byte_end":7795494,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795495,"byte_end":7795498,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"! This will print the numbers `0` through `4`, each on their own line.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795499,"byte_end":7795571,"line_start":284,"line_end":284,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795572,"byte_end":7795575,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"! Bear in mind that methods on infinite streams, even those for which a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795576,"byte_end":7795649,"line_start":286,"line_end":286,"column_start":1,"column_end":74}},{"value":"! result can be determined mathematically in finite time, may not terminate.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795650,"byte_end":7795728,"line_start":287,"line_end":287,"column_start":1,"column_end":79}},{"value":"! Specifically, methods such as [`min`], which in the general case require","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795729,"byte_end":7795805,"line_start":288,"line_end":288,"column_start":1,"column_end":77}},{"value":"! traversing every element in the stream, are likely not to return","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795806,"byte_end":7795874,"line_start":289,"line_end":289,"column_start":1,"column_end":69}},{"value":"! successfully for any infinite streams.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795875,"byte_end":7795917,"line_start":290,"line_end":290,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795918,"byte_end":7795921,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795922,"byte_end":7795935,"line_start":292,"line_end":292,"column_start":1,"column_end":14}},{"value":"! let ones = async_std::stream::repeat(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795936,"byte_end":7795980,"line_start":293,"line_end":293,"column_start":1,"column_end":45}},{"value":"! let least = ones.min().await.unwrap(); // Oh no! An infinite loop!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7795981,"byte_end":7796051,"line_start":294,"line_end":294,"column_start":1,"column_end":71}},{"value":"! // `ones.min()` causes an infinite loop, so we won't reach this point!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796052,"byte_end":7796126,"line_start":295,"line_end":295,"column_start":1,"column_end":75}},{"value":"! println!(\"The smallest number one is {}.\", least);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796127,"byte_end":7796181,"line_start":296,"line_end":296,"column_start":1,"column_end":55}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796182,"byte_end":7796189,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796190,"byte_end":7796193,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"! [`std::iter`]: https://doc.rust-lang.org/std/iter/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796194,"byte_end":7796258,"line_start":299,"line_end":299,"column_start":1,"column_end":65}},{"value":"! [`take`]: trait.Stream.html#method.take","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796259,"byte_end":7796302,"line_start":300,"line_end":300,"column_start":1,"column_end":44}},{"value":"! [`min`]: trait.Stream.html#method.min","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/mod.rs","byte_start":7796303,"byte_end":7796344,"line_start":301,"line_end":301,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":107},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/all.rs","byte_start":7868229,"byte_end":7868238,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/all.rs","byte_start":7868178,"byte_end":7868217,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/any.rs","byte_start":7869584,"byte_end":7869593,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/any.rs","byte_start":7869533,"byte_end":7869572,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9309},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/chain.rs","byte_start":7871240,"byte_end":7871245,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9312},{"krate":0,"index":9313}],"decl_id":null,"docs":" A stream that chains two streams one after another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9267},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cloned.rs","byte_start":7872572,"byte_end":7872578,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Cloned","qualname":"::stream::stream::cloned::Cloned","value":"Cloned {  }","parent":null,"children":[{"krate":0,"index":9269}],"decl_id":null,"docs":" A stream that clones the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9192},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cmp.rs","byte_start":7873502,"byte_end":7873511,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"CmpFuture","qualname":"::stream::stream::cmp::CmpFuture","value":"CmpFuture {  }","parent":null,"children":[{"krate":0,"index":9195},{"krate":0,"index":9196},{"krate":0,"index":9197},{"krate":0,"index":9198}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9178},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/copied.rs","byte_start":7876193,"byte_end":7876199,"line_start":9,"line_end":9,"column_start":16,"column_end":22},"name":"Copied","qualname":"::stream::stream::copied::Copied","value":"Copied {  }","parent":null,"children":[{"krate":0,"index":9180}],"decl_id":null,"docs":" A stream that copies the elements of an underlying stream.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1667},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cycle.rs","byte_start":7876899,"byte_end":7876904,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1670}],"decl_id":null,"docs":" A stream that will repeatedly yield the same list of elements.\n","sig":null,"attributes":[{"value":"/ A stream that will repeatedly yield the same list of elements.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cycle.rs","byte_start":7876804,"byte_end":7876870,"line_start":7,"line_end":7,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":9139},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/enumerate.rs","byte_start":7878141,"byte_end":7878150,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":9141},{"krate":0,"index":9142}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9071},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/eq.rs","byte_start":7879227,"byte_end":7879235,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"EqFuture","qualname":"::stream::stream::eq::EqFuture","value":"EqFuture {  }","parent":null,"children":[{"krate":0,"index":9074},{"krate":0,"index":9075}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9050},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/filter.rs","byte_start":7880774,"byte_end":7880780,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":9053},{"krate":0,"index":9054}],"decl_id":null,"docs":" A stream to filter elements of another stream with a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9001},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/filter_map.rs","byte_start":7881753,"byte_end":7881762,"line_start":10,"line_end":10,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":9004},{"krate":0,"index":9005}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":321},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find.rs","byte_start":7882741,"byte_end":7882751,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"FindFuture","qualname":"::stream::stream::find::FindFuture","value":"FindFuture {  }","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find.rs","byte_start":7882690,"byte_end":7882729,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":348},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find_map.rs","byte_start":7883737,"byte_end":7883750,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"FindMapFuture","qualname":"::stream::stream::find_map::FindMapFuture","value":"FindMapFuture {  }","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find_map.rs","byte_start":7883686,"byte_end":7883725,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8945},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/fold.rs","byte_start":7884827,"byte_end":7884837,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":8949},{"krate":0,"index":8950},{"krate":0,"index":8951}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8866},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/for_each.rs","byte_start":7886027,"byte_end":7886040,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"ForEachFuture","qualname":"::stream::stream::for_each::ForEachFuture","value":"ForEachFuture {  }","parent":null,"children":[{"krate":0,"index":8869},{"krate":0,"index":8870}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8846},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/fuse.rs","byte_start":7887220,"byte_end":7887224,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":8848},{"krate":0,"index":8849}],"decl_id":null,"docs":" A stream that yields `None` forever after the underlying stream yields `None` once.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8782},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/ge.rs","byte_start":7888380,"byte_end":7888388,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GeFuture","qualname":"::stream::stream::ge::GeFuture","value":"GeFuture {  }","parent":null,"children":[{"krate":0,"index":8785}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8741},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/gt.rs","byte_start":7889613,"byte_end":7889621,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"GtFuture","qualname":"::stream::stream::gt::GtFuture","value":"GtFuture {  }","parent":null,"children":[{"krate":0,"index":8744}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8720},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/inspect.rs","byte_start":7890850,"byte_end":7890857,"line_start":17,"line_end":17,"column_start":16,"column_end":23},"name":"Inspect","qualname":"::stream::stream::inspect::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":8723},{"krate":0,"index":8724}],"decl_id":null,"docs":" A stream that does something with each element of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8647},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/last.rs","byte_start":7891730,"byte_end":7891740,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"LastFuture","qualname":"::stream::stream::last::LastFuture","value":"LastFuture {  }","parent":null,"children":[{"krate":0,"index":8650},{"krate":0,"index":8651}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8606},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/le.rs","byte_start":7892953,"byte_end":7892961,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LeFuture","qualname":"::stream::stream::le::LeFuture","value":"LeFuture {  }","parent":null,"children":[{"krate":0,"index":8609}],"decl_id":null,"docs":" Determines if the elements of this `Stream` are lexicographically\n less or equal to those of another.\n","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8565},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/lt.rs","byte_start":7894196,"byte_end":7894204,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"LtFuture","qualname":"::stream::stream::lt::LtFuture","value":"LtFuture {  }","parent":null,"children":[{"krate":0,"index":8568}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8544},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/map.rs","byte_start":7895202,"byte_end":7895205,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":8547},{"krate":0,"index":8548}],"decl_id":null,"docs":" A stream that maps value of another stream with a function.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8471},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/max.rs","byte_start":7896029,"byte_end":7896038,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MaxFuture","qualname":"::stream::stream::max::MaxFuture","value":"MaxFuture {  }","parent":null,"children":[{"krate":0,"index":8474},{"krate":0,"index":8475}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8414},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/max_by.rs","byte_start":7897306,"byte_end":7897317,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MaxByFuture","qualname":"::stream::stream::max_by::MaxByFuture","value":"MaxByFuture {  }","parent":null,"children":[{"krate":0,"index":8418},{"krate":0,"index":8419},{"krate":0,"index":8420}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8357},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/max_by_key.rs","byte_start":7898730,"byte_end":7898744,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MaxByKeyFuture","qualname":"::stream::stream::max_by_key::MaxByKeyFuture","value":"MaxByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":8361},{"krate":0,"index":8362},{"krate":0,"index":8363}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8312},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/min.rs","byte_start":7900384,"byte_end":7900393,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"MinFuture","qualname":"::stream::stream::min::MinFuture","value":"MinFuture {  }","parent":null,"children":[{"krate":0,"index":8315},{"krate":0,"index":8316}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8255},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/min_by.rs","byte_start":7901658,"byte_end":7901669,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"MinByFuture","qualname":"::stream::stream::min_by::MinByFuture","value":"MinByFuture {  }","parent":null,"children":[{"krate":0,"index":8259},{"krate":0,"index":8260},{"krate":0,"index":8261}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8198},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/min_by_key.rs","byte_start":7903108,"byte_end":7903122,"line_start":13,"line_end":13,"column_start":16,"column_end":30},"name":"MinByKeyFuture","qualname":"::stream::stream::min_by_key::MinByKeyFuture","value":"MinByKeyFuture {  }","parent":null,"children":[{"krate":0,"index":8202},{"krate":0,"index":8203},{"krate":0,"index":8204}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8153},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/ne.rs","byte_start":7904882,"byte_end":7904890,"line_start":16,"line_end":16,"column_start":16,"column_end":24},"name":"NeFuture","qualname":"::stream::stream::ne::NeFuture","value":"NeFuture {  }","parent":null,"children":[{"krate":0,"index":8156},{"krate":0,"index":8157}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":703},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/next.rs","byte_start":7906190,"byte_end":7906200,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"NextFuture","qualname":"::stream::stream::next::NextFuture","value":"NextFuture {  }","parent":null,"children":[{"krate":0,"index":706}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/next.rs","byte_start":7906139,"byte_end":7906178,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":718},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/nth.rs","byte_start":7906680,"byte_end":7906689,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"NthFuture","qualname":"::stream::stream::nth::NthFuture","value":"NthFuture {  }","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/nth.rs","byte_start":7906629,"byte_end":7906668,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8100},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/partial_cmp.rs","byte_start":7907943,"byte_end":7907959,"line_start":17,"line_end":17,"column_start":16,"column_end":32},"name":"PartialCmpFuture","qualname":"::stream::stream::partial_cmp::PartialCmpFuture","value":"PartialCmpFuture {  }","parent":null,"children":[{"krate":0,"index":8103},{"krate":0,"index":8104},{"krate":0,"index":8105},{"krate":0,"index":8106}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":761},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/position.rs","byte_start":7910688,"byte_end":7910702,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"PositionFuture","qualname":"::stream::stream::position::PositionFuture","value":"PositionFuture {  }","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/position.rs","byte_start":7910637,"byte_end":7910676,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8075},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/scan.rs","byte_start":7912174,"byte_end":7912178,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":8079},{"krate":0,"index":8080}],"decl_id":null,"docs":" A stream to maintain state while polling another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8025},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/skip.rs","byte_start":7913394,"byte_end":7913398,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":8027},{"krate":0,"index":8028}],"decl_id":null,"docs":" A stream to skip first n elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7981},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/skip_while.rs","byte_start":7914613,"byte_end":7914622,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7984},{"krate":0,"index":7985}],"decl_id":null,"docs":" A stream to skip elements of another stream based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7933},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/step_by.rs","byte_start":7916156,"byte_end":7916162,"line_start":17,"line_end":17,"column_start":16,"column_end":22},"name":"StepBy","qualname":"::stream::stream::step_by::StepBy","value":"StepBy {  }","parent":null,"children":[{"krate":0,"index":7935},{"krate":0,"index":7936},{"krate":0,"index":7937}],"decl_id":null,"docs":" A stream that steps a given amount of elements of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7889},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/take.rs","byte_start":7917565,"byte_end":7917569,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7891},{"krate":0,"index":7892}],"decl_id":null,"docs":" A stream that yields the first `n` items of another stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7845},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/take_while.rs","byte_start":7918804,"byte_end":7918813,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":7848},{"krate":0,"index":7849}],"decl_id":null,"docs":" A stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":885},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_fold.rs","byte_start":7919822,"byte_end":7919835,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"TryFoldFuture","qualname":"::stream::stream::try_fold::TryFoldFuture","value":"TryFoldFuture {  }","parent":null,"children":[{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_fold.rs","byte_start":7919771,"byte_end":7919810,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":919},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_for_each.rs","byte_start":7921162,"byte_end":7921178,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"TryForEachFuture","qualname":"::stream::stream::try_for_each::TryForEachFuture","value":"TryForEachFuture {  }","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_for_each.rs","byte_start":7921111,"byte_end":7921150,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":7768},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/zip.rs","byte_start":7922536,"byte_end":7922539,"line_start":17,"line_end":17,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":7771},{"krate":0,"index":7772},{"krate":0,"index":7773}],"decl_id":null,"docs":" A stream that takes items from two other streams simultaneously.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7731},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/count.rs","byte_start":8124128,"byte_end":8124139,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"name":"CountFuture","qualname":"::stream::stream::count::CountFuture","value":"CountFuture {  }","parent":null,"children":[{"krate":0,"index":7733},{"krate":0,"index":7734}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7710},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/merge.rs","byte_start":8125441,"byte_end":8125446,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":7713},{"krate":0,"index":7714}],"decl_id":null,"docs":" A stream that merges two other streams into a single stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7645},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/flatten.rs","byte_start":8127182,"byte_end":8127189,"line_start":18,"line_end":18,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7647},{"krate":0,"index":7648}],"decl_id":null,"docs":" A stream that flattens one level of nesting in an stream of things that can be turned into\n streams.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7592},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/flat_map.rs","byte_start":8129327,"byte_end":8129334,"line_start":19,"line_end":19,"column_start":16,"column_end":23},"name":"FlatMap","qualname":"::stream::stream::flat_map::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":7596},{"krate":0,"index":7597}],"decl_id":null,"docs":" A stream that maps each element to a stream, and yields the elements of the produced\n streams.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7564},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/partition.rs","byte_start":8130834,"byte_end":8130849,"line_start":13,"line_end":13,"column_start":16,"column_end":31},"name":"PartitionFuture","qualname":"::stream::stream::partition::PartitionFuture","value":"PartitionFuture {  }","parent":null,"children":[{"krate":0,"index":7568},{"krate":0,"index":7569},{"krate":0,"index":7570}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7513},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/timeout.rs","byte_start":8132309,"byte_end":8132316,"line_start":16,"line_end":16,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7515},{"krate":0,"index":7516}],"decl_id":null,"docs":" A stream with timeout time set\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1880},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/timeout.rs","byte_start":8133380,"byte_end":8133392,"line_start":53,"line_end":53,"column_start":12,"column_end":24},"name":"TimeoutError","qualname":"::stream::stream::timeout::TimeoutError","value":"TimeoutError {  }","parent":null,"children":[{"krate":0,"index":1881}],"decl_id":null,"docs":" An error returned when a stream times out.\n","sig":null,"attributes":[{"value":"/ An error returned when a stream times out.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/timeout.rs","byte_start":8133175,"byte_end":8133221,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/timeout.rs","byte_start":8133272,"byte_end":8133323,"line_start":51,"line_end":51,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7445},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/throttle.rs","byte_start":8134190,"byte_end":8134198,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::stream::stream::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":7447},{"krate":0,"index":7448},{"krate":0,"index":7449},{"krate":0,"index":7450}],"decl_id":null,"docs":" A stream that only yields one element once every `duration`.","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7404},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/delay.rs","byte_start":8135702,"byte_end":8135707,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Delay","qualname":"::stream::stream::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":7406},{"krate":0,"index":7407},{"krate":0,"index":7408}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7374},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/unzip.rs","byte_start":8136690,"byte_end":8136701,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"UnzipFuture","qualname":"::stream::stream::unzip::UnzipFuture","value":"UnzipFuture {  }","parent":null,"children":[{"krate":0,"index":7378},{"krate":0,"index":7379}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":1906},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7802992,"byte_end":7803001,"line_start":237,"line_end":237,"column_start":15,"column_end":24},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1917},{"krate":0,"index":1920},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1929},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1935},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1942},{"krate":0,"index":1945},{"krate":0,"index":1948},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1959},{"krate":0,"index":1962},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":1970},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1986},{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1996},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2010},{"krate":0,"index":2012},{"krate":0,"index":2014},{"krate":0,"index":2016},{"krate":0,"index":2018},{"krate":0,"index":2020},{"krate":0,"index":2023}],"decl_id":null,"docs":"\n        Extension methods for [`Stream`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1909},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7803836,"byte_end":7803840,"line_start":263,"line_end":263,"column_start":12,"column_end":16},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn (&mut self) -> NextFuture<'_, Self>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7804520,"byte_end":7804524,"line_start":290,"line_end":290,"column_start":12,"column_end":16},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Creates a stream that yields its first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1911},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7805253,"byte_end":7805263,"line_start":318,"line_end":318,"column_start":12,"column_end":22},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn <P> (self, predicate: P) -> TakeWhile<Self, P>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Creates a stream that yields elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7806582,"byte_end":7806590,"line_start":360,"line_end":360,"column_start":12,"column_end":20},"name":"throttle","qualname":"::stream::stream::StreamExt::throttle","value":"fn (self, d: Duration) -> Throttle<Self>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Limit the amount of items yielded per timeslice in a stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7806484,"byte_end":7806512,"line_start":358,"line_end":358,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7807504,"byte_end":7807511,"line_start":396,"line_end":396,"column_start":12,"column_end":19},"name":"step_by","qualname":"::stream::stream::StreamExt::step_by","value":"fn (self, step: usize) -> StepBy<Self>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Creates a stream that yields each `step`th element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7808431,"byte_end":7808436,"line_start":430,"line_end":430,"column_start":12,"column_end":17},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn <U> (self, other: U) -> Chain<Self, U>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Takes two streams and creates a new stream over both in sequence.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7809320,"byte_end":7809326,"line_start":464,"line_end":464,"column_start":12,"column_end":18},"name":"cloned","qualname":"::stream::stream::StreamExt::cloned","value":"fn <'a, T> (self) -> Cloned<Self>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7810192,"byte_end":7810198,"line_start":497,"line_end":497,"column_start":12,"column_end":18},"name":"copied","qualname":"::stream::stream::StreamExt::copied","value":"fn <'a, T> (self) -> Copied<Self>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Creates an stream which copies all of its elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7811042,"byte_end":7811047,"line_start":529,"line_end":529,"column_start":12,"column_end":17},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"fn (self) -> Cycle<Self>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Creates a stream that yields the provided values infinitely and in order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7811957,"byte_end":7811966,"line_start":562,"line_end":562,"column_start":12,"column_end":21},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn (self) -> Enumerate<Self>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Creates a stream that gives the current element's count as well as the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7813297,"byte_end":7813302,"line_start":603,"line_end":603,"column_start":12,"column_end":17},"name":"delay","qualname":"::stream::stream::StreamExt::delay","value":"fn (self, dur: std::time::Duration) -> Delay<Self>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Creates a stream that is delayed before it starts yielding items.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7813176,"byte_end":7813227,"line_start":601,"line_end":601,"column_start":9,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7814123,"byte_end":7814126,"line_start":633,"line_end":633,"column_start":12,"column_end":15},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn <B, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Takes a closure and creates a stream that calls that closure on every element of this stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7815066,"byte_end":7815073,"line_start":669,"line_end":669,"column_start":12,"column_end":19},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            A combinator that does something with each element in the stream, passing the value\n            on.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7816122,"byte_end":7816126,"line_start":713,"line_end":713,"column_start":12,"column_end":16},"name":"last","qualname":"::stream::stream::StreamExt::last","value":"fn (self) -> LastFuture<Self, Self::Item>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Returns the last element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7817085,"byte_end":7817089,"line_start":745,"line_end":745,"column_start":12,"column_end":16},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Creates a stream which ends after the first `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7817855,"byte_end":7817861,"line_start":775,"line_end":775,"column_start":12,"column_end":18},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn <P> (self, predicate: P) -> Filter<Self, P>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Creates a stream that uses a predicate to determine if an element should be yielded.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1935},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7819077,"byte_end":7819085,"line_start":815,"line_end":815,"column_start":12,"column_end":20},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"fn <U, F> (self, f: F) -> FlatMap<Self, U, F>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Creates an stream that works like map, but flattens nested structure.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7818979,"byte_end":7819007,"line_start":813,"line_end":813,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7819998,"byte_end":7820005,"line_start":849,"line_end":849,"column_start":12,"column_end":19},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Creates an stream that flattens nested structure.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7819900,"byte_end":7819928,"line_start":847,"line_end":847,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7820985,"byte_end":7820995,"line_start":890,"line_end":890,"column_start":12,"column_end":22},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn <B, F> (self, f: F) -> FilterMap<Self, F>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Both filters and maps a stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7821984,"byte_end":7821994,"line_start":922,"line_end":922,"column_start":12,"column_end":22},"name":"min_by_key","qualname":"::stream::stream::StreamExt::min_by_key","value":"fn <B, F> (self, key_by: F) -> MinByKeyFuture<Self, Self::Item, F>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the minimum value with respect to the\n            specified key function. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7823113,"byte_end":7823123,"line_start":958,"line_end":958,"column_start":12,"column_end":22},"name":"max_by_key","qualname":"::stream::stream::StreamExt::max_by_key","value":"fn <B, F> (self, key_by: F) -> MaxByKeyFuture<Self, Self::Item, F>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the maximum value with respect to the\n            specified key function. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1948},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7824327,"byte_end":7824333,"line_start":997,"line_end":997,"column_start":12,"column_end":18},"name":"min_by","qualname":"::stream::stream::StreamExt::min_by","value":"fn <F> (self, compare: F) -> MinByFuture<Self, F, Self::Item>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the minimum value with respect to the\n            specified comparison function. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7825344,"byte_end":7825347,"line_start":1031,"line_end":1031,"column_start":12,"column_end":15},"name":"max","qualname":"::stream::stream::StreamExt::max","value":"fn (self) -> MaxFuture<Self, Self::Item>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the maximum value. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1951},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7826292,"byte_end":7826295,"line_start":1064,"line_end":1064,"column_start":12,"column_end":15},"name":"min","qualname":"::stream::stream::StreamExt::min","value":"fn (self) -> MinFuture<Self, Self::Item>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the minimum value. If several elements are equally minimum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7827422,"byte_end":7827428,"line_start":1101,"line_end":1101,"column_start":12,"column_end":18},"name":"max_by","qualname":"::stream::stream::StreamExt::max_by","value":"fn <F> (self, compare: F) -> MaxByFuture<Self, F, Self::Item>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Returns the element that gives the maximum value with respect to the\n            specified comparison function. If several elements are equally maximum,\n            the first element is returned. If the stream is empty, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1954},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7829153,"byte_end":7829156,"line_start":1165,"line_end":1165,"column_start":12,"column_end":15},"name":"nth","qualname":"::stream::stream::StreamExt::nth","value":"fn (&mut self, n: usize) -> NthFuture<'_, Self>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Returns the nth element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7830746,"byte_end":7830749,"line_start":1221,"line_end":1221,"column_start":12,"column_end":15},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"fn <F> (&mut self, f: F) -> AllFuture<'_, Self, F, Self::Item>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7830725,"byte_end":7830734,"line_start":1220,"line_end":1220,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7832034,"byte_end":7832038,"line_start":1270,"line_end":1270,"column_start":12,"column_end":16},"name":"find","qualname":"::stream::stream::StreamExt::find","value":"fn <P> (&mut self, p: P) -> FindFuture<'_, Self, P>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Searches for an element in a stream that satisfies a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1959},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7832859,"byte_end":7832867,"line_start":1298,"line_end":1298,"column_start":12,"column_end":20},"name":"find_map","qualname":"::stream::stream::StreamExt::find_map","value":"fn <F, B> (&mut self, f: F) -> FindMapFuture<'_, Self, F>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Applies function to the elements of stream and returns the first non-none result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7833727,"byte_end":7833731,"line_start":1331,"line_end":1331,"column_start":12,"column_end":16},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn <B, F> (self, init: B, f: F) -> FoldFuture<Self, F, B>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            A combinator that applies a function to every element in a stream\n            producing a single, final value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1965},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7834748,"byte_end":7834757,"line_start":1369,"line_end":1369,"column_start":12,"column_end":21},"name":"partition","qualname":"::stream::stream::StreamExt::partition","value":"fn <B, F> (self, f: F) -> PartitionFuture<Self, F, B>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            A combinator that applies a function to every element in a stream\n            creating two collections from it.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7834650,"byte_end":7834678,"line_start":1367,"line_end":1367,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7835714,"byte_end":7835722,"line_start":1405,"line_end":1405,"column_start":12,"column_end":20},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn <F> (self, f: F) -> ForEachFuture<Self, F>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Call a closure on each element of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7837315,"byte_end":7837318,"line_start":1461,"line_end":1461,"column_start":12,"column_end":15},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"fn <F> (&mut self, f: F) -> AnyFuture<'_, Self, F, Self::Item>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7837294,"byte_end":7837303,"line_start":1460,"line_end":1460,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7838928,"byte_end":7838934,"line_start":1516,"line_end":1516,"column_start":12,"column_end":18},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"fn (&mut self) -> &mut Self","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Borrows an stream, rather than consuming it.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7838830,"byte_end":7838858,"line_start":1514,"line_end":1514,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7840334,"byte_end":7840338,"line_start":1557,"line_end":1557,"column_start":12,"column_end":16},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn <St, B, F> (self, initial_state: St, f: F) -> Scan<Self, St, F>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            A stream adaptor similar to [`fold`] that holds internal state and produces a new\n            stream.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7840313,"byte_end":7840322,"line_start":1556,"line_end":1556,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7841458,"byte_end":7841468,"line_start":1592,"line_end":1592,"column_start":12,"column_end":22},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn <P> (self, predicate: P) -> SkipWhile<Self, P>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Combinator that `skip`s elements based on a predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7842217,"byte_end":7842221,"line_start":1620,"line_end":1620,"column_start":12,"column_end":16},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Creates a combinator that skips the first `n` elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1980},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7843433,"byte_end":7843440,"line_start":1661,"line_end":1661,"column_start":12,"column_end":19},"name":"timeout","qualname":"::stream::stream::StreamExt::timeout","value":"fn (self, dur: Duration) -> Timeout<Self>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Await a stream or times out after a duration of time.","sig":null,"attributes":[{"value":"cfg(any(feature = \"unstable\", feature = \"docs\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7843312,"byte_end":7843363,"line_start":1659,"line_end":1659,"column_start":9,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7844410,"byte_end":7844418,"line_start":1696,"line_end":1696,"column_start":12,"column_end":20},"name":"try_fold","qualname":"::stream::stream::StreamExt::try_fold","value":"fn <B, F, T, E> (&mut self, init: T, f: F) -> TryFoldFuture<'_, Self, F, T>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            A combinator that applies a function as long as it returns successfully, producing a single, final value.\n            Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1986},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7845713,"byte_end":7845725,"line_start":1742,"line_end":1742,"column_start":12,"column_end":24},"name":"try_for_each","qualname":"::stream::stream::StreamExt::try_for_each","value":"fn <F, E> (&mut self, f: F) -> TryForEachFuture<'_, Self, F>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Applies a falliable function to each element in a stream, stopping at first error and returning it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7847432,"byte_end":7847435,"line_start":1790,"line_end":1790,"column_start":12,"column_end":15},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn <U> (self, other: U) -> Zip<Self, U>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            'Zips up' two streams into a single stream of pairs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7847411,"byte_end":7847420,"line_start":1789,"line_end":1789,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7848519,"byte_end":7848524,"line_start":1827,"line_end":1827,"column_start":12,"column_end":17},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"fn <A, B, FromA, FromB> (self) -> UnzipFuture<Self, FromA, FromB>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Converts an stream of pairs into a pair of containers.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7848421,"byte_end":7848449,"line_start":1825,"line_end":1825,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7850907,"byte_end":7850914,"line_start":1889,"line_end":1889,"column_start":12,"column_end":19},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"fn <'a, B> (self) -> Pin<Box<dyn Future<Output = B> + 'a>>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Transforms a stream into a collection.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7850809,"byte_end":7850837,"line_start":1887,"line_end":1887,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7852098,"byte_end":7852103,"line_start":1926,"line_end":1926,"column_start":12,"column_end":17},"name":"merge","qualname":"::stream::stream::StreamExt::merge","value":"fn <U> (self, other: U) -> Merge<Self, U>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Combines multiple streams into a single stream of all their outputs.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7852000,"byte_end":7852028,"line_start":1924,"line_end":1924,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7853368,"byte_end":7853379,"line_start":1961,"line_end":1961,"column_start":12,"column_end":23},"name":"partial_cmp","qualname":"::stream::stream::StreamExt::partial_cmp","value":"fn <S> (self, other: S) -> PartialCmpFuture<Self, S>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Lexicographically compares the elements of this `Stream` with those\n            of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7854540,"byte_end":7854548,"line_start":2001,"line_end":2001,"column_start":12,"column_end":20},"name":"position","qualname":"::stream::stream::StreamExt::position","value":"fn <P> (&mut self, predicate: P) -> PositionFuture<'_, Self, P>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Searches for an element in a Stream that satisfies a predicate, returning\n            its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7855866,"byte_end":7855869,"line_start":2039,"line_end":2039,"column_start":12,"column_end":15},"name":"cmp","qualname":"::stream::stream::StreamExt::cmp","value":"fn <S> (self, other: S) -> CmpFuture<Self, S>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Lexicographically compares the elements of this `Stream` with those\n            of another using 'Ord'.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7856777,"byte_end":7856782,"line_start":2073,"line_end":2073,"column_start":12,"column_end":17},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"fn (self) -> CountFuture<Self>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Counts the number of elements in the stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7856679,"byte_end":7856707,"line_start":2071,"line_end":2071,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7857883,"byte_end":7857885,"line_start":2105,"line_end":2105,"column_start":12,"column_end":14},"name":"ne","qualname":"::stream::stream::StreamExt::ne","value":"fn <S> (self, other: S) -> NeFuture<Self, S>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            not equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7859109,"byte_end":7859111,"line_start":2142,"line_end":2142,"column_start":12,"column_end":14},"name":"ge","qualname":"::stream::stream::StreamExt::ge","value":"fn <S> (self, other: S) -> GeFuture<Self, S>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            greater than or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7860327,"byte_end":7860329,"line_start":2179,"line_end":2179,"column_start":12,"column_end":14},"name":"eq","qualname":"::stream::stream::StreamExt::eq","value":"fn <S> (self, other: S) -> EqFuture<Self, S>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7861543,"byte_end":7861545,"line_start":2216,"line_end":2216,"column_start":12,"column_end":14},"name":"gt","qualname":"::stream::stream::StreamExt::gt","value":"fn <S> (self, other: S) -> GtFuture<Self, S>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            greater than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7862755,"byte_end":7862757,"line_start":2253,"line_end":2253,"column_start":12,"column_end":14},"name":"le","qualname":"::stream::stream::StreamExt::le","value":"fn <S> (self, other: S) -> LeFuture<Self, S>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            less or equal to those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7863961,"byte_end":7863963,"line_start":2290,"line_end":2290,"column_start":12,"column_end":14},"name":"lt","qualname":"::stream::stream::StreamExt::lt","value":"fn <S> (self, other: S) -> LtFuture<Self, S>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Determines if the elements of this `Stream` are lexicographically\n            less than those of another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2020},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7865193,"byte_end":7865196,"line_start":2335,"line_end":2335,"column_start":12,"column_end":15},"name":"sum","qualname":"::stream::stream::StreamExt::sum","value":"fn <'a, S> (self) -> Pin<Box<dyn Future<Output = S> + 'a>>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Sums the elements of a stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7865095,"byte_end":7865123,"line_start":2333,"line_end":2333,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2023},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7866577,"byte_end":7866584,"line_start":2381,"line_end":2381,"column_start":12,"column_end":19},"name":"product","qualname":"::stream::stream::StreamExt::product","value":"fn <'a, P> (self) -> Pin<Box<dyn Future<Output = P> + 'a>>","parent":{"krate":0,"index":1906},"children":[],"decl_id":null,"docs":"\n            Multiplies all elements of the stream.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7866479,"byte_end":7866507,"line_start":2379,"line_end":2379,"column_start":9,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1014},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924412,"byte_end":7924417,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ Creates a stream that doesn't yield any items.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7923981,"byte_end":7924031,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924032,"byte_end":7924035,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`empty`] function. See its","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924036,"byte_end":7924099,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924100,"byte_end":7924127,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924128,"byte_end":7924131,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924132,"byte_end":7924160,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924161,"byte_end":7924164,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924165,"byte_end":7924179,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924180,"byte_end":7924183,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924184,"byte_end":7924191,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924192,"byte_end":7924231,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924232,"byte_end":7924237,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924238,"byte_end":7924268,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924269,"byte_end":7924295,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924296,"byte_end":7924299,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::empty::<i32>();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924300,"byte_end":7924339,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924340,"byte_end":7924343,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924344,"byte_end":7924381,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924382,"byte_end":7924387,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924388,"byte_end":7924396,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924397,"byte_end":7924404,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2026},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924654,"byte_end":7924659,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2028}],"decl_id":null,"docs":" A stream that doesn't yield any items.","sig":null,"attributes":[{"value":"/ A stream that doesn't yield any items.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924488,"byte_end":7924530,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924531,"byte_end":7924534,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This stream is constructed by the [`empty`] function.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924535,"byte_end":7924592,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924593,"byte_end":7924596,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924597,"byte_end":7924625,"line_start":38,"line_end":38,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2032},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925179,"byte_end":7925185,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"FromFn","qualname":"::stream::from_fn::FromFn","value":"FromFn {  }","parent":null,"children":[{"krate":0,"index":2034}],"decl_id":null,"docs":" A stream that yields elements by calling a closure.","sig":null,"attributes":[{"value":"/ A stream that yields elements by calling a closure.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7924955,"byte_end":7925010,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925011,"byte_end":7925014,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`from_fn`] function. See its","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925015,"byte_end":7925078,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925079,"byte_end":7925106,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925107,"byte_end":7925110,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`from_fn`]: fn.from_fn.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925111,"byte_end":7925143,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":1028},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7926045,"byte_end":7926052,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"from_fn","qualname":"::stream::from_fn::from_fn","value":"fn <T, F> (f: F) -> FromFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a provided closure is called.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a provided closure is called.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925236,"byte_end":7925324,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925325,"byte_end":7925328,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This allows creating a custom stream with any behaviour without using the more verbose","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925329,"byte_end":7925419,"line_start":21,"line_end":21,"column_start":1,"column_end":91}},{"value":"/ syntax of creating a dedicated type and implementing a `Stream` trait for it.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925420,"byte_end":7925501,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925502,"byte_end":7925505,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925506,"byte_end":7925520,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925521,"byte_end":7925524,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925525,"byte_end":7925532,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925533,"byte_end":7925572,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925573,"byte_end":7925578,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925579,"byte_end":7925609,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925610,"byte_end":7925636,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925637,"byte_end":7925640,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut count = 0u8;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925641,"byte_end":7925665,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ let s = stream::from_fn(|| {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925666,"byte_end":7925698,"line_start":33,"line_end":33,"column_start":1,"column_end":33}},{"value":"/     count += 1;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925699,"byte_end":7925718,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/     if count > 3 {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925719,"byte_end":7925741,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/         None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925742,"byte_end":7925758,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     } else {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925759,"byte_end":7925775,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/         Some(count)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925776,"byte_end":7925799,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925800,"byte_end":7925809,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925810,"byte_end":7925817,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925818,"byte_end":7925821,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925822,"byte_end":7925849,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925850,"byte_end":7925853,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925854,"byte_end":7925894,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925895,"byte_end":7925935,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925936,"byte_end":7925976,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925977,"byte_end":7926014,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7926015,"byte_end":7926020,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7926021,"byte_end":7926029,"line_start":49,"line_end":49,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7926030,"byte_end":7926037,"line_start":50,"line_end":50,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7324},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7926861,"byte_end":7926869,"line_start":18,"line_end":18,"column_start":16,"column_end":24},"name":"FromIter","qualname":"::stream::from_iter::FromIter","value":"FromIter {  }","parent":null,"children":[{"krate":0,"index":7326}],"decl_id":null,"docs":" A stream that was created from iterator.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1044},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927369,"byte_end":7927378,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::stream::from_iter::from_iter","value":"fn <I> (iter: I) -> FromIter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator into a stream.","sig":null,"attributes":[{"value":"/ Converts an iterator into a stream.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7926901,"byte_end":7926940,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7926941,"byte_end":7926944,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7926945,"byte_end":7926959,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7926960,"byte_end":7926963,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7926964,"byte_end":7926971,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7926972,"byte_end":7927011,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927012,"byte_end":7927017,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927018,"byte_end":7927048,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927049,"byte_end":7927075,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927076,"byte_end":7927079,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::from_iter(vec![0, 1, 2, 3]);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927080,"byte_end":7927132,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927133,"byte_end":7927136,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(0));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927137,"byte_end":7927177,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927178,"byte_end":7927218,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927219,"byte_end":7927259,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(3));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927260,"byte_end":7927300,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927301,"byte_end":7927338,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927339,"byte_end":7927344,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927345,"byte_end":7927353,"line_start":41,"line_end":41,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927354,"byte_end":7927361,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1061},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928464,"byte_end":7928468,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn <T> (t: T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields a single item.","sig":null,"attributes":[{"value":"/ Creates a stream that yields a single item.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928131,"byte_end":7928178,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928179,"byte_end":7928182,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928183,"byte_end":7928197,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928198,"byte_end":7928201,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928202,"byte_end":7928209,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928210,"byte_end":7928249,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928250,"byte_end":7928255,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928256,"byte_end":7928286,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928287,"byte_end":7928313,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928314,"byte_end":7928317,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::once(7);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928318,"byte_end":7928350,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928351,"byte_end":7928354,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928355,"byte_end":7928395,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928396,"byte_end":7928433,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928434,"byte_end":7928439,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928440,"byte_end":7928448,"line_start":26,"line_end":26,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928449,"byte_end":7928456,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7285},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928768,"byte_end":7928772,"line_start":40,"line_end":40,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":7287}],"decl_id":null,"docs":" A stream that yields a single item.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1076},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929658,"byte_end":7929664,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn <T> (item: T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ Creates a stream that yields the same item repeatedly.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929309,"byte_end":7929367,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929368,"byte_end":7929371,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929372,"byte_end":7929386,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929387,"byte_end":7929390,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929391,"byte_end":7929398,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929399,"byte_end":7929438,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929439,"byte_end":7929444,"line_start":12,"line_end":12,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929445,"byte_end":7929475,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929476,"byte_end":7929502,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929503,"byte_end":7929506,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::repeat(7);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929507,"byte_end":7929541,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929542,"byte_end":7929545,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929546,"byte_end":7929586,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(7));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929587,"byte_end":7929627,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929628,"byte_end":7929633,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929634,"byte_end":7929642,"line_start":21,"line_end":21,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929643,"byte_end":7929650,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2041},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929951,"byte_end":7929957,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2043}],"decl_id":null,"docs":" A stream that yields the same item repeatedly.","sig":null,"attributes":[{"value":"/ A stream that yields the same item repeatedly.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929735,"byte_end":7929785,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929786,"byte_end":7929789,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat`] function. See its","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929790,"byte_end":7929852,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929853,"byte_end":7929880,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929881,"byte_end":7929884,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7929885,"byte_end":7929915,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2050},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930533,"byte_end":7930543,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":2052}],"decl_id":null,"docs":" A stream that repeats elements of type `T` endlessly by applying a provided closure.","sig":null,"attributes":[{"value":"/ A stream that repeats elements of type `T` endlessly by applying a provided closure.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930264,"byte_end":7930352,"line_start":6,"line_end":6,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930353,"byte_end":7930356,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`repeat_with`] function. See its","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930357,"byte_end":7930424,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ documentation for more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930425,"byte_end":7930452,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930453,"byte_end":7930456,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`repeat_with`]: fn.repeat_with.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930457,"byte_end":7930497,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1090},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931649,"byte_end":7931660,"line_start":67,"line_end":67,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"fn <T, F> (repeater: F) -> RepeatWith<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by applying the provided closure.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930598,"byte_end":7930700,"line_start":19,"line_end":19,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930701,"byte_end":7930704,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930705,"byte_end":7930719,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930720,"byte_end":7930723,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930724,"byte_end":7930740,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930741,"byte_end":7930744,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930745,"byte_end":7930752,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930753,"byte_end":7930792,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930793,"byte_end":7930798,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930799,"byte_end":7930829,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930830,"byte_end":7930856,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930857,"byte_end":7930860,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let s = stream::repeat_with(|| 1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930861,"byte_end":7930899,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930900,"byte_end":7930903,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930904,"byte_end":7930931,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930932,"byte_end":7930935,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930936,"byte_end":7930976,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930977,"byte_end":7931017,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931018,"byte_end":7931058,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931059,"byte_end":7931099,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931100,"byte_end":7931108,"line_start":39,"line_end":39,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931109,"byte_end":7931116,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931117,"byte_end":7931120,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Going finite:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931121,"byte_end":7931138,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931139,"byte_end":7931142,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931143,"byte_end":7931150,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931151,"byte_end":7931190,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931191,"byte_end":7931196,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931197,"byte_end":7931227,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931228,"byte_end":7931254,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931255,"byte_end":7931258,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let mut n = 1;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931259,"byte_end":7931277,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ let s = stream::repeat_with(|| {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931278,"byte_end":7931314,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/     let item = n;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931315,"byte_end":7931336,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/     n *= 2;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931337,"byte_end":7931352,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     item","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931353,"byte_end":7931365,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/ })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931366,"byte_end":7931372,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/ .take(4);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931373,"byte_end":7931386,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931387,"byte_end":7931390,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ pin_utils::pin_mut!(s);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931391,"byte_end":7931418,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931419,"byte_end":7931422,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(1));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931423,"byte_end":7931463,"line_start":60,"line_end":60,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(2));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931464,"byte_end":7931504,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(4));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931505,"byte_end":7931545,"line_start":62,"line_end":62,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, Some(8));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931546,"byte_end":7931586,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(s.next().await, None);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931587,"byte_end":7931624,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931625,"byte_end":7931633,"line_start":65,"line_end":65,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931634,"byte_end":7931641,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2072},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/next_back.rs","byte_start":8145019,"byte_end":8145033,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"NextBackFuture","qualname":"::stream::double_ended_stream::next_back::NextBackFuture","value":"NextBackFuture {  }","parent":null,"children":[{"krate":0,"index":2075}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/next_back.rs","byte_start":8144968,"byte_end":8145007,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2087},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/nth_back.rs","byte_start":8145544,"byte_end":8145557,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"NthBackFuture","qualname":"::stream::double_ended_stream::nth_back::NthBackFuture","value":"NthBackFuture {  }","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2091}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/nth_back.rs","byte_start":8145493,"byte_end":8145532,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2108},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/rfind.rs","byte_start":8146566,"byte_end":8146577,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"RFindFuture","qualname":"::stream::double_ended_stream::rfind::RFindFuture","value":"RFindFuture {  }","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":2113}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/rfind.rs","byte_start":8146515,"byte_end":8146554,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":7206},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/rfold.rs","byte_start":8147663,"byte_end":8147674,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"RFoldFuture","qualname":"::stream::double_ended_stream::rfold::RFoldFuture","value":"RFoldFuture {  }","parent":null,"children":[{"krate":0,"index":7210},{"krate":0,"index":7211},{"krate":0,"index":7212}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7149},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/try_rfold.rs","byte_start":8148901,"byte_end":8148915,"line_start":12,"line_end":12,"column_start":16,"column_end":30},"name":"TryRFoldFuture","qualname":"::stream::double_ended_stream::try_rfold::TryRFoldFuture","value":"TryRFoldFuture {  }","parent":null,"children":[{"krate":0,"index":7153},{"krate":0,"index":7154},{"krate":0,"index":7155}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2172},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8138485,"byte_end":8138502,"line_start":27,"line_end":27,"column_start":11,"column_end":28},"name":"DoubleEndedStream","qualname":"::stream::double_ended_stream::DoubleEndedStream","value":"DoubleEndedStream: Stream","parent":null,"children":[{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2178},{"krate":0,"index":2181}],"decl_id":null,"docs":" A stream able to yield elements from both ends.","sig":null,"attributes":[{"value":"/ A stream able to yield elements from both ends.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8138106,"byte_end":8138157,"line_start":18,"line_end":18,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8138158,"byte_end":8138161,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Something that implements `DoubleEndedStream` has one extra capability","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8138162,"byte_end":8138236,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ over something that implements [`Stream`]: the ability to also take","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8138237,"byte_end":8138308,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ `Item`s from the back, as well as the front.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8138309,"byte_end":8138357,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8138358,"byte_end":8138361,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8138362,"byte_end":8138395,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8138396,"byte_end":8138424,"line_start":25,"line_end":25,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8140730,"byte_end":8140744,"line_start":92,"line_end":92,"column_start":8,"column_end":22},"name":"poll_next_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::poll_next_back","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>","parent":{"krate":0,"index":2172},"children":[],"decl_id":null,"docs":"\n        Attempts to receive the next item from the back of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8141636,"byte_end":8141645,"line_start":119,"line_end":119,"column_start":8,"column_end":17},"name":"next_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::next_back","value":"fn (&mut self) -> NextBackFuture<'_, Self>","parent":{"krate":0,"index":2172},"children":[],"decl_id":null,"docs":"\n            Advances the stream and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2175},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8142288,"byte_end":8142296,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"nth_back","qualname":"::stream::double_ended_stream::DoubleEndedStream::nth_back","value":"fn (&mut self, n: usize) -> NthBackFuture<'_, Self>","parent":{"krate":0,"index":2172},"children":[],"decl_id":null,"docs":"\n            Returns the nth element from the back of the stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8142982,"byte_end":8142987,"line_start":175,"line_end":175,"column_start":8,"column_end":13},"name":"rfind","qualname":"::stream::double_ended_stream::DoubleEndedStream::rfind","value":"fn <P> (&mut self, p: P) -> RFindFuture<'_, Self, P>","parent":{"krate":0,"index":2172},"children":[],"decl_id":null,"docs":"\n            Returns the the frist element from the right that matches the predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8143621,"byte_end":8143626,"line_start":203,"line_end":203,"column_start":8,"column_end":13},"name":"rfold","qualname":"::stream::double_ended_stream::DoubleEndedStream::rfold","value":"fn <B, F> (self, accum: B, f: F) -> RFoldFuture<Self, F, B>","parent":{"krate":0,"index":2172},"children":[],"decl_id":null,"docs":"\n            # Examples","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2181},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8144623,"byte_end":8144632,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_rfold","qualname":"::stream::double_ended_stream::DoubleEndedStream::try_rfold","value":"fn <B, F, E> (self, accum: B, f: F) -> TryRFoldFuture<Self, F, B>","parent":{"krate":0,"index":2172},"children":[],"decl_id":null,"docs":"\n            A combinator that applies a function as long as it returns successfully, producing a single, final value.\n            Immediately returns the error when the function returns unsuccessfully.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2187},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152485,"byte_end":8152500,"line_start":81,"line_end":81,"column_start":11,"column_end":26},"name":"ExactSizeStream","qualname":"::stream::exact_size_stream::ExactSizeStream","value":"ExactSizeStream: Stream","parent":null,"children":[{"krate":0,"index":2188}],"decl_id":null,"docs":" A stream that knows its exact length.","sig":null,"attributes":[{"value":"/ A stream that knows its exact length.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150090,"byte_end":8150131,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150132,"byte_end":8150135,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Many [`Stream`]s don't know how many times they will iterate, but some do.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150136,"byte_end":8150214,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ If a stream knows how many times it can iterate, providing access to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150215,"byte_end":8150287,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ that information can be useful. For example, if you want to iterate","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150288,"byte_end":8150359,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ backwards, a good start is to know where the end is.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150360,"byte_end":8150416,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150417,"byte_end":8150420,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ When implementing an `ExactSizeStream`, you must also implement","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150421,"byte_end":8150488,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ [`Stream`]. When doing so, the implementation of [`size_hint`] *must*","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150489,"byte_end":8150562,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ return the exact size of the stream.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150563,"byte_end":8150603,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150604,"byte_end":8150607,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150608,"byte_end":8150641,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/ [`size_hint`]: trait.Stream.html#method.size_hint","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150642,"byte_end":8150695,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150696,"byte_end":8150699,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The [`len`] method has a default implementation, so you usually shouldn't","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150700,"byte_end":8150777,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ implement it. However, you may be able to provide a more performant","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150778,"byte_end":8150849,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ implementation than the default, so overriding it in this case makes sense.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150850,"byte_end":8150929,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150930,"byte_end":8150933,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`len`]: #method.len","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150934,"byte_end":8150958,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150959,"byte_end":8150962,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150963,"byte_end":8150977,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150978,"byte_end":8150981,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150982,"byte_end":8150998,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8150999,"byte_end":8151002,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151003,"byte_end":8151010,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ // a finite range knows exactly how many times it will iterate","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151011,"byte_end":8151077,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ let five = 0..5;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151078,"byte_end":8151098,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151099,"byte_end":8151102,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(5, five.len());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151103,"byte_end":8151133,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151134,"byte_end":8151141,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151142,"byte_end":8151145,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ In the [module level docs][moddocs], we implemented an [`Stream`],","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151146,"byte_end":8151216,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ `Counter`. Let's implement `ExactSizeStream` for it as well:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151217,"byte_end":8151281,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151282,"byte_end":8151285,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [moddocs]: index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151286,"byte_end":8151311,"line_start":37,"line_end":37,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151312,"byte_end":8151315,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151316,"byte_end":8151323,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # use std::task::{Context, Poll};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151324,"byte_end":8151361,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151362,"byte_end":8151386,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/ # use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151387,"byte_end":8151419,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/ # struct Counter {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151420,"byte_end":8151442,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/ #     count: usize,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151443,"byte_end":8151466,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151467,"byte_end":8151474,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # impl Counter {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151475,"byte_end":8151495,"line_start":46,"line_end":46,"column_start":1,"column_end":21}},{"value":"/ #     fn new() -> Counter {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151496,"byte_end":8151527,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ #         Counter { count: 0 }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151528,"byte_end":8151562,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/ #     }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151563,"byte_end":8151574,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151575,"byte_end":8151582,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ # impl Stream for Counter {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151583,"byte_end":8151614,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/ #     type Item = usize;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151615,"byte_end":8151643,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ #     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<Self::Item>> {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151644,"byte_end":8151745,"line_start":53,"line_end":53,"column_start":1,"column_end":102}},{"value":"/ #         self.count += 1;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151746,"byte_end":8151776,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ #         if self.count < 6 {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151777,"byte_end":8151810,"line_start":55,"line_end":55,"column_start":1,"column_end":34}},{"value":"/ #             Poll::Ready(Some(self.count))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151811,"byte_end":8151858,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ #         } else {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151859,"byte_end":8151881,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"/ #             Poll::Ready(None)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151882,"byte_end":8151917,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/ #         }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151918,"byte_end":8151933,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/ #     }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151934,"byte_end":8151945,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151946,"byte_end":8151953,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151954,"byte_end":8151993,"line_start":62,"line_end":62,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8151994,"byte_end":8151999,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ impl ExactSizeStream for Counter {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152000,"byte_end":8152038,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/     // We can easily calculate the remaining number of iterations.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152039,"byte_end":8152109,"line_start":65,"line_end":65,"column_start":1,"column_end":71}},{"value":"/     fn len(&self) -> usize {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152110,"byte_end":8152142,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/         5 - self.count","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152143,"byte_end":8152169,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152170,"byte_end":8152179,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152180,"byte_end":8152185,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152186,"byte_end":8152189,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // And now we can use it!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152190,"byte_end":8152219,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152220,"byte_end":8152223,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let counter = Counter::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152224,"byte_end":8152257,"line_start":73,"line_end":73,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152258,"byte_end":8152261,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(5, counter.len());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152262,"byte_end":8152295,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/ # });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152296,"byte_end":8152305,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152306,"byte_end":8152313,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152314,"byte_end":8152352,"line_start":78,"line_end":78,"column_start":1,"column_end":39}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152396,"byte_end":8152424,"line_start":79,"line_end":79,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8153278,"byte_end":8153281,"line_start":105,"line_end":105,"column_start":8,"column_end":11},"name":"len","qualname":"::stream::exact_size_stream::ExactSizeStream::len","value":"fn (&self) -> usize","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" Returns the exact number of times the stream will iterate.","sig":null,"attributes":[{"value":"/ Returns the exact number of times the stream will iterate.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152515,"byte_end":8152577,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152582,"byte_end":8152585,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This method has a default implementation, so you usually should not","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152590,"byte_end":8152661,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ implement it directly. However, if you can provide a more efficient","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152666,"byte_end":8152737,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ implementation, you can do so. See the [trait-level] docs for an","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152742,"byte_end":8152810,"line_start":86,"line_end":86,"column_start":5,"column_end":73}},{"value":"/ example.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152815,"byte_end":8152827,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152832,"byte_end":8152835,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This function has the same safety guarantees as the [`size_hint`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152840,"byte_end":8152909,"line_start":89,"line_end":89,"column_start":5,"column_end":74}},{"value":"/ function.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152914,"byte_end":8152927,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152932,"byte_end":8152935,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [trait-level]: trait.ExactSizeStream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152940,"byte_end":8152985,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"/ [`size_hint`]: trait.Stream.html#method.size_hint","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152990,"byte_end":8153043,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8153048,"byte_end":8153051,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8153056,"byte_end":8153070,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8153075,"byte_end":8153078,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8153083,"byte_end":8153099,"line_start":97,"line_end":97,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8153104,"byte_end":8153107,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8153112,"byte_end":8153119,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ // a finite range knows exactly how many times it will iterate","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8153124,"byte_end":8153190,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/ let five = 0..5;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8153195,"byte_end":8153215,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8153220,"byte_end":8153223,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5, five.len());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8153228,"byte_end":8153258,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8153263,"byte_end":8153270,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2196},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154808,"byte_end":8154814,"line_start":32,"line_end":32,"column_start":11,"column_end":17},"name":"Extend","qualname":"::stream::extend::Extend","value":"Extend<A>","parent":null,"children":[{"krate":0,"index":2198}],"decl_id":null,"docs":" Extends a collection with the contents of a stream.","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8153879,"byte_end":8153934,"line_start":6,"line_end":6,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8153935,"byte_end":8153938,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Streams produce a series of values asynchronously, and collections can also be thought of as a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8153939,"byte_end":8154037,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ series of values. The `Extend` trait bridges this gap, allowing you to extend a collection","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154038,"byte_end":8154132,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ asynchronously by including the contents of that stream. When extending a collection with an","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154133,"byte_end":8154229,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ already existing key, that entry is updated or, in the case of collections that permit multiple","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154230,"byte_end":8154329,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"/ entries with equal keys, that entry is inserted.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154330,"byte_end":8154382,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154383,"byte_end":8154386,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154387,"byte_end":8154402,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154403,"byte_end":8154406,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154407,"byte_end":8154414,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154415,"byte_end":8154454,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154455,"byte_end":8154460,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154461,"byte_end":8154491,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154492,"byte_end":8154518,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154519,"byte_end":8154522,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut v: Vec<usize> = vec![1, 2];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154523,"byte_end":8154562,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/ let s = stream::repeat(3usize).take(3);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154563,"byte_end":8154606,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/ stream::Extend::extend(&mut v, s).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154607,"byte_end":8154651,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154652,"byte_end":8154655,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![1, 2, 3, 3, 3]);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154656,"byte_end":8154695,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154696,"byte_end":8154701,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154702,"byte_end":8154710,"line_start":28,"line_end":28,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154711,"byte_end":8154718,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154719,"byte_end":8154747,"line_start":30,"line_end":30,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154887,"byte_end":8154893,"line_start":34,"line_end":34,"column_start":8,"column_end":14},"name":"extend","qualname":"::stream::extend::Extend::extend","value":"fn <'a, T> (&'a mut self, stream: T) -> Pin<Box<dyn Future<Output = ()> + 'a>>","parent":{"krate":0,"index":2196},"children":[],"decl_id":null,"docs":" Extends a collection with the contents of a stream.\n","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8154824,"byte_end":8154879,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":2201},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155986,"byte_end":8155992,"line_start":68,"line_end":68,"column_start":14,"column_end":20},"name":"extend","qualname":"::stream::extend::extend","value":"fn <'a, C, T, S> (collection: &mut C, stream: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Extends a collection with the contents of a stream.","sig":null,"attributes":[{"value":"/ Extends a collection with the contents of a stream.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155022,"byte_end":8155077,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155078,"byte_end":8155081,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Streams produce a series of values asynchronously, and collections can also be thought of as a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155082,"byte_end":8155180,"line_start":42,"line_end":42,"column_start":1,"column_end":99}},{"value":"/ series of values. The [`Extend`] trait bridges this gap, allowing you to extend a collection","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155181,"byte_end":8155277,"line_start":43,"line_end":43,"column_start":1,"column_end":97}},{"value":"/ asynchronously by including the contents of that stream. When extending a collection with an","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155278,"byte_end":8155374,"line_start":44,"line_end":44,"column_start":1,"column_end":97}},{"value":"/ already existing key, that entry is updated or, in the case of collections that permit multiple","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155375,"byte_end":8155474,"line_start":45,"line_end":45,"column_start":1,"column_end":100}},{"value":"/ entries with equal keys, that entry is inserted.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155475,"byte_end":8155527,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155528,"byte_end":8155531,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Extend`]: trait.Extend.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155532,"byte_end":8155565,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155566,"byte_end":8155569,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155570,"byte_end":8155585,"line_start":50,"line_end":50,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155586,"byte_end":8155589,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155590,"byte_end":8155597,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155598,"byte_end":8155637,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155638,"byte_end":8155643,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155644,"byte_end":8155674,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155675,"byte_end":8155701,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155702,"byte_end":8155705,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let mut v: Vec<usize> = vec![1, 2];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155706,"byte_end":8155745,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"/ let s = stream::repeat(3usize).take(3);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155746,"byte_end":8155789,"line_start":59,"line_end":59,"column_start":1,"column_end":44}},{"value":"/ stream::extend(&mut v, s).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155790,"byte_end":8155826,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155827,"byte_end":8155830,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![1, 2, 3, 3, 3]);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155831,"byte_end":8155870,"line_start":62,"line_end":62,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155871,"byte_end":8155876,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155877,"byte_end":8155885,"line_start":64,"line_end":64,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155886,"byte_end":8155893,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/extend.rs","byte_start":8155894,"byte_end":8155922,"line_start":66,"line_end":66,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":2212},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159055,"byte_end":8159065,"line_start":115,"line_end":115,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::from_stream::FromStream","value":"FromStream<T>","parent":null,"children":[{"krate":0,"index":2214}],"decl_id":null,"docs":" Conversion from a `Stream`.","sig":null,"attributes":[{"value":"/ Conversion from a `Stream`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156224,"byte_end":8156255,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156256,"byte_end":8156259,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ By implementing `FromStream` for a type, you define how it will be created from a stream.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156260,"byte_end":8156353,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ This is common for types which describe a collection of some kind.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156354,"byte_end":8156424,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156425,"byte_end":8156428,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See also: [`IntoStream`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156429,"byte_end":8156458,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156459,"byte_end":8156462,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156463,"byte_end":8156477,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156478,"byte_end":8156481,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156482,"byte_end":8156498,"line_start":15,"line_end":15,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156499,"byte_end":8156502,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156503,"byte_end":8156510,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156511,"byte_end":8156585,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156586,"byte_end":8156591,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156592,"byte_end":8156622,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream::{self, FromStream};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156623,"byte_end":8156669,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156670,"byte_end":8156673,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156674,"byte_end":8156721,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156722,"byte_end":8156725,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let v = Vec::from_stream(five_fives).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156726,"byte_end":8156773,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156774,"byte_end":8156777,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156778,"byte_end":8156817,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156818,"byte_end":8156823,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156824,"byte_end":8156841,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156842,"byte_end":8156849,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156850,"byte_end":8156853,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Using `collect` to  implicitly use `FromStream`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156854,"byte_end":8156905,"line_start":32,"line_end":32,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156906,"byte_end":8156909,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156910,"byte_end":8156917,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156918,"byte_end":8156992,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156993,"byte_end":8156998,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8156999,"byte_end":8157029,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157030,"byte_end":8157056,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157057,"byte_end":8157104,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157105,"byte_end":8157108,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let v: Vec<i32> = five_fives.collect().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157109,"byte_end":8157158,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157159,"byte_end":8157162,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157163,"byte_end":8157202,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157203,"byte_end":8157208,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157209,"byte_end":8157226,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157227,"byte_end":8157234,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157235,"byte_end":8157238,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Implementing `FromStream` for your type:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157239,"byte_end":8157283,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157284,"byte_end":8157287,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157288,"byte_end":8157295,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157296,"byte_end":8157326,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream::{self, FromStream, IntoStream};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157327,"byte_end":8157385,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157386,"byte_end":8157408,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157409,"byte_end":8157412,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ // A sample collection, that's just a wrapper over Vec<T>","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157413,"byte_end":8157474,"line_start":55,"line_end":55,"column_start":1,"column_end":62}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157475,"byte_end":8157495,"line_start":56,"line_end":56,"column_start":1,"column_end":21}},{"value":"/ struct MyCollection(Vec<i32>);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157496,"byte_end":8157530,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157531,"byte_end":8157534,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Let's give it some methods so we can create one and add things","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157535,"byte_end":8157604,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/ // to it.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157605,"byte_end":8157618,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/ impl MyCollection {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157619,"byte_end":8157642,"line_start":61,"line_end":61,"column_start":1,"column_end":24}},{"value":"/     fn new() -> MyCollection {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157643,"byte_end":8157677,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/         MyCollection(Vec::new())","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157678,"byte_end":8157714,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157715,"byte_end":8157724,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157725,"byte_end":8157728,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     fn add(&mut self, elem: i32) {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157729,"byte_end":8157767,"line_start":66,"line_end":66,"column_start":1,"column_end":39}},{"value":"/         self.0.push(elem);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157768,"byte_end":8157798,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157799,"byte_end":8157808,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157809,"byte_end":8157814,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157815,"byte_end":8157818,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // and we'll implement FromIterator","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157819,"byte_end":8157858,"line_start":71,"line_end":71,"column_start":1,"column_end":40}},{"value":"/ impl FromStream<i32> for MyCollection {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157859,"byte_end":8157902,"line_start":72,"line_end":72,"column_start":1,"column_end":44}},{"value":"/     fn from_stream<'a, S: IntoStream<Item = i32> + 'a>(","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157903,"byte_end":8157962,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/         stream: S,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157963,"byte_end":8157985,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/     ) -> Pin<Box<dyn Future<Output = Self> + 'a>> {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8157986,"byte_end":8158041,"line_start":75,"line_end":75,"column_start":1,"column_end":56}},{"value":"/         let stream = stream.into_stream();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158042,"byte_end":8158088,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158089,"byte_end":8158092,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         Box::pin(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158093,"byte_end":8158126,"line_start":78,"line_end":78,"column_start":1,"column_end":34}},{"value":"/             let mut c = MyCollection::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158127,"byte_end":8158175,"line_start":79,"line_end":79,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158176,"byte_end":8158179,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/             let mut v = vec![];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158180,"byte_end":8158215,"line_start":81,"line_end":81,"column_start":1,"column_end":36}},{"value":"/             stream::extend(&mut v, stream).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158216,"byte_end":8158269,"line_start":82,"line_end":82,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158270,"byte_end":8158273,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/             for i in v {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158274,"byte_end":8158302,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/                 c.add(i);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158303,"byte_end":8158332,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/             }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158333,"byte_end":8158350,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/             c","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158351,"byte_end":8158368,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/         })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158369,"byte_end":8158383,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158384,"byte_end":8158393,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158394,"byte_end":8158399,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158400,"byte_end":8158403,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158404,"byte_end":8158478,"line_start":92,"line_end":92,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158479,"byte_end":8158484,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ // Now we can make a new stream...","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158485,"byte_end":8158523,"line_start":94,"line_end":94,"column_start":1,"column_end":39}},{"value":"/ let stream = stream::repeat(5).take(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158524,"byte_end":8158567,"line_start":95,"line_end":95,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158568,"byte_end":8158571,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ // ...and make a MyCollection out of it","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158572,"byte_end":8158615,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ let c = MyCollection::from_stream(stream).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158616,"byte_end":8158668,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158669,"byte_end":8158672,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c.0, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158673,"byte_end":8158714,"line_start":100,"line_end":100,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158715,"byte_end":8158718,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ // collect works too!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158719,"byte_end":8158744,"line_start":102,"line_end":102,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158745,"byte_end":8158748,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(5).take(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158749,"byte_end":8158792,"line_start":104,"line_end":104,"column_start":1,"column_end":44}},{"value":"/ let c: MyCollection = stream.collect().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158793,"byte_end":8158842,"line_start":105,"line_end":105,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158843,"byte_end":8158846,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(c.0, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158847,"byte_end":8158888,"line_start":107,"line_end":107,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158889,"byte_end":8158894,"line_start":108,"line_end":108,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158895,"byte_end":8158912,"line_start":109,"line_end":109,"column_start":1,"column_end":18}},{"value":"/```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158913,"byte_end":8158919,"line_start":110,"line_end":110,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158920,"byte_end":8158923,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`IntoStream`]: trait.IntoStream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158924,"byte_end":8158965,"line_start":112,"line_end":112,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8158966,"byte_end":8158994,"line_start":113,"line_end":113,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159584,"byte_end":8159595,"line_start":136,"line_end":136,"column_start":8,"column_end":19},"name":"from_stream","qualname":"::stream::from_stream::FromStream::from_stream","value":"fn <'a, S> (stream: S) -> Pin<Box<dyn Future<Output = Self> + 'a>>","parent":{"krate":0,"index":2212},"children":[],"decl_id":null,"docs":" Creates a value from a stream.","sig":null,"attributes":[{"value":"/ Creates a value from a stream.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159075,"byte_end":8159109,"line_start":116,"line_end":116,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159114,"byte_end":8159117,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159122,"byte_end":8159136,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159141,"byte_end":8159144,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159149,"byte_end":8159165,"line_start":120,"line_end":120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159170,"byte_end":8159173,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159178,"byte_end":8159185,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159190,"byte_end":8159264,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159269,"byte_end":8159274,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159279,"byte_end":8159309,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ use async_std::stream::{self, FromStream};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159314,"byte_end":8159360,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159365,"byte_end":8159368,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let five_fives = stream::repeat(5).take(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159373,"byte_end":8159420,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159425,"byte_end":8159428,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let v = Vec::from_stream(five_fives).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159433,"byte_end":8159480,"line_start":130,"line_end":130,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159485,"byte_end":8159488,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, vec![5, 5, 5, 5, 5]);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159493,"byte_end":8159532,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159537,"byte_end":8159542,"line_start":133,"line_end":133,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159547,"byte_end":8159564,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_stream.rs","byte_start":8159569,"byte_end":8159576,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2219},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8160577,"byte_end":8160588,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"name":"FusedStream","qualname":"::stream::fused_stream::FusedStream","value":"FusedStream: Stream","parent":null,"children":[],"decl_id":null,"docs":" A stream that always continues to yield `None` when exhausted.","sig":null,"attributes":[{"value":"/ A stream that always continues to yield `None` when exhausted.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8159732,"byte_end":8159798,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8159799,"byte_end":8159802,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Calling next on a fused stream that has returned `None` once is guaranteed","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8159803,"byte_end":8159881,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ to return [`None`] again. This trait should be implemented by all streams","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8159882,"byte_end":8159959,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ that behave this way because it allows optimizing [`Stream::fuse`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8159960,"byte_end":8160031,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8160032,"byte_end":8160035,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Note: In general, you should not use `FusedStream` in generic bounds if","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8160036,"byte_end":8160111,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ you need a fused stream. Instead, you should just call [`Stream::fuse`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8160112,"byte_end":8160187,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ on the stream. If the stream is already fused, the additional [`Fuse`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8160188,"byte_end":8160262,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ wrapper will be a no-op with no performance penalty.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8160263,"byte_end":8160319,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8160320,"byte_end":8160323,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8160324,"byte_end":8160404,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ [`Stream::fuse`]: trait.Stream.html#method.fuse","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8160405,"byte_end":8160456,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ [`Fuse`]: struct.Fuse.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8160457,"byte_end":8160487,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8160488,"byte_end":8160516,"line_start":17,"line_end":17,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":2233},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161987,"byte_end":8161995,"line_start":46,"line_end":46,"column_start":8,"column_end":16},"name":"interval","qualname":"::stream::interval::interval","value":"fn (dur: Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that yields at a set interval.","sig":null,"attributes":[{"value":"/ Creates a new stream that yields at a set interval.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8160836,"byte_end":8160891,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8160892,"byte_end":8160895,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The stream first yields after `dur`, and continues to yield every","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8160896,"byte_end":8160965,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ `dur` after that. The stream accounts for time elapsed between calls, and","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8160966,"byte_end":8161043,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ will adjust accordingly to prevent time skews.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161044,"byte_end":8161094,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161095,"byte_end":8161098,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Each interval may be slightly longer than the specified duration, but never","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161099,"byte_end":8161178,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ less.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161179,"byte_end":8161188,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161189,"byte_end":8161192,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Note that intervals are not intended for high resolution timers, but rather","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161193,"byte_end":8161272,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ they will likely fire some granularity after the exact instant that they're","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161273,"byte_end":8161352,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ otherwise indicated to fire at.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161353,"byte_end":8161388,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161389,"byte_end":8161392,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See also: [`task::sleep`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161393,"byte_end":8161423,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161424,"byte_end":8161427,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`task::sleep`]: ../task/fn.sleep.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161428,"byte_end":8161470,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161471,"byte_end":8161474,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161475,"byte_end":8161489,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161490,"byte_end":8161493,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Basic example:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161494,"byte_end":8161512,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161513,"byte_end":8161516,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161517,"byte_end":8161530,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161531,"byte_end":8161561,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161562,"byte_end":8161588,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161589,"byte_end":8161617,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161618,"byte_end":8161621,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161622,"byte_end":8161696,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161697,"byte_end":8161702,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ let mut interval = stream::interval(Duration::from_secs(4));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161703,"byte_end":8161767,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/ while let Some(_) = interval.next().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161768,"byte_end":8161815,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/     println!(\"prints every four seconds\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161816,"byte_end":8161862,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161863,"byte_end":8161868,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161869,"byte_end":8161874,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161875,"byte_end":8161892,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161893,"byte_end":8161900,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8161901,"byte_end":8161929,"line_start":44,"line_end":44,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2337},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8162406,"byte_end":8162414,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"Interval","qualname":"::stream::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":2338},{"krate":0,"index":2339}],"decl_id":null,"docs":" A stream representing notifications at fixed interval","sig":null,"attributes":[{"value":"/ A stream representing notifications at fixed interval","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8162105,"byte_end":8162162,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8162163,"byte_end":8162166,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`interval`] function. See its","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8162167,"byte_end":8162231,"line_start":55,"line_end":55,"column_start":1,"column_end":65}},{"value":"/ documentation for more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8162232,"byte_end":8162259,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8162260,"byte_end":8162263,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: fn.interval.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8162264,"byte_end":8162298,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8162299,"byte_end":8162327,"line_start":59,"line_end":59,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":2239},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163400,"byte_end":8163410,"line_start":18,"line_end":18,"column_start":11,"column_end":21},"name":"IntoStream","qualname":"::stream::into_stream::IntoStream","value":"IntoStream","parent":null,"children":[{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242}],"decl_id":null,"docs":" Conversion into a `Stream`.","sig":null,"attributes":[{"value":"/ Conversion into a `Stream`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8162890,"byte_end":8162921,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8162922,"byte_end":8162925,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ By implementing `IntoIterator` for a type, you define how it will be","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8162926,"byte_end":8162998,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ converted to an iterator. This is common for types which describe a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8162999,"byte_end":8163070,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ collection of some kind.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163071,"byte_end":8163099,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163100,"byte_end":8163103,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`from_stream`]: #tymethod.from_stream","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163104,"byte_end":8163146,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/ [`Stream`]: trait.Stream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163147,"byte_end":8163180,"line_start":10,"line_end":10,"column_start":1,"column_end":34}},{"value":"/ [`collect`]: trait.Stream.html#method.collect","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163181,"byte_end":8163230,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163231,"byte_end":8163234,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ See also: [`FromStream`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163235,"byte_end":8163264,"line_start":13,"line_end":13,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163265,"byte_end":8163268,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163269,"byte_end":8163310,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163311,"byte_end":8163339,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":2240},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163476,"byte_end":8163480,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"name":"Item","qualname":"::stream::into_stream::IntoStream::Item","value":"type Item;","parent":{"krate":0,"index":2239},"children":[],"decl_id":null,"docs":" The type of the elements being iterated over.\n","sig":null,"attributes":[{"value":"/ The type of the elements being iterated over.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163417,"byte_end":8163466,"line_start":19,"line_end":19,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":2241},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163547,"byte_end":8163557,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"name":"IntoStream","qualname":"::stream::into_stream::IntoStream::IntoStream","value":"type IntoStream: Stream<Item = Self::Item>;","parent":{"krate":0,"index":2239},"children":[],"decl_id":null,"docs":" Which kind of stream are we turning this into?\n","sig":null,"attributes":[{"value":"/ Which kind of stream are we turning this into?","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163487,"byte_end":8163537,"line_start":22,"line_end":22,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163633,"byte_end":8163644,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::into_stream::IntoStream::into_stream","value":"fn (self) -> Self::IntoStream","parent":{"krate":0,"index":2239},"children":[],"decl_id":null,"docs":" Creates a stream from a value.\n","sig":null,"attributes":[{"value":"/ Creates a stream from a value.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163591,"byte_end":8163625,"line_start":25,"line_end":25,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2342},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164197,"byte_end":8164204,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":2344}],"decl_id":null,"docs":" A stream that never returns any items.","sig":null,"attributes":[{"value":"/ A stream that never returns any items.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8163993,"byte_end":8164035,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164036,"byte_end":8164039,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This stream is created by the [`pending`] function. See its","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164040,"byte_end":8164103,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164104,"byte_end":8164131,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164132,"byte_end":8164135,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`pending`]: fn.pending.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164136,"byte_end":8164168,"line_start":12,"line_end":12,"column_start":1,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":2259},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164766,"byte_end":8164773,"line_start":42,"line_end":42,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that never returns any items.","sig":null,"attributes":[{"value":"/ Creates a stream that never returns any items.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164242,"byte_end":8164292,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164293,"byte_end":8164296,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164297,"byte_end":8164362,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164363,"byte_end":8164377,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164378,"byte_end":8164381,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164382,"byte_end":8164389,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164390,"byte_end":8164429,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164430,"byte_end":8164435,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164436,"byte_end":8164464,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164465,"byte_end":8164468,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164469,"byte_end":8164499,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164500,"byte_end":8164526,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164527,"byte_end":8164530,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let dur = Duration::from_millis(100);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164531,"byte_end":8164572,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ let mut s = stream::pending::<()>().timeout(dur);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164573,"byte_end":8164626,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164627,"byte_end":8164630,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let item = s.next().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164631,"byte_end":8164661,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164662,"byte_end":8164665,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ assert!(item.is_some());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164666,"byte_end":8164694,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ assert!(item.unwrap().is_err());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164695,"byte_end":8164731,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164732,"byte_end":8164735,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164736,"byte_end":8164741,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164742,"byte_end":8164750,"line_start":40,"line_end":40,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164751,"byte_end":8164758,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2277},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8165995,"byte_end":8166002,"line_start":18,"line_end":18,"column_start":11,"column_end":18},"name":"Product","qualname":"::stream::product::Product","value":"Product<A = Self>: Sized","parent":null,"children":[{"krate":0,"index":2279}],"decl_id":null,"docs":" Trait to represent types that can be created by multiplying the elements of a stream.","sig":null,"attributes":[{"value":"/ Trait to represent types that can be created by multiplying the elements of a stream.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8165375,"byte_end":8165464,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8165465,"byte_end":8165468,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is used to implement the [`product`] method on streams. Types which","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8165469,"byte_end":8165551,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ implement the trait can be generated by the [`product`] method. Like","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8165552,"byte_end":8165624,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ [`FromStream`] this trait should rarely be called directly and instead","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8165625,"byte_end":8165699,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ interacted with through [`Stream::product`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8165700,"byte_end":8165748,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8165749,"byte_end":8165752,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`product`]: trait.Product.html#tymethod.product","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8165753,"byte_end":8165805,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8165806,"byte_end":8165847,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ [`Stream::product`]: trait.Stream.html#method.product","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8165848,"byte_end":8165905,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8165906,"byte_end":8165934,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2279},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8166138,"byte_end":8166145,"line_start":21,"line_end":21,"column_start":8,"column_end":15},"name":"product","qualname":"::stream::product::Product::product","value":"fn <'a, S> (stream: S) -> Pin<Box<dyn Future<Output = Self> + 'a>>","parent":{"krate":0,"index":2277},"children":[],"decl_id":null,"docs":" Method which takes a stream and generates `Self` from the elements by\n multiplying the items.\n","sig":null,"attributes":[{"value":"/ Method which takes a stream and generates `Self` from the elements by","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8166026,"byte_end":8166099,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ multiplying the items.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8166104,"byte_end":8166130,"line_start":20,"line_end":20,"column_start":5,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":2295},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168744,"byte_end":8168754,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"successors","qualname":"::stream::successors::successors","value":"fn <F, T> (first: Option<T>, succ: F) -> Successors<F, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream where to produce each new element a closure is called with the previous\n value.","sig":null,"attributes":[{"value":"/ Creates a new stream where to produce each new element a closure is called with the previous","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168130,"byte_end":8168226,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ value.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168227,"byte_end":8168237,"line_start":10,"line_end":10,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168238,"byte_end":8168241,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168242,"byte_end":8168256,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168257,"byte_end":8168260,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168261,"byte_end":8168268,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168269,"byte_end":8168320,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168321,"byte_end":8168326,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168327,"byte_end":8168357,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/ use async_std::stream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168358,"byte_end":8168384,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168385,"byte_end":8168388,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let mut s = stream::successors(Some(22), |&val| Some(val + 1));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168389,"byte_end":8168456,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168457,"byte_end":8168460,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(s.next().await, Some(22));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168461,"byte_end":8168502,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(23));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168503,"byte_end":8168544,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(24));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168545,"byte_end":8168586,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(s.next().await, Some(25));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168587,"byte_end":8168628,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168629,"byte_end":8168632,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168633,"byte_end":8168638,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168639,"byte_end":8168649,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168650,"byte_end":8168657,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8168658,"byte_end":8168686,"line_start":30,"line_end":30,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7128},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8169258,"byte_end":8169268,"line_start":49,"line_end":49,"column_start":16,"column_end":26},"name":"Successors","qualname":"::stream::successors::Successors","value":"Successors {  }","parent":null,"children":[{"krate":0,"index":7131},{"krate":0,"index":7132}],"decl_id":null,"docs":" A stream that yields elements by calling an async closure with the previous value as an\n argument","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8662346,"byte_end":8662355,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2307},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170590,"byte_end":8170593,"line_start":18,"line_end":18,"column_start":11,"column_end":14},"name":"Sum","qualname":"::stream::sum::Sum","value":"Sum<A = Self>: Sized","parent":null,"children":[{"krate":0,"index":2309}],"decl_id":null,"docs":" Trait to represent types that can be created by summing up a stream.","sig":null,"attributes":[{"value":"/ Trait to represent types that can be created by summing up a stream.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170019,"byte_end":8170091,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170092,"byte_end":8170095,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is used to implement the [`sum`] method on streams. Types which","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170096,"byte_end":8170174,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ implement the trait can be generated by the [`sum`] method. Like","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170175,"byte_end":8170243,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ [`FromStream`] this trait should rarely be called directly and instead","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170244,"byte_end":8170318,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ interacted with through [`Stream::sum`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170319,"byte_end":8170363,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170364,"byte_end":8170367,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`sum`]: trait.Sum.html#tymethod.sum","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170368,"byte_end":8170408,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ [`FromStream`]: trait.FromStream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170409,"byte_end":8170450,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ [`Stream::sum`]: trait.Stream.html#method.sum","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170451,"byte_end":8170500,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170501,"byte_end":8170529,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170730,"byte_end":8170733,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"sum","qualname":"::stream::sum::Sum::sum","value":"fn <'a, S> (stream: S) -> Pin<Box<dyn Future<Output = Self> + 'a>>","parent":{"krate":0,"index":2307},"children":[],"decl_id":null,"docs":" Method which takes a stream and generates `Self` from the elements by\n \"summing up\" the items.\n","sig":null,"attributes":[{"value":"/ Method which takes a stream and generates `Self` from the elements by","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170617,"byte_end":8170690,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ \"summing up\" the items.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170695,"byte_end":8170722,"line_start":20,"line_end":20,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":2928},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":2929},{"krate":0,"index":3207},{"krate":0,"index":3214},{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3222},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3227},{"krate":0,"index":3228},{"krate":0,"index":3231},{"krate":0,"index":3232},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3245},{"krate":0,"index":3339},{"krate":0,"index":3533},{"krate":0,"index":3555},{"krate":0,"index":3657},{"krate":0,"index":3675},{"krate":0,"index":3722},{"krate":0,"index":3760},{"krate":0,"index":3785},{"krate":0,"index":3831},{"krate":0,"index":3852},{"krate":0,"index":3868},{"krate":0,"index":4010},{"krate":0,"index":4013},{"krate":0,"index":4016},{"krate":0,"index":4019},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4045},{"krate":0,"index":4064},{"krate":0,"index":4089},{"krate":0,"index":4101}],"decl_id":null,"docs":" Traits, helpers, and type definitions for core I/O functionality.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":16048,"byte_end":16071,"line_start":208,"line_end":208,"column_start":13,"column_end":36}},{"value":"! Traits, helpers, and type definitions for core I/O functionality.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8172561,"byte_end":8172630,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8172631,"byte_end":8172634,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The `async_std::io` module contains a number of common things you'll need","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8172635,"byte_end":8172712,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! when doing input and output. The most core part of this module is","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8172713,"byte_end":8172782,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"! the [`Read`] and [`Write`] traits, which provide the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8172783,"byte_end":8172839,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"! most general interface for reading and writing input and output.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8172840,"byte_end":8172908,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8172909,"byte_end":8172912,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::io`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8172913,"byte_end":8172964,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8172965,"byte_end":8172968,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! [`std::io`]: https://doc.rust-lang.org/std/io/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8172969,"byte_end":8173029,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173030,"byte_end":8173033,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! # Read and Write","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173034,"byte_end":8173054,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173055,"byte_end":8173058,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! Because they are traits, [`Read`] and [`Write`] are implemented by a number","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173059,"byte_end":8173138,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"! of other types, and you can implement them for your types too. As such,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173139,"byte_end":8173214,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"! you'll see a few different types of I/O throughout the documentation in","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173215,"byte_end":8173290,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"! this module: [`File`]s, [`TcpStream`]s, and sometimes even [`Vec<T>`]s. For","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173291,"byte_end":8173370,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"! example, [`Read`] adds a [`read`][`Read::read`] method, which we can use on","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173371,"byte_end":8173450,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"! [`File`]s:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173451,"byte_end":8173465,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173466,"byte_end":8173469,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173470,"byte_end":8173483,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"! use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173484,"byte_end":8173512,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173513,"byte_end":8173543,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173544,"byte_end":8173547,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173548,"byte_end":8173622,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173623,"byte_end":8173628,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"! let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173629,"byte_end":8173674,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"! let mut buffer = [0; 10];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173675,"byte_end":8173704,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173705,"byte_end":8173708,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! // read up to 10 bytes","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173709,"byte_end":8173735,"line_start":30,"line_end":30,"column_start":1,"column_end":27}},{"value":"! let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173736,"byte_end":8173775,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173776,"byte_end":8173779,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173780,"byte_end":8173826,"line_start":33,"line_end":33,"column_start":1,"column_end":47}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173827,"byte_end":8173832,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173833,"byte_end":8173850,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173851,"byte_end":8173858,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173859,"byte_end":8173862,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! [`Read`] and [`Write`] are so important, implementors of the two traits have a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173863,"byte_end":8173945,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"! nickname: readers and writers. So you'll sometimes see 'a reader' instead","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8173946,"byte_end":8174023,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"! of 'a type that implements the [`Read`] trait'. Much easier!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174024,"byte_end":8174088,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174089,"byte_end":8174092,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! ## Seek and BufRead","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174093,"byte_end":8174116,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174117,"byte_end":8174120,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! Beyond that, there are two important traits that are provided: [`Seek`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174121,"byte_end":8174196,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"! and [`BufRead`]. Both of these build on top of a reader to control","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174197,"byte_end":8174267,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"! how the reading happens. [`Seek`] lets you control where the next byte is","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174268,"byte_end":8174345,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"! coming from:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174346,"byte_end":8174362,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174363,"byte_end":8174366,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174367,"byte_end":8174380,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"! use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174381,"byte_end":8174409,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"! use async_std::io::SeekFrom;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174410,"byte_end":8174442,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174443,"byte_end":8174473,"line_start":52,"line_end":52,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174474,"byte_end":8174477,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174478,"byte_end":8174552,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174553,"byte_end":8174558,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"! let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174559,"byte_end":8174604,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"! let mut buffer = [0; 10];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174605,"byte_end":8174634,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174635,"byte_end":8174638,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! // skip to the last 10 bytes of the file","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174639,"byte_end":8174683,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"! f.seek(SeekFrom::End(-10)).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174684,"byte_end":8174722,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174723,"byte_end":8174726,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! // read up to 10 bytes","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174727,"byte_end":8174753,"line_start":62,"line_end":62,"column_start":1,"column_end":27}},{"value":"! let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174754,"byte_end":8174793,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174794,"byte_end":8174797,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174798,"byte_end":8174844,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174845,"byte_end":8174850,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174851,"byte_end":8174868,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174869,"byte_end":8174876,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174877,"byte_end":8174880,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [`BufRead`] uses an internal buffer to provide a number of other ways to read, but","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174881,"byte_end":8174967,"line_start":70,"line_end":70,"column_start":1,"column_end":87}},{"value":"! to show it off, we'll need to talk about buffers in general. Keep reading!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8174968,"byte_end":8175046,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175047,"byte_end":8175050,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ## BufReader and BufWriter","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175051,"byte_end":8175081,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175082,"byte_end":8175085,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175086,"byte_end":8175167,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"! making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175168,"byte_end":8175242,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"! `std::io` comes with two structs, [`BufReader`] and [`BufWriter`], which wrap","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175243,"byte_end":8175324,"line_start":77,"line_end":77,"column_start":1,"column_end":82}},{"value":"! readers and writers. The wrapper uses a buffer, reducing the number of","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175325,"byte_end":8175399,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"! calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175400,"byte_end":8175474,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175475,"byte_end":8175478,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! For example, [`BufReader`] works with the [`BufRead`] trait to add extra","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175479,"byte_end":8175555,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"! methods to any reader:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175556,"byte_end":8175582,"line_start":82,"line_end":82,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175583,"byte_end":8175586,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175587,"byte_end":8175600,"line_start":84,"line_end":84,"column_start":1,"column_end":14}},{"value":"! use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175601,"byte_end":8175629,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"! use async_std::io::BufReader;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175630,"byte_end":8175663,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175664,"byte_end":8175694,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175695,"byte_end":8175698,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175699,"byte_end":8175773,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175774,"byte_end":8175779,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"! let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175780,"byte_end":8175821,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"! let mut reader = BufReader::new(f);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175822,"byte_end":8175861,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"! let mut buffer = String::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175862,"byte_end":8175897,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175898,"byte_end":8175901,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! // read a line into buffer","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175902,"byte_end":8175932,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"! reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175933,"byte_end":8175974,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175975,"byte_end":8175978,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! println!(\"{}\", buffer);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8175979,"byte_end":8176006,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176007,"byte_end":8176012,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176013,"byte_end":8176030,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176031,"byte_end":8176038,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176039,"byte_end":8176042,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176043,"byte_end":8176124,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"! to [`write`][`Write::write`]:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176125,"byte_end":8176158,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176159,"byte_end":8176162,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176163,"byte_end":8176176,"line_start":106,"line_end":106,"column_start":1,"column_end":14}},{"value":"! use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176177,"byte_end":8176205,"line_start":107,"line_end":107,"column_start":1,"column_end":29}},{"value":"! use async_std::io::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176206,"byte_end":8176240,"line_start":108,"line_end":108,"column_start":1,"column_end":35}},{"value":"! use async_std::io::BufWriter;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176241,"byte_end":8176274,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176275,"byte_end":8176278,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176279,"byte_end":8176353,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176354,"byte_end":8176359,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"! let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176360,"byte_end":8176403,"line_start":113,"line_end":113,"column_start":1,"column_end":44}},{"value":"! {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176404,"byte_end":8176409,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"!     let mut writer = BufWriter::new(f);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176410,"byte_end":8176453,"line_start":115,"line_end":115,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176454,"byte_end":8176457,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"!     // write a byte to the buffer","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176458,"byte_end":8176495,"line_start":117,"line_end":117,"column_start":1,"column_end":38}},{"value":"!     writer.write(&[42]).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176496,"byte_end":8176531,"line_start":118,"line_end":118,"column_start":1,"column_end":36}},{"value":"! } // the buffer is flushed once writer goes out of scope","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176532,"byte_end":8176592,"line_start":119,"line_end":119,"column_start":1,"column_end":61}},{"value":"! //","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176593,"byte_end":8176599,"line_start":120,"line_end":120,"column_start":1,"column_end":7}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176600,"byte_end":8176605,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176606,"byte_end":8176623,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176624,"byte_end":8176631,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176632,"byte_end":8176635,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! ## Standard input and output","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176636,"byte_end":8176668,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176669,"byte_end":8176672,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! A very common source of input is standard input:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176673,"byte_end":8176725,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176726,"byte_end":8176729,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176730,"byte_end":8176743,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"! use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176744,"byte_end":8176766,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176767,"byte_end":8176770,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176771,"byte_end":8176845,"line_start":132,"line_end":132,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176846,"byte_end":8176851,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"! let mut input = String::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176852,"byte_end":8176886,"line_start":134,"line_end":134,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176887,"byte_end":8176890,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! io::stdin().read_line(&mut input).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176891,"byte_end":8176936,"line_start":136,"line_end":136,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176937,"byte_end":8176940,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! println!(\"You typed: {}\", input.trim());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176941,"byte_end":8176985,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176986,"byte_end":8176991,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8176992,"byte_end":8177009,"line_start":140,"line_end":140,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177010,"byte_end":8177017,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177018,"byte_end":8177021,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! Note that you cannot use the [`?` operator] in functions that do not return","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177022,"byte_end":8177101,"line_start":143,"line_end":143,"column_start":1,"column_end":80}},{"value":"! a [`Result<T, E>`][`Result`]. Instead, you can call [`.unwrap()`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177102,"byte_end":8177171,"line_start":144,"line_end":144,"column_start":1,"column_end":70}},{"value":"! or `match` on the return value to catch any possible errors:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177172,"byte_end":8177236,"line_start":145,"line_end":145,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177237,"byte_end":8177240,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177241,"byte_end":8177254,"line_start":147,"line_end":147,"column_start":1,"column_end":14}},{"value":"! use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177255,"byte_end":8177277,"line_start":148,"line_end":148,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177278,"byte_end":8177281,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177282,"byte_end":8177356,"line_start":150,"line_end":150,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177357,"byte_end":8177362,"line_start":151,"line_end":151,"column_start":1,"column_end":6}},{"value":"! let mut input = String::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177363,"byte_end":8177397,"line_start":152,"line_end":152,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177398,"byte_end":8177401,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! io::stdin().read_line(&mut input).await.unwrap();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177402,"byte_end":8177455,"line_start":154,"line_end":154,"column_start":1,"column_end":54}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177456,"byte_end":8177461,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177462,"byte_end":8177479,"line_start":156,"line_end":156,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177480,"byte_end":8177487,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177488,"byte_end":8177491,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! And a very common source of output is standard output:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177492,"byte_end":8177550,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177551,"byte_end":8177554,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177555,"byte_end":8177568,"line_start":161,"line_end":161,"column_start":1,"column_end":14}},{"value":"! use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177569,"byte_end":8177591,"line_start":162,"line_end":162,"column_start":1,"column_end":23}},{"value":"! use async_std::io::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177592,"byte_end":8177626,"line_start":163,"line_end":163,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177627,"byte_end":8177630,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177631,"byte_end":8177705,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177706,"byte_end":8177711,"line_start":166,"line_end":166,"column_start":1,"column_end":6}},{"value":"! io::stdout().write(&[42]).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177712,"byte_end":8177749,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177750,"byte_end":8177755,"line_start":168,"line_end":168,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177756,"byte_end":8177773,"line_start":169,"line_end":169,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177774,"byte_end":8177781,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177782,"byte_end":8177785,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! Of course, using [`io::stdout`] directly is less common than something like","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177786,"byte_end":8177865,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"! [`println!`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177866,"byte_end":8177883,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177884,"byte_end":8177887,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! ## Iterator types","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177888,"byte_end":8177909,"line_start":175,"line_end":175,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177910,"byte_end":8177913,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"! A large number of the structures provided by `std::io` are for various","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177914,"byte_end":8177988,"line_start":177,"line_end":177,"column_start":1,"column_end":75}},{"value":"! ways of iterating over I/O. For example, [`Lines`] is used to split over","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8177989,"byte_end":8178065,"line_start":178,"line_end":178,"column_start":1,"column_end":77}},{"value":"! lines:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178066,"byte_end":8178076,"line_start":179,"line_end":179,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178077,"byte_end":8178080,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178081,"byte_end":8178094,"line_start":181,"line_end":181,"column_start":1,"column_end":14}},{"value":"! use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178095,"byte_end":8178123,"line_start":182,"line_end":182,"column_start":1,"column_end":29}},{"value":"! use async_std::io::BufReader;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178124,"byte_end":8178157,"line_start":183,"line_end":183,"column_start":1,"column_end":34}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178158,"byte_end":8178188,"line_start":184,"line_end":184,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178189,"byte_end":8178192,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178193,"byte_end":8178267,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178268,"byte_end":8178273,"line_start":187,"line_end":187,"column_start":1,"column_end":6}},{"value":"! let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178274,"byte_end":8178315,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"! let reader = BufReader::new(f);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178316,"byte_end":8178351,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178352,"byte_end":8178355,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"! let mut lines = reader.lines();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178356,"byte_end":8178391,"line_start":191,"line_end":191,"column_start":1,"column_end":36}},{"value":"! while let Some(line) = lines.next().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178392,"byte_end":8178439,"line_start":192,"line_end":192,"column_start":1,"column_end":48}},{"value":"!     println!(\"{}\", line?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178440,"byte_end":8178470,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"! }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178471,"byte_end":8178476,"line_start":194,"line_end":194,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178477,"byte_end":8178482,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178483,"byte_end":8178500,"line_start":196,"line_end":196,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178501,"byte_end":8178508,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178509,"byte_end":8178512,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"! ## Functions","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178513,"byte_end":8178529,"line_start":199,"line_end":199,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178530,"byte_end":8178533,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"! There are a number of [functions][functions-list] that offer access to various","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178534,"byte_end":8178616,"line_start":201,"line_end":201,"column_start":1,"column_end":83}},{"value":"! features. For example, we can use three of these functions to copy everything","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178617,"byte_end":8178698,"line_start":202,"line_end":202,"column_start":1,"column_end":82}},{"value":"! from standard input to standard output:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178699,"byte_end":8178742,"line_start":203,"line_end":203,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178743,"byte_end":8178746,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178747,"byte_end":8178760,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"! use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178761,"byte_end":8178783,"line_start":206,"line_end":206,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178784,"byte_end":8178787,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178788,"byte_end":8178862,"line_start":208,"line_end":208,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178863,"byte_end":8178868,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"! io::copy(&mut io::stdin(), &mut io::stdout()).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178869,"byte_end":8178926,"line_start":210,"line_end":210,"column_start":1,"column_end":58}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178927,"byte_end":8178932,"line_start":211,"line_end":211,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178933,"byte_end":8178950,"line_start":212,"line_end":212,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178951,"byte_end":8178958,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178959,"byte_end":8178962,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"! [functions-list]: #functions-1","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178963,"byte_end":8178997,"line_start":215,"line_end":215,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8178998,"byte_end":8179001,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"! ## io::Result","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179002,"byte_end":8179019,"line_start":217,"line_end":217,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179020,"byte_end":8179023,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"! Last, but certainly not least, is [`io::Result`]. This type is used","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179024,"byte_end":8179095,"line_start":219,"line_end":219,"column_start":1,"column_end":72}},{"value":"! as the return type of many `std::io` functions that can cause an error, and","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179096,"byte_end":8179175,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"! can be returned from your own functions as well. Many of the examples in this","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179176,"byte_end":8179257,"line_start":221,"line_end":221,"column_start":1,"column_end":82}},{"value":"! module use the [`?` operator]:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179258,"byte_end":8179292,"line_start":222,"line_end":222,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179293,"byte_end":8179296,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179297,"byte_end":8179304,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"! #![allow(dead_code)]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179305,"byte_end":8179329,"line_start":225,"line_end":225,"column_start":1,"column_end":25}},{"value":"! use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179330,"byte_end":8179352,"line_start":226,"line_end":226,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179353,"byte_end":8179356,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"! async fn read_input() -> io::Result<()> {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179357,"byte_end":8179402,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"!     let mut input = String::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179403,"byte_end":8179441,"line_start":229,"line_end":229,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179442,"byte_end":8179445,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"!     io::stdin().read_line(&mut input).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179446,"byte_end":8179495,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179496,"byte_end":8179499,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"!     println!(\"You typed: {}\", input.trim());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179500,"byte_end":8179548,"line_start":233,"line_end":233,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179549,"byte_end":8179552,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179553,"byte_end":8179567,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179568,"byte_end":8179573,"line_start":236,"line_end":236,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179574,"byte_end":8179581,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179582,"byte_end":8179585,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! The return type of `read_input`, [`io::Result<()>`][`io::Result`], is a very","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179586,"byte_end":8179666,"line_start":239,"line_end":239,"column_start":1,"column_end":81}},{"value":"! common type for functions which don't have a 'real' return value, but do want to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179667,"byte_end":8179751,"line_start":240,"line_end":240,"column_start":1,"column_end":85}},{"value":"! return errors if they happen. In this case, the only purpose of this function is","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179752,"byte_end":8179836,"line_start":241,"line_end":241,"column_start":1,"column_end":85}},{"value":"! to read the line and print it, so we use `()`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179837,"byte_end":8179887,"line_start":242,"line_end":242,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179888,"byte_end":8179891,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"! ## Platform-specific behavior","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179892,"byte_end":8179925,"line_start":244,"line_end":244,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179926,"byte_end":8179929,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"! Many I/O functions throughout the standard library are documented to indicate","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8179930,"byte_end":8180011,"line_start":246,"line_end":246,"column_start":1,"column_end":82}},{"value":"! what various library or syscalls they are delegated to. This is done to help","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180012,"byte_end":8180092,"line_start":247,"line_end":247,"column_start":1,"column_end":81}},{"value":"! applications both understand what's happening under the hood as well as investigate","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180093,"byte_end":8180180,"line_start":248,"line_end":248,"column_start":1,"column_end":88}},{"value":"! any possibly unclear semantics. Note, however, that this is informative, not a binding","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180181,"byte_end":8180271,"line_start":249,"line_end":249,"column_start":1,"column_end":91}},{"value":"! contract. The implementation of many of these functions are subject to change over","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180272,"byte_end":8180358,"line_start":250,"line_end":250,"column_start":1,"column_end":87}},{"value":"! time and may call fewer or more syscalls/library functions.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180359,"byte_end":8180422,"line_start":251,"line_end":251,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180423,"byte_end":8180426,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! [`Read`]: trait.Read.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180427,"byte_end":8180456,"line_start":253,"line_end":253,"column_start":1,"column_end":30}},{"value":"! [`Write`]: trait.Write.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180457,"byte_end":8180488,"line_start":254,"line_end":254,"column_start":1,"column_end":32}},{"value":"! [`Seek`]: trait.Seek.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180489,"byte_end":8180518,"line_start":255,"line_end":255,"column_start":1,"column_end":30}},{"value":"! [`BufRead`]: trait.BufRead.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180519,"byte_end":8180554,"line_start":256,"line_end":256,"column_start":1,"column_end":36}},{"value":"! [`File`]: ../fs/struct.File.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180555,"byte_end":8180591,"line_start":257,"line_end":257,"column_start":1,"column_end":37}},{"value":"! [`TcpStream`]: ../net/struct.TcpStream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180592,"byte_end":8180639,"line_start":258,"line_end":258,"column_start":1,"column_end":48}},{"value":"! [`Vec<T>`]: ../vec/struct.Vec.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180640,"byte_end":8180678,"line_start":259,"line_end":259,"column_start":1,"column_end":39}},{"value":"! [`BufReader`]: struct.BufReader.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180679,"byte_end":8180719,"line_start":260,"line_end":260,"column_start":1,"column_end":41}},{"value":"! [`BufWriter`]: struct.BufWriter.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180720,"byte_end":8180760,"line_start":261,"line_end":261,"column_start":1,"column_end":41}},{"value":"! [`Write::write`]: trait.Write.html#tymethod.write","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180761,"byte_end":8180814,"line_start":262,"line_end":262,"column_start":1,"column_end":54}},{"value":"! [`io::stdout`]: fn.stdout.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180815,"byte_end":8180849,"line_start":263,"line_end":263,"column_start":1,"column_end":35}},{"value":"! [`println!`]: ../macro.println.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180850,"byte_end":8180889,"line_start":264,"line_end":264,"column_start":1,"column_end":40}},{"value":"! [`Lines`]: struct.Lines.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180890,"byte_end":8180922,"line_start":265,"line_end":265,"column_start":1,"column_end":33}},{"value":"! [`io::Result`]: type.Result.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180923,"byte_end":8180959,"line_start":266,"line_end":266,"column_start":1,"column_end":37}},{"value":"! [`?` operator]: https://doc.rust-lang.org/stable/book/appendix-02-operators.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8180960,"byte_end":8181044,"line_start":267,"line_end":267,"column_start":1,"column_end":85}},{"value":"! [`Read::read`]: trait.Read.html#tymethod.read","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181045,"byte_end":8181094,"line_start":268,"line_end":268,"column_start":1,"column_end":50}},{"value":"! [`Result`]: https://doc.rust-lang.org/std/result/enum.Result.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181095,"byte_end":8181164,"line_start":269,"line_end":269,"column_start":1,"column_end":70}},{"value":"! [`.unwrap()`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181165,"byte_end":8181251,"line_start":270,"line_end":270,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":3236},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::io::prelude","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","parent":null,"children":[{"krate":0,"index":3237},{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3244}],"decl_id":null,"docs":" The async I/O prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":16048,"byte_end":16071,"line_start":208,"line_end":208,"column_start":13,"column_end":36}},{"value":"! The async I/O prelude.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8219787,"byte_end":8219813,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8219814,"byte_end":8219817,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The purpose of this module is to alleviate imports of many common I/O traits","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8219818,"byte_end":8219898,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! by adding a glob import to the top of I/O heavy modules:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8219899,"byte_end":8219959,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8219960,"byte_end":8219963,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8219964,"byte_end":8219971,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"! # #![allow(unused_imports)]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8219972,"byte_end":8220003,"line_start":7,"line_end":7,"column_start":1,"column_end":32}},{"value":"! use async_std::io::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8220004,"byte_end":8220038,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/prelude.rs","byte_start":8220039,"byte_end":8220046,"line_start":9,"line_end":9,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7077},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/lines.rs","byte_start":8232975,"byte_end":8232980,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::buf_read::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":7079},{"krate":0,"index":7080},{"krate":0,"index":7081},{"krate":0,"index":7082}],"decl_id":null,"docs":" A stream of lines in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3278},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/read_line.rs","byte_start":8234877,"byte_end":8234891,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"ReadLineFuture","qualname":"::io::buf_read::read_line::ReadLineFuture","value":"ReadLineFuture {  }","parent":null,"children":[{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/read_line.rs","byte_start":8234826,"byte_end":8234865,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3300},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/read_until.rs","byte_start":8236354,"byte_end":8236369,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadUntilFuture","qualname":"::io::buf_read::read_until::ReadUntilFuture","value":"ReadUntilFuture {  }","parent":null,"children":[{"krate":0,"index":3303},{"krate":0,"index":3304},{"krate":0,"index":3305},{"krate":0,"index":3306}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/read_until.rs","byte_start":8236303,"byte_end":8236342,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":7029},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/split.rs","byte_start":8237594,"byte_end":8237599,"line_start":22,"line_end":22,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::buf_read::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":7031},{"krate":0,"index":7032},{"krate":0,"index":7033},{"krate":0,"index":7034}],"decl_id":null,"docs":" A stream over the contents of an instance of [`BufRead`] split on a particular byte.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3898},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/mod.rs","byte_start":8222820,"byte_end":8222830,"line_start":72,"line_end":72,"column_start":15,"column_end":25},"name":"BufReadExt","qualname":"::io::buf_read::BufReadExt","value":"BufReadExt: BufRead","parent":null,"children":[{"krate":0,"index":3901},{"krate":0,"index":3903},{"krate":0,"index":3905},{"krate":0,"index":3906}],"decl_id":null,"docs":"\n        Extension methods for [`BufRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3901},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/mod.rs","byte_start":8224594,"byte_end":8224604,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::buf_read::BufReadExt::read_until","value":"fn <'a> (&'a mut self, byte: u8, buf: &'a mut Vec<u8>) -> ReadUntilFuture<'a, Self>","parent":{"krate":0,"index":3898},"children":[],"decl_id":null,"docs":"\n            Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3903},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/mod.rs","byte_start":8226393,"byte_end":8226402,"line_start":177,"line_end":177,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::buf_read::BufReadExt::read_line","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadLineFuture<'a, Self>","parent":{"krate":0,"index":3898},"children":[],"decl_id":null,"docs":"\n            Reads all bytes and appends them into `buf` until a newline (the 0xA byte) is\n            reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/mod.rs","byte_start":8227860,"byte_end":8227865,"line_start":223,"line_end":223,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::buf_read::BufReadExt::lines","value":"fn (self) -> Lines<Self>","parent":{"krate":0,"index":3898},"children":[],"decl_id":null,"docs":"\n            Returns a stream over the lines of this byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3906},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/mod.rs","byte_start":8229629,"byte_end":8229634,"line_start":274,"line_end":274,"column_start":12,"column_end":17},"name":"split","qualname":"::io::buf_read::BufReadExt::split","value":"fn (self, byte: u8) -> Split<Self>","parent":{"krate":0,"index":3898},"children":[],"decl_id":null,"docs":"\n            Returns a stream over the contents of this reader split on the byte `byte`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3907},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/bytes.rs","byte_start":8254632,"byte_end":8254637,"line_start":14,"line_end":14,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::io::read::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":3909}],"decl_id":null,"docs":" A stream over `u8` values of a reader.","sig":null,"attributes":[{"value":"/ A stream over `u8` values of a reader.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/bytes.rs","byte_start":8254374,"byte_end":8254416,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/bytes.rs","byte_start":8254417,"byte_end":8254420,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This struct is generally created by calling [`bytes`] on a reader.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/bytes.rs","byte_start":8254421,"byte_end":8254491,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ Please see the documentation of [`bytes`] for more details.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/bytes.rs","byte_start":8254492,"byte_end":8254555,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/bytes.rs","byte_start":8254556,"byte_end":8254559,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`bytes`]: trait.Read.html#method.bytes","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/bytes.rs","byte_start":8254560,"byte_end":8254603,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":6955},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256364,"byte_end":8256369,"line_start":16,"line_end":16,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::read::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6958},{"krate":0,"index":6959},{"krate":0,"index":6960}],"decl_id":null,"docs":" Adaptor to chain together two readers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257093,"byte_end":8257103,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256542,"byte_end":8256598,"line_start":26,"line_end":26,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256603,"byte_end":8256606,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256611,"byte_end":8256625,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256630,"byte_end":8256633,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256638,"byte_end":8256651,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256656,"byte_end":8256736,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256741,"byte_end":8256746,"line_start":32,"line_end":32,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256751,"byte_end":8256781,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256786,"byte_end":8256814,"line_start":34,"line_end":34,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256819,"byte_end":8256822,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256827,"byte_end":8256875,"line_start":36,"line_end":36,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256880,"byte_end":8256928,"line_start":37,"line_end":37,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256933,"byte_end":8256936,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256941,"byte_end":8256982,"line_start":39,"line_end":39,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.into_inner();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256987,"byte_end":8257037,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257042,"byte_end":8257047,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257052,"byte_end":8257069,"line_start":42,"line_end":42,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257074,"byte_end":8257081,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257721,"byte_end":8257728,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn (&self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257167,"byte_end":8257229,"line_start":48,"line_end":48,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257234,"byte_end":8257237,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257242,"byte_end":8257256,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257261,"byte_end":8257264,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257269,"byte_end":8257282,"line_start":52,"line_end":52,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257287,"byte_end":8257367,"line_start":53,"line_end":53,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257372,"byte_end":8257377,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257382,"byte_end":8257412,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257417,"byte_end":8257445,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257450,"byte_end":8257453,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257458,"byte_end":8257506,"line_start":58,"line_end":58,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257511,"byte_end":8257559,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257564,"byte_end":8257567,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let chain = foo_file.chain(bar_file);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257572,"byte_end":8257613,"line_start":61,"line_end":61,"column_start":5,"column_end":46}},{"value":"/ let (foo_file, bar_file) = chain.get_ref();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257618,"byte_end":8257665,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257670,"byte_end":8257675,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257680,"byte_end":8257697,"line_start":64,"line_end":64,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257702,"byte_end":8257709,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3370},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258544,"byte_end":8258551,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn (&mut self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257797,"byte_end":8257867,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257872,"byte_end":8257875,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257880,"byte_end":8257953,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8257958,"byte_end":8258031,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258036,"byte_end":8258048,"line_start":74,"line_end":74,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258053,"byte_end":8258056,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258061,"byte_end":8258075,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258080,"byte_end":8258083,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258088,"byte_end":8258101,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258106,"byte_end":8258186,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258191,"byte_end":8258196,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258201,"byte_end":8258231,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258236,"byte_end":8258264,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258269,"byte_end":8258272,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let foo_file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258277,"byte_end":8258325,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ let bar_file = File::open(\"bar.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258330,"byte_end":8258378,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258383,"byte_end":8258386,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let mut chain = foo_file.chain(bar_file);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258391,"byte_end":8258436,"line_start":87,"line_end":87,"column_start":5,"column_end":50}},{"value":"/ let (foo_file, bar_file) = chain.get_mut();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258441,"byte_end":8258488,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258493,"byte_end":8258498,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258503,"byte_end":8258520,"line_start":90,"line_end":90,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258525,"byte_end":8258532,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3394},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read.rs","byte_start":8261642,"byte_end":8261652,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ReadFuture","qualname":"::io::read::read::ReadFuture","value":"ReadFuture {  }","parent":null,"children":[{"krate":0,"index":3397},{"krate":0,"index":3398}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read.rs","byte_start":8261591,"byte_end":8261630,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3413},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_exact.rs","byte_start":8262222,"byte_end":8262237,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ReadExactFuture","qualname":"::io::read::read_exact::ReadExactFuture","value":"ReadExactFuture {  }","parent":null,"children":[{"krate":0,"index":3416},{"krate":0,"index":3417}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_exact.rs","byte_start":8262171,"byte_end":8262210,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3431},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_to_end.rs","byte_start":8263123,"byte_end":8263138,"line_start":9,"line_end":9,"column_start":12,"column_end":27},"name":"ReadToEndFuture","qualname":"::io::read::read_to_end::ReadToEndFuture","value":"ReadToEndFuture {  }","parent":null,"children":[{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3436}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_to_end.rs","byte_start":8263072,"byte_end":8263111,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3461},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_to_string.rs","byte_start":8265577,"byte_end":8265595,"line_start":12,"line_end":12,"column_start":12,"column_end":30},"name":"ReadToStringFuture","qualname":"::io::read::read_to_string::ReadToStringFuture","value":"ReadToStringFuture {  }","parent":null,"children":[{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_to_string.rs","byte_start":8265526,"byte_end":8265565,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3483},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_vectored.rs","byte_start":8267002,"byte_end":8267020,"line_start":9,"line_end":9,"column_start":12,"column_end":30},"name":"ReadVectoredFuture","qualname":"::io::read::read_vectored::ReadVectoredFuture","value":"ReadVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":3486},{"krate":0,"index":3487}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_vectored.rs","byte_start":8266951,"byte_end":8266990,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6938},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8267908,"byte_end":8267912,"line_start":17,"line_end":17,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::read::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6940},{"krate":0,"index":6941}],"decl_id":null,"docs":" Reader adaptor which limits the bytes read from an underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268802,"byte_end":8268807,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be read before this instance will\n return EOF.","sig":null,"attributes":[{"value":"/ Returns the number of bytes that can be read before this instance will","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268024,"byte_end":8268098,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ return EOF.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268103,"byte_end":8268118,"line_start":26,"line_end":26,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268123,"byte_end":8268126,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268131,"byte_end":8268141,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268146,"byte_end":8268149,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268154,"byte_end":8268231,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`Read`] instance reaches EOF.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268236,"byte_end":8268300,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268305,"byte_end":8268308,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268313,"byte_end":8268342,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268347,"byte_end":8268350,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268355,"byte_end":8268369,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268374,"byte_end":8268377,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268382,"byte_end":8268395,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268400,"byte_end":8268480,"line_start":38,"line_end":38,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268485,"byte_end":8268490,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268495,"byte_end":8268525,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268530,"byte_end":8268558,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268563,"byte_end":8268566,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268571,"byte_end":8268612,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268617,"byte_end":8268620,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268625,"byte_end":8268655,"line_start":45,"line_end":45,"column_start":5,"column_end":35}},{"value":"/ let handle = f.take(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268660,"byte_end":8268687,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268692,"byte_end":8268695,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ println!(\"limit: {}\", handle.limit());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268700,"byte_end":8268742,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268747,"byte_end":8268752,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/ #     Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268757,"byte_end":8268778,"line_start":50,"line_end":50,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268783,"byte_end":8268790,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269596,"byte_end":8269605,"line_start":79,"line_end":79,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"fn (&mut self, limit: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268854,"byte_end":8268925,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268930,"byte_end":8269004,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269009,"byte_end":8269084,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269089,"byte_end":8269113,"line_start":59,"line_end":59,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269118,"byte_end":8269121,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269126,"byte_end":8269140,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269145,"byte_end":8269148,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269153,"byte_end":8269166,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269171,"byte_end":8269251,"line_start":64,"line_end":64,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269256,"byte_end":8269261,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269266,"byte_end":8269296,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269301,"byte_end":8269329,"line_start":67,"line_end":67,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269334,"byte_end":8269337,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269342,"byte_end":8269383,"line_start":69,"line_end":69,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269388,"byte_end":8269391,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ // read at most five bytes","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269396,"byte_end":8269426,"line_start":71,"line_end":71,"column_start":5,"column_end":35}},{"value":"/ let mut handle = f.take(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269431,"byte_end":8269462,"line_start":72,"line_end":72,"column_start":5,"column_end":36}},{"value":"/ handle.set_limit(10);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269467,"byte_end":8269492,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269497,"byte_end":8269500,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(handle.limit(), 10);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269505,"byte_end":8269540,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269545,"byte_end":8269550,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269555,"byte_end":8269572,"line_start":77,"line_end":77,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269577,"byte_end":8269584,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270222,"byte_end":8270232,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269670,"byte_end":8269724,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269729,"byte_end":8269732,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269737,"byte_end":8269751,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269756,"byte_end":8269759,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269764,"byte_end":8269777,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269782,"byte_end":8269862,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269867,"byte_end":8269872,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269877,"byte_end":8269907,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269912,"byte_end":8269940,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269945,"byte_end":8269948,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8269953,"byte_end":8269997,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270002,"byte_end":8270005,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270010,"byte_end":8270038,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270043,"byte_end":8270077,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270082,"byte_end":8270118,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270123,"byte_end":8270126,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let file = handle.into_inner();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270131,"byte_end":8270166,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270171,"byte_end":8270176,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270181,"byte_end":8270198,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270203,"byte_end":8270210,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270817,"byte_end":8270824,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270276,"byte_end":8270322,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270327,"byte_end":8270330,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270335,"byte_end":8270349,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270354,"byte_end":8270357,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270362,"byte_end":8270375,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270380,"byte_end":8270460,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270465,"byte_end":8270470,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270475,"byte_end":8270505,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270510,"byte_end":8270538,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270543,"byte_end":8270546,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270551,"byte_end":8270595,"line_start":117,"line_end":117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270600,"byte_end":8270603,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270608,"byte_end":8270636,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270641,"byte_end":8270675,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270680,"byte_end":8270716,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270721,"byte_end":8270724,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_ref();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270729,"byte_end":8270761,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270766,"byte_end":8270771,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270776,"byte_end":8270793,"line_start":125,"line_end":125,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270798,"byte_end":8270805,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271599,"byte_end":8271606,"line_start":155,"line_end":155,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270871,"byte_end":8270925,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270930,"byte_end":8270933,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8270938,"byte_end":8271011,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271016,"byte_end":8271088,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271093,"byte_end":8271104,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271109,"byte_end":8271112,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271117,"byte_end":8271131,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271136,"byte_end":8271139,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271144,"byte_end":8271157,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> async_std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271162,"byte_end":8271242,"line_start":140,"line_end":140,"column_start":5,"column_end":85}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271247,"byte_end":8271252,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271257,"byte_end":8271287,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271292,"byte_end":8271320,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271325,"byte_end":8271328,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271333,"byte_end":8271377,"line_start":145,"line_end":145,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271382,"byte_end":8271385,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271390,"byte_end":8271418,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ let mut handle = file.take(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271423,"byte_end":8271457,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/ handle.read(&mut buffer).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271462,"byte_end":8271498,"line_start":149,"line_end":149,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271503,"byte_end":8271506,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let file = handle.get_mut();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271511,"byte_end":8271543,"line_start":151,"line_end":151,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271548,"byte_end":8271553,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271558,"byte_end":8271575,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271580,"byte_end":8271587,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3925},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/mod.rs","byte_start":8240579,"byte_end":8240586,"line_start":80,"line_end":80,"column_start":15,"column_end":22},"name":"ReadExt","qualname":"::io::read::ReadExt","value":"ReadExt: Read","parent":null,"children":[{"krate":0,"index":3928},{"krate":0,"index":3930},{"krate":0,"index":3932},{"krate":0,"index":3934},{"krate":0,"index":3936},{"krate":0,"index":3938},{"krate":0,"index":3939},{"krate":0,"index":3940},{"krate":0,"index":3941}],"decl_id":null,"docs":"\n        Extension methods for [`Read`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3928},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/mod.rs","byte_start":8241779,"byte_end":8241783,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"read","qualname":"::io::read::ReadExt::read","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> ReadFuture<'a, Self>","parent":{"krate":0,"index":3925},"children":[],"decl_id":null,"docs":"\n            Reads some bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3930},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/mod.rs","byte_start":8242575,"byte_end":8242588,"line_start":134,"line_end":134,"column_start":12,"column_end":25},"name":"read_vectored","qualname":"::io::read::ReadExt::read_vectored","value":"fn <'a> (&'a mut self, bufs: &'a mut [IoSliceMut<'a>]) -> ReadVectoredFuture<'a, Self>","parent":{"krate":0,"index":3925},"children":[],"decl_id":null,"docs":"\n            Like [`read`], except that it reads into a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3932},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/mod.rs","byte_start":8243745,"byte_end":8243756,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::read::ReadExt::read_to_end","value":"fn <'a> (&'a mut self, buf: &'a mut Vec<u8>) -> ReadToEndFuture<'a, Self>","parent":{"krate":0,"index":3925},"children":[],"decl_id":null,"docs":"\n            Reads all bytes from the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3934},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/mod.rs","byte_start":8244894,"byte_end":8244908,"line_start":210,"line_end":210,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::read::ReadExt::read_to_string","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadToStringFuture<'a, Self>","parent":{"krate":0,"index":3925},"children":[],"decl_id":null,"docs":"\n            Reads all bytes from the byte stream and appends them into a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/mod.rs","byte_start":8246989,"byte_end":8246999,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::read::ReadExt::read_exact","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> ReadExactFuture<'a, Self>","parent":{"krate":0,"index":3925},"children":[],"decl_id":null,"docs":"\n            Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3938},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/mod.rs","byte_start":8248353,"byte_end":8248357,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"take","qualname":"::io::read::ReadExt::take","value":"fn (self, limit: u64) -> Take<Self>","parent":{"krate":0,"index":3925},"children":[],"decl_id":null,"docs":"\n            Creates an adaptor which will read at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3939},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/mod.rs","byte_start":8249572,"byte_end":8249578,"line_start":351,"line_end":351,"column_start":12,"column_end":18},"name":"by_ref","qualname":"::io::read::ReadExt::by_ref","value":"fn (&mut self) -> &mut Self","parent":{"krate":0,"index":3925},"children":[],"decl_id":null,"docs":"\n            Creates a \"by reference\" adaptor for this instance of `Read`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3940},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/mod.rs","byte_start":8250580,"byte_end":8250585,"line_start":384,"line_end":384,"column_start":12,"column_end":17},"name":"bytes","qualname":"::io::read::ReadExt::bytes","value":"fn (self) -> Bytes<Self>","parent":{"krate":0,"index":3925},"children":[],"decl_id":null,"docs":"\n            Transforms this `Read` instance to a `Stream` over its bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3941},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/mod.rs","byte_start":8251720,"byte_end":8251725,"line_start":420,"line_end":420,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::read::ReadExt::chain","value":"fn <R> (self, next: R) -> Chain<Self, R>","parent":{"krate":0,"index":3925},"children":[],"decl_id":null,"docs":"\n            Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3544},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/seek/seek.rs","byte_start":8277588,"byte_end":8277598,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"SeekFuture","qualname":"::io::seek::seek::SeekFuture","value":"SeekFuture {  }","parent":null,"children":[{"krate":0,"index":3547},{"krate":0,"index":3548}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/seek/seek.rs","byte_start":8277537,"byte_end":8277576,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":3955},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/seek/mod.rs","byte_start":8275470,"byte_end":8275477,"line_start":51,"line_end":51,"column_start":15,"column_end":22},"name":"SeekExt","qualname":"::io::seek::SeekExt","value":"SeekExt: Seek","parent":null,"children":[{"krate":0,"index":3958}],"decl_id":null,"docs":"\n        Extension methods for [`Seek`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3958},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/seek/mod.rs","byte_start":8276211,"byte_end":8276215,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::seek::SeekExt::seek","value":"fn (&mut self, pos: SeekFrom) -> SeekFuture<'_, Self>","parent":{"krate":0,"index":3955},"children":[],"decl_id":null,"docs":"\n            Seeks to a new position in a byte stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3565},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/flush.rs","byte_start":8288922,"byte_end":8288933,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"FlushFuture","qualname":"::io::write::flush::FlushFuture","value":"FlushFuture {  }","parent":null,"children":[{"krate":0,"index":3568}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/flush.rs","byte_start":8288871,"byte_end":8288910,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3582},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write.rs","byte_start":8289415,"byte_end":8289426,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"WriteFuture","qualname":"::io::write::write::WriteFuture","value":"WriteFuture {  }","parent":null,"children":[{"krate":0,"index":3585},{"krate":0,"index":3586}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write.rs","byte_start":8289364,"byte_end":8289403,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3601},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write_all.rs","byte_start":8289988,"byte_end":8290002,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteAllFuture","qualname":"::io::write::write_all::WriteAllFuture","value":"WriteAllFuture {  }","parent":null,"children":[{"krate":0,"index":3604},{"krate":0,"index":3605}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write_all.rs","byte_start":8289937,"byte_end":8289976,"line_start":9,"line_end":9,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3619},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write_fmt.rs","byte_start":8290887,"byte_end":8290901,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"WriteFmtFuture","qualname":"::io::write::write_fmt::WriteFmtFuture","value":"WriteFmtFuture {  }","parent":null,"children":[{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write_fmt.rs","byte_start":8290824,"byte_end":8290863,"line_start":8,"line_end":8,"column_start":1,"column_end":40}},{"value":"must_use","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write_fmt.rs","byte_start":8290864,"byte_end":8290875,"line_start":9,"line_end":9,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3640},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write_vectored.rs","byte_start":8292460,"byte_end":8292479,"line_start":9,"line_end":9,"column_start":12,"column_end":31},"name":"WriteVectoredFuture","qualname":"::io::write::write_vectored::WriteVectoredFuture","value":"WriteVectoredFuture {  }","parent":null,"children":[{"krate":0,"index":3643},{"krate":0,"index":3644}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write_vectored.rs","byte_start":8292409,"byte_end":8292448,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":3971},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/mod.rs","byte_start":8280513,"byte_end":8280521,"line_start":84,"line_end":84,"column_start":15,"column_end":23},"name":"WriteExt","qualname":"::io::write::WriteExt","value":"WriteExt: Write","parent":null,"children":[{"krate":0,"index":3974},{"krate":0,"index":3976},{"krate":0,"index":3977},{"krate":0,"index":3979},{"krate":0,"index":3981}],"decl_id":null,"docs":"\n        Extension methods for [`Write`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/mod.rs","byte_start":8281438,"byte_end":8281443,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"write","qualname":"::io::write::WriteExt::write","value":"fn <'a> (&'a mut self, buf: &'a [u8]) -> WriteFuture<'a, Self>","parent":{"krate":0,"index":3971},"children":[],"decl_id":null,"docs":"\n            Writes some bytes into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3976},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/mod.rs","byte_start":8282245,"byte_end":8282250,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::write::WriteExt::flush","value":"fn (&mut self) -> FlushFuture<'_, Self>","parent":{"krate":0,"index":3971},"children":[],"decl_id":null,"docs":"\n            Flushes the stream to ensure that all buffered contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/mod.rs","byte_start":8282973,"byte_end":8282987,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"write_vectored","qualname":"::io::write::WriteExt::write_vectored","value":"fn <'a> (&'a mut self, bufs: &'a [IoSlice<'a>]) -> WriteVectoredFuture<'a, Self>","parent":{"krate":0,"index":3971},"children":[],"decl_id":null,"docs":"\n            Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3979},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/mod.rs","byte_start":8284084,"byte_end":8284093,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::write::WriteExt::write_all","value":"fn <'a> (&'a mut self, buf: &'a [u8]) -> WriteAllFuture<'a, Self>","parent":{"krate":0,"index":3971},"children":[],"decl_id":null,"docs":"\n            Writes an entire buffer into the byte stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3981},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/mod.rs","byte_start":8285302,"byte_end":8285311,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"write_fmt","qualname":"::io::write::WriteExt::write_fmt","value":"fn <'a> (&'a mut self, fmt: std::fmt::Arguments<'_>) -> WriteFmtFuture<'a, Self>","parent":{"krate":0,"index":3971},"children":[],"decl_id":null,"docs":"\n            Writes a formatted string into this writer, returning any error encountered.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6870},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8295666,"byte_end":8295675,"line_start":46,"line_end":46,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":6872},{"krate":0,"index":6873},{"krate":0,"index":6874},{"krate":0,"index":6875}],"decl_id":null,"docs":" Adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3696},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296306,"byte_end":8296309,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn (inner: R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a buffered reader with default buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a buffered reader with default buffer capacity.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8295824,"byte_end":8295883,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8295888,"byte_end":8295891,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The default capacity is currently 8 KB, but may change in the future.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8295896,"byte_end":8295969,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8295974,"byte_end":8295977,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8295982,"byte_end":8295996,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296001,"byte_end":8296004,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296009,"byte_end":8296022,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296027,"byte_end":8296101,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296106,"byte_end":8296111,"line_start":64,"line_end":64,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296116,"byte_end":8296144,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296149,"byte_end":8296182,"line_start":66,"line_end":66,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296187,"byte_end":8296190,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296195,"byte_end":8296250,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296255,"byte_end":8296260,"line_start":69,"line_end":69,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296265,"byte_end":8296282,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296287,"byte_end":8296294,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3697},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296822,"byte_end":8296835,"line_start":90,"line_end":90,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn (capacity: usize, inner: R) -> BufReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new buffered reader with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new buffered reader with the specified capacity.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296407,"byte_end":8296469,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296474,"byte_end":8296477,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296482,"byte_end":8296496,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296501,"byte_end":8296504,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296509,"byte_end":8296522,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296527,"byte_end":8296601,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296606,"byte_end":8296611,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296616,"byte_end":8296644,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296649,"byte_end":8296682,"line_start":84,"line_end":84,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296687,"byte_end":8296690,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::with_capacity(1024, File::open(\"a.txt\").await?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296695,"byte_end":8296766,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296771,"byte_end":8296776,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296781,"byte_end":8296798,"line_start":88,"line_end":88,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8296803,"byte_end":8296810,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297556,"byte_end":8297563,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297061,"byte_end":8297107,"line_start":101,"line_end":101,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297112,"byte_end":8297115,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297120,"byte_end":8297186,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297191,"byte_end":8297194,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297199,"byte_end":8297213,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297218,"byte_end":8297221,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297226,"byte_end":8297239,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297244,"byte_end":8297318,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297323,"byte_end":8297328,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297333,"byte_end":8297361,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297366,"byte_end":8297399,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297404,"byte_end":8297407,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297412,"byte_end":8297467,"line_start":113,"line_end":113,"column_start":5,"column_end":60}},{"value":"/ let inner = f.get_ref();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297472,"byte_end":8297500,"line_start":114,"line_end":114,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297505,"byte_end":8297510,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297515,"byte_end":8297532,"line_start":116,"line_end":116,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297537,"byte_end":8297544,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3701},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298123,"byte_end":8298130,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297610,"byte_end":8297664,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297669,"byte_end":8297672,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297677,"byte_end":8297743,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297748,"byte_end":8297751,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297756,"byte_end":8297770,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297775,"byte_end":8297778,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297783,"byte_end":8297796,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297801,"byte_end":8297875,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297880,"byte_end":8297885,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297890,"byte_end":8297918,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297923,"byte_end":8297956,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297961,"byte_end":8297964,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let mut file = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297969,"byte_end":8298031,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ let inner = file.get_mut();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298036,"byte_end":8298067,"line_start":135,"line_end":135,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298072,"byte_end":8298077,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298082,"byte_end":8298099,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298104,"byte_end":8298111,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3703},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298927,"byte_end":8298933,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal buffer.","sig":null,"attributes":[{"value":"/ Returns a reference to the internal buffer.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298428,"byte_end":8298475,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298480,"byte_end":8298483,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This function will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298488,"byte_end":8298557,"line_start":152,"line_end":152,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298562,"byte_end":8298565,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298570,"byte_end":8298584,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298589,"byte_end":8298592,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298597,"byte_end":8298610,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298615,"byte_end":8298689,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298694,"byte_end":8298699,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298704,"byte_end":8298732,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298737,"byte_end":8298770,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298775,"byte_end":8298778,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298783,"byte_end":8298838,"line_start":162,"line_end":162,"column_start":5,"column_end":60}},{"value":"/ let buffer = f.buffer();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298843,"byte_end":8298871,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298876,"byte_end":8298881,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298886,"byte_end":8298903,"line_start":165,"line_end":165,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8298908,"byte_end":8298915,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3704},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299515,"byte_end":8299525,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the buffered reader, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps the buffered reader, returning the underlying reader.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299001,"byte_end":8299066,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299071,"byte_end":8299074,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299079,"byte_end":8299142,"line_start":173,"line_end":173,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299147,"byte_end":8299150,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299155,"byte_end":8299169,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299174,"byte_end":8299177,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299182,"byte_end":8299195,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299200,"byte_end":8299274,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299279,"byte_end":8299284,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299289,"byte_end":8299317,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/ use async_std::io::BufReader;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299322,"byte_end":8299355,"line_start":181,"line_end":181,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299360,"byte_end":8299363,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let f = BufReader::new(File::open(\"a.txt\").await?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299368,"byte_end":8299423,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ let inner = f.into_inner();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299428,"byte_end":8299459,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299464,"byte_end":8299469,"line_start":185,"line_end":185,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299474,"byte_end":8299491,"line_start":186,"line_end":186,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299496,"byte_end":8299503,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6829},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308325,"byte_end":8308334,"line_start":83,"line_end":83,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":6831},{"krate":0,"index":6832},{"krate":0,"index":6833}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3990},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309199,"byte_end":8309213,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::io::buf_writer::IntoInnerError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned by `into_inner` which combines an error that\n happened while writing out the buffer, and the buffered writer object\n which may be used to recover from the condition.","sig":null,"attributes":[{"value":"/ An error returned by `into_inner` which combines an error that","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308428,"byte_end":8308494,"line_start":91,"line_end":91,"column_start":1,"column_end":67}},{"value":"/ happened while writing out the buffer, and the buffered writer object","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308495,"byte_end":8308568,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ which may be used to recover from the condition.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308569,"byte_end":8308621,"line_start":93,"line_end":93,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308622,"byte_end":8308625,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308626,"byte_end":8308640,"line_start":95,"line_end":95,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308641,"byte_end":8308644,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308645,"byte_end":8308658,"line_start":97,"line_end":97,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308659,"byte_end":8308733,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308734,"byte_end":8308767,"line_start":99,"line_end":99,"column_start":1,"column_end":34}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308768,"byte_end":8308802,"line_start":100,"line_end":100,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308803,"byte_end":8308806,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308807,"byte_end":8308889,"line_start":102,"line_end":102,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308890,"byte_end":8308893,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308894,"byte_end":8308942,"line_start":104,"line_end":104,"column_start":1,"column_end":49}},{"value":"/ let stream = match buf_writer.into_inner().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308943,"byte_end":8308997,"line_start":105,"line_end":105,"column_start":1,"column_end":55}},{"value":"/     Ok(s) => s,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8308998,"byte_end":8309017,"line_start":106,"line_end":106,"column_start":1,"column_end":20}},{"value":"/     Err(e) => {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309018,"byte_end":8309037,"line_start":107,"line_end":107,"column_start":1,"column_end":20}},{"value":"/         // Here, e is an IntoInnerError","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309038,"byte_end":8309081,"line_start":108,"line_end":108,"column_start":1,"column_end":44}},{"value":"/         panic!(\"An error occurred\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309082,"byte_end":8309122,"line_start":109,"line_end":109,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309123,"byte_end":8309132,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309133,"byte_end":8309139,"line_start":111,"line_end":111,"column_start":1,"column_end":7}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309140,"byte_end":8309145,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309146,"byte_end":8309163,"line_start":113,"line_end":113,"column_start":1,"column_end":18}},{"value":"/```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309164,"byte_end":8309170,"line_start":114,"line_end":114,"column_start":1,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":3739},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309796,"byte_end":8309799,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn (inner: W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309274,"byte_end":8309366,"line_start":119,"line_end":119,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309371,"byte_end":8309404,"line_start":120,"line_end":120,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309409,"byte_end":8309412,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309417,"byte_end":8309431,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309436,"byte_end":8309439,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309444,"byte_end":8309457,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309462,"byte_end":8309489,"line_start":125,"line_end":125,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309494,"byte_end":8309568,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309573,"byte_end":8309606,"line_start":127,"line_end":127,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309611,"byte_end":8309645,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309650,"byte_end":8309653,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309658,"byte_end":8309740,"line_start":130,"line_end":130,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309745,"byte_end":8309750,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309755,"byte_end":8309772,"line_start":132,"line_end":132,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309777,"byte_end":8309784,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3740},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310466,"byte_end":8310479,"line_start":155,"line_end":155,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn (capacity: usize, inner: W) -> BufWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309897,"byte_end":8309962,"line_start":138,"line_end":138,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309967,"byte_end":8309970,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309975,"byte_end":8309989,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309994,"byte_end":8309997,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Creating a buffer with a buffer of a hundred bytes.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310002,"byte_end":8310057,"line_start":142,"line_end":142,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310062,"byte_end":8310065,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310070,"byte_end":8310083,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310088,"byte_end":8310115,"line_start":145,"line_end":145,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310120,"byte_end":8310194,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310199,"byte_end":8310232,"line_start":147,"line_end":147,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310237,"byte_end":8310271,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310276,"byte_end":8310279,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310284,"byte_end":8310346,"line_start":150,"line_end":150,"column_start":5,"column_end":67}},{"value":"/ let mut buffer = BufWriter::with_capacity(100, stream);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310351,"byte_end":8310410,"line_start":151,"line_end":151,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310415,"byte_end":8310420,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310425,"byte_end":8310442,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310447,"byte_end":8310454,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3741},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311193,"byte_end":8311200,"line_start":180,"line_end":180,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310656,"byte_end":8310702,"line_start":163,"line_end":163,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310707,"byte_end":8310710,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310715,"byte_end":8310729,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310734,"byte_end":8310737,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310742,"byte_end":8310755,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ # #![allow(unused_mut)]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310760,"byte_end":8310787,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310792,"byte_end":8310866,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310871,"byte_end":8310904,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310909,"byte_end":8310943,"line_start":171,"line_end":171,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310948,"byte_end":8310951,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8310956,"byte_end":8311038,"line_start":173,"line_end":173,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311043,"byte_end":8311046,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311051,"byte_end":8311095,"line_start":175,"line_end":175,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_ref();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311100,"byte_end":8311137,"line_start":176,"line_end":176,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311142,"byte_end":8311147,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311152,"byte_end":8311169,"line_start":178,"line_end":178,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311174,"byte_end":8311181,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3742},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311838,"byte_end":8311845,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311247,"byte_end":8311301,"line_start":184,"line_end":184,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311306,"byte_end":8311309,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311314,"byte_end":8311379,"line_start":186,"line_end":186,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311384,"byte_end":8311387,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311392,"byte_end":8311406,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311411,"byte_end":8311414,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311419,"byte_end":8311432,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311437,"byte_end":8311511,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311516,"byte_end":8311549,"line_start":192,"line_end":192,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311554,"byte_end":8311588,"line_start":193,"line_end":193,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311593,"byte_end":8311596,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let mut buffer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34254\").await?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311601,"byte_end":8311683,"line_start":195,"line_end":195,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311688,"byte_end":8311691,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ // We can use reference just like buffer","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311696,"byte_end":8311740,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/ let reference = buffer.get_mut();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311745,"byte_end":8311782,"line_start":198,"line_end":198,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311787,"byte_end":8311792,"line_start":199,"line_end":199,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311797,"byte_end":8311814,"line_start":200,"line_end":200,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8311819,"byte_end":8311826,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312911,"byte_end":8312921,"line_start":233,"line_end":233,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"fn (mut self) -> Result<W, IntoInnerError<BufWriter<W>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes BufWriter, returning the underlying writer","sig":null,"attributes":[{"value":"/ Consumes BufWriter, returning the underlying writer","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312142,"byte_end":8312197,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312202,"byte_end":8312205,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This method will not write leftover data, it will be lost.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312210,"byte_end":8312272,"line_start":215,"line_end":215,"column_start":5,"column_end":67}},{"value":"/ For method that will attempt to write before returning the writer see [`poll_into_inner`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312277,"byte_end":8312370,"line_start":216,"line_end":216,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312375,"byte_end":8312378,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ [`poll_into_inner`]: #method.poll_into_inner","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312383,"byte_end":8312431,"line_start":218,"line_end":218,"column_start":5,"column_end":53}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312436,"byte_end":8312450,"line_start":219,"line_end":219,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312455,"byte_end":8312458,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312463,"byte_end":8312476,"line_start":221,"line_end":221,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312481,"byte_end":8312555,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312560,"byte_end":8312593,"line_start":223,"line_end":223,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312598,"byte_end":8312632,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312637,"byte_end":8312640,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312645,"byte_end":8312727,"line_start":226,"line_end":226,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312732,"byte_end":8312735,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ // unwrap the TcpStream and flush the buffer","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312740,"byte_end":8312788,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/ let stream = buf_writer.into_inner().await.unwrap();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312793,"byte_end":8312849,"line_start":229,"line_end":229,"column_start":5,"column_end":61}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312854,"byte_end":8312859,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312864,"byte_end":8312881,"line_start":231,"line_end":231,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8312886,"byte_end":8312893,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3747},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313691,"byte_end":8313697,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313158,"byte_end":8313214,"line_start":243,"line_end":243,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313219,"byte_end":8313222,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313227,"byte_end":8313241,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313246,"byte_end":8313249,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313254,"byte_end":8313267,"line_start":247,"line_end":247,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313272,"byte_end":8313346,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"/ use async_std::io::BufWriter;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313351,"byte_end":8313384,"line_start":249,"line_end":249,"column_start":5,"column_end":38}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313389,"byte_end":8313423,"line_start":250,"line_end":250,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313428,"byte_end":8313431,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let buf_writer = BufWriter::new(TcpStream::connect(\"127.0.0.1:34251\").await?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313436,"byte_end":8313518,"line_start":252,"line_end":252,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313523,"byte_end":8313526,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ // See how many bytes are currently buffered","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313531,"byte_end":8313579,"line_start":254,"line_end":254,"column_start":5,"column_end":53}},{"value":"/ let bytes_buffered = buf_writer.buffer().len();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313584,"byte_end":8313635,"line_start":255,"line_end":255,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313640,"byte_end":8313645,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313650,"byte_end":8313667,"line_start":257,"line_end":257,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8313672,"byte_end":8313679,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3774},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320758,"byte_end":8320762,"line_start":135,"line_end":135,"column_start":14,"column_end":18},"name":"copy","qualname":"::io::copy::copy","value":"fn <R, W> (reader: R, writer: W) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"/ Copies the entire contents of a reader into a writer.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8319506,"byte_end":8319563,"line_start":97,"line_end":97,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8319564,"byte_end":8319567,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This function will continuously read data from `reader` and then","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8319568,"byte_end":8319636,"line_start":99,"line_end":99,"column_start":1,"column_end":69}},{"value":"/ write it into `writer` in a streaming fashion until `reader`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8319637,"byte_end":8319701,"line_start":100,"line_end":100,"column_start":1,"column_end":65}},{"value":"/ returns EOF.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8319702,"byte_end":8319718,"line_start":101,"line_end":101,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8319719,"byte_end":8319722,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes that were copied from","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8319723,"byte_end":8319786,"line_start":103,"line_end":103,"column_start":1,"column_end":64}},{"value":"/ `reader` to `writer` is returned.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8319787,"byte_end":8319824,"line_start":104,"line_end":104,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8319825,"byte_end":8319828,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ If you’re wanting to copy the contents of one file to another and you’re","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8319829,"byte_end":8319909,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ working with filesystem paths, see the [`fs::copy`] function.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8319910,"byte_end":8319975,"line_start":107,"line_end":107,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8319976,"byte_end":8319979,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::copy`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8319980,"byte_end":8320039,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320040,"byte_end":8320043,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`std::io::copy`]: https://doc.rust-lang.org/std/io/fn.copy.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320044,"byte_end":8320112,"line_start":111,"line_end":111,"column_start":1,"column_end":69}},{"value":"/ [`fs::copy`]: ../fs/fn.copy.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320113,"byte_end":8320149,"line_start":112,"line_end":112,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320150,"byte_end":8320153,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320154,"byte_end":8320166,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320167,"byte_end":8320170,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This function will return an error immediately if any call to `read` or","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320171,"byte_end":8320246,"line_start":116,"line_end":116,"column_start":1,"column_end":76}},{"value":"/ `write` returns an error. All instances of `ErrorKind::Interrupted` are","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320247,"byte_end":8320322,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ handled by this function and the underlying operation is retried.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320323,"byte_end":8320392,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320393,"byte_end":8320396,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320397,"byte_end":8320411,"line_start":120,"line_end":120,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320412,"byte_end":8320415,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320416,"byte_end":8320423,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320424,"byte_end":8320498,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320499,"byte_end":8320504,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320505,"byte_end":8320527,"line_start":125,"line_end":125,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320528,"byte_end":8320531,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ let mut reader: &[u8] = b\"hello\";","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320532,"byte_end":8320569,"line_start":127,"line_end":127,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::stdout();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320570,"byte_end":8320604,"line_start":128,"line_end":128,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320605,"byte_end":8320608,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ io::copy(&mut reader, &mut writer).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320609,"byte_end":8320655,"line_start":130,"line_end":130,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320656,"byte_end":8320661,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320662,"byte_end":8320679,"line_start":132,"line_end":132,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320680,"byte_end":8320687,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"cfg(all(feature = \"unstable\", not(feature = \"docs\")))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8320688,"byte_end":8320744,"line_start":134,"line_end":134,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":3998},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323082,"byte_end":8323088,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":4000}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`Seek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322258,"byte_end":8322321,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/ [`Seek`] implementation.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322322,"byte_end":8322350,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322351,"byte_end":8322354,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322355,"byte_end":8322423,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`Read`] and/or [`Write`],","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322424,"byte_end":8322496,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322497,"byte_end":8322576,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322577,"byte_end":8322602,"line_start":12,"line_end":12,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322603,"byte_end":8322606,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322607,"byte_end":8322681,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322682,"byte_end":8322749,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322750,"byte_end":8322783,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322784,"byte_end":8322787,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Seek`]: trait.Seek.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322788,"byte_end":8322817,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ [`Read`]: trait.Read.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322818,"byte_end":8322847,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ [`Write`]: trait.Write.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322848,"byte_end":8322879,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/ [`Vec`]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322880,"byte_end":8322942,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8322943,"byte_end":8323006,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323007,"byte_end":8323037,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323675,"byte_end":8323678,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"fn (inner: T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323152,"byte_end":8323227,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323232,"byte_end":8323235,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323240,"byte_end":8323314,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323319,"byte_end":8323387,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323392,"byte_end":8323430,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323435,"byte_end":8323438,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323443,"byte_end":8323457,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323462,"byte_end":8323465,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323470,"byte_end":8323477,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323482,"byte_end":8323512,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323517,"byte_end":8323520,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323525,"byte_end":8323564,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323569,"byte_end":8323617,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323622,"byte_end":8323651,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323656,"byte_end":8323663,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3802},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324137,"byte_end":8324147,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323790,"byte_end":8323847,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323852,"byte_end":8323855,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323860,"byte_end":8323874,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323879,"byte_end":8323882,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323887,"byte_end":8323894,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323899,"byte_end":8323929,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323934,"byte_end":8323937,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323942,"byte_end":8323981,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323986,"byte_end":8324034,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324039,"byte_end":8324068,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324073,"byte_end":8324076,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324081,"byte_end":8324113,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324118,"byte_end":8324125,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3803},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324557,"byte_end":8324564,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324204,"byte_end":8324264,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324269,"byte_end":8324272,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324277,"byte_end":8324291,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324296,"byte_end":8324299,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324304,"byte_end":8324311,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324316,"byte_end":8324346,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324351,"byte_end":8324354,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324359,"byte_end":8324398,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324403,"byte_end":8324451,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324456,"byte_end":8324485,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324490,"byte_end":8324493,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324498,"byte_end":8324533,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324538,"byte_end":8324545,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3804},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325138,"byte_end":8325145,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324620,"byte_end":8324688,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324693,"byte_end":8324696,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324701,"byte_end":8324774,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324779,"byte_end":8324841,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324846,"byte_end":8324849,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324854,"byte_end":8324868,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324873,"byte_end":8324876,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324881,"byte_end":8324888,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324893,"byte_end":8324923,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324928,"byte_end":8324931,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324936,"byte_end":8324979,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8324984,"byte_end":8325032,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325037,"byte_end":8325066,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325071,"byte_end":8325074,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325079,"byte_end":8325114,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325119,"byte_end":8325126,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3805},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325866,"byte_end":8325874,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325209,"byte_end":8325257,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325262,"byte_end":8325265,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325270,"byte_end":8325284,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325289,"byte_end":8325292,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325297,"byte_end":8325304,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325309,"byte_end":8325383,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325388,"byte_end":8325393,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325398,"byte_end":8325428,"line_start":112,"line_end":112,"column_start":5,"column_end":35}},{"value":"/ use async_std::io::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325433,"byte_end":8325467,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/ use async_std::io::SeekFrom;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325472,"byte_end":8325504,"line_start":114,"line_end":114,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325509,"byte_end":8325512,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325517,"byte_end":8325569,"line_start":116,"line_end":116,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325574,"byte_end":8325577,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325582,"byte_end":8325617,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325622,"byte_end":8325625,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325630,"byte_end":8325673,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325678,"byte_end":8325713,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325718,"byte_end":8325721,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325726,"byte_end":8325770,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325775,"byte_end":8325810,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325815,"byte_end":8325820,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325825,"byte_end":8325842,"line_start":126,"line_end":126,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325847,"byte_end":8325854,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3806},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326344,"byte_end":8326356,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"fn (&mut self, pos: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325932,"byte_end":8325969,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325974,"byte_end":8325977,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8325982,"byte_end":8325996,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326001,"byte_end":8326004,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326009,"byte_end":8326016,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ use async_std::io::Cursor;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326021,"byte_end":8326051,"line_start":137,"line_end":137,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326056,"byte_end":8326059,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326064,"byte_end":8326116,"line_start":139,"line_end":139,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326121,"byte_end":8326124,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326129,"byte_end":8326164,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326169,"byte_end":8326172,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326177,"byte_end":8326202,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326207,"byte_end":8326242,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326247,"byte_end":8326250,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326255,"byte_end":8326280,"line_start":146,"line_end":146,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326285,"byte_end":8326320,"line_start":147,"line_end":147,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326325,"byte_end":8326332,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":3841},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329900,"byte_end":8329905,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"fn () -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a reader that contains no data.","sig":null,"attributes":[{"value":"/ Creates a reader that contains no data.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329505,"byte_end":8329548,"line_start":7,"line_end":7,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329549,"byte_end":8329552,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329553,"byte_end":8329567,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329568,"byte_end":8329571,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329572,"byte_end":8329583,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329584,"byte_end":8329658,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329659,"byte_end":8329664,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329665,"byte_end":8329687,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329688,"byte_end":8329718,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329719,"byte_end":8329722,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329723,"byte_end":8329752,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329753,"byte_end":8329786,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_end(&mut buf).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329787,"byte_end":8329827,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329828,"byte_end":8329831,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(buf.is_empty());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329832,"byte_end":8329860,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329861,"byte_end":8329866,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329867,"byte_end":8329884,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329885,"byte_end":8329892,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3842},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8330123,"byte_end":8330128,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3843}],"decl_id":null,"docs":" A reader that contains no data.","sig":null,"attributes":[{"value":"/ A reader that contains no data.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329949,"byte_end":8329984,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329985,"byte_end":8329988,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`empty`] function. See its","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8329989,"byte_end":8330050,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/ documentation for more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8330051,"byte_end":8330078,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8330079,"byte_end":8330082,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`empty`]: fn.empty.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8330083,"byte_end":8330111,"line_start":34,"line_end":34,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3861},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331373,"byte_end":8331379,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"fn (byte: u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8330854,"byte_end":8330923,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8330924,"byte_end":8330927,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with the given byte.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8330928,"byte_end":8331024,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331025,"byte_end":8331028,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331029,"byte_end":8331044,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331045,"byte_end":8331048,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331049,"byte_end":8331060,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331061,"byte_end":8331135,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331136,"byte_end":8331141,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331142,"byte_end":8331164,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331165,"byte_end":8331195,"line_start":17,"line_end":17,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331196,"byte_end":8331199,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331200,"byte_end":8331228,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ io::repeat(0b101).read_exact(&mut buffer).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331229,"byte_end":8331282,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331283,"byte_end":8331286,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331287,"byte_end":8331333,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331334,"byte_end":8331339,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331340,"byte_end":8331357,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331358,"byte_end":8331365,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3862},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331649,"byte_end":8331655,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3863}],"decl_id":null,"docs":" A reader which yields one byte over and over and over and over and over and...","sig":null,"attributes":[{"value":"/ A reader which yields one byte over and over and over and over and over and...","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331425,"byte_end":8331507,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331508,"byte_end":8331511,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`repeat`] function. See its","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331512,"byte_end":8331574,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ documentation for more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331575,"byte_end":8331602,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331603,"byte_end":8331606,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`repeat`]: fn.repeat.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331607,"byte_end":8331637,"line_start":35,"line_end":35,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":3877},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332531,"byte_end":8332535,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"fn () -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates a writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ Creates a writer that consumes and drops all data.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332189,"byte_end":8332243,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332244,"byte_end":8332247,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332248,"byte_end":8332262,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332263,"byte_end":8332266,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332267,"byte_end":8332278,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332279,"byte_end":8332353,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332354,"byte_end":8332359,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332360,"byte_end":8332382,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332383,"byte_end":8332413,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332414,"byte_end":8332417,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332418,"byte_end":8332450,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/ writer.write(b\"hello world\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332451,"byte_end":8332491,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332492,"byte_end":8332497,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332498,"byte_end":8332515,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332516,"byte_end":8332523,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3878},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332763,"byte_end":8332767,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3879}],"decl_id":null,"docs":" A writer that consumes and drops all data.","sig":null,"attributes":[{"value":"/ A writer that consumes and drops all data.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332577,"byte_end":8332623,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332624,"byte_end":8332627,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This writer is constructed by the [`sink`] function. See its documentation","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332628,"byte_end":8332706,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ for more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332707,"byte_end":8332720,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332721,"byte_end":8332724,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`sink`]: fn.sink.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332725,"byte_end":8332751,"line_start":31,"line_end":31,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":4035},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8334211,"byte_end":8334218,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"name":"timeout","qualname":"::io::timeout::timeout","value":"fn <F, T> (dur: Duration, f: F) -> io::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Awaits an I/O future or times out after a duration of time.","sig":null,"attributes":[{"value":"/ Awaits an I/O future or times out after a duration of time.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8333598,"byte_end":8333661,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8333662,"byte_end":8333665,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ If you want to await a non I/O future consider using","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8333666,"byte_end":8333722,"line_start":13,"line_end":13,"column_start":1,"column_end":57}},{"value":"/ [`future::timeout`](../future/fn.timeout.html) instead.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8333723,"byte_end":8333782,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8333783,"byte_end":8333786,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8333787,"byte_end":8333801,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8333802,"byte_end":8333805,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8333806,"byte_end":8333819,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8333820,"byte_end":8333894,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8333895,"byte_end":8333900,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8333901,"byte_end":8333929,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8333930,"byte_end":8333933,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8333934,"byte_end":8333956,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8333957,"byte_end":8333960,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ io::timeout(Duration::from_secs(5), async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8333961,"byte_end":8334008,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/     let stdin = io::stdin();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8334009,"byte_end":8334041,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/     let mut line = String::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8334042,"byte_end":8334079,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     let n = stdin.read_line(&mut line).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8334080,"byte_end":8334130,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8334131,"byte_end":8334145,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8334146,"byte_end":8334152,"line_start":30,"line_end":30,"column_start":1,"column_end":7}},{"value":"/ .await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8334153,"byte_end":8334165,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8334166,"byte_end":8334171,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8334172,"byte_end":8334189,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8334190,"byte_end":8334197,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4057},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336165,"byte_end":8336171,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stderr","qualname":"::io::stderr::stderr","value":"fn () -> Stderr","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard error of the current process.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335396,"byte_end":8335469,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335470,"byte_end":8335473,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stderr`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335474,"byte_end":8335535,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335536,"byte_end":8335539,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stderr`]: https://doc.rust-lang.org/std/io/fn.stderr.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335540,"byte_end":8335612,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335613,"byte_end":8335616,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335617,"byte_end":8335664,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335665,"byte_end":8335668,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335669,"byte_end":8335760,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335761,"byte_end":8335853,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335854,"byte_end":8335867,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335868,"byte_end":8335871,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335872,"byte_end":8335886,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335887,"byte_end":8335890,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335891,"byte_end":8335904,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335905,"byte_end":8335979,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335980,"byte_end":8335985,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8335986,"byte_end":8336008,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336009,"byte_end":8336039,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336040,"byte_end":8336043,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stderr = io::stderr();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336044,"byte_end":8336078,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stderr.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336079,"byte_end":8336125,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336126,"byte_end":8336131,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336132,"byte_end":8336149,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336150,"byte_end":8336157,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4120},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336801,"byte_end":8336807,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stderr","qualname":"::io::stderr::Stderr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard error of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard error of the current process.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336329,"byte_end":8336387,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336388,"byte_end":8336391,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stderr`] function. See its documentation for","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336392,"byte_end":8336472,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336473,"byte_end":8336482,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336483,"byte_end":8336486,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336487,"byte_end":8336534,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336535,"byte_end":8336538,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336539,"byte_end":8336630,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336631,"byte_end":8336723,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336724,"byte_end":8336737,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336738,"byte_end":8336741,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stderr`]: fn.stderr.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8336742,"byte_end":8336772,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":4078},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342387,"byte_end":8342392,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"stdin","qualname":"::io::stdin::stdin","value":"fn () -> Stdin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard input of the current process.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8341632,"byte_end":8341705,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8341706,"byte_end":8341709,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdin`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8341710,"byte_end":8341770,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8341771,"byte_end":8341774,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdin`]: https://doc.rust-lang.org/std/io/fn.stdin.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8341775,"byte_end":8341845,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8341846,"byte_end":8341849,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8341850,"byte_end":8341897,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8341898,"byte_end":8341901,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8341902,"byte_end":8341993,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8341994,"byte_end":8342086,"line_start":19,"line_end":19,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342087,"byte_end":8342100,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342101,"byte_end":8342104,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342105,"byte_end":8342119,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342120,"byte_end":8342123,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342124,"byte_end":8342137,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342138,"byte_end":8342212,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342213,"byte_end":8342218,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342219,"byte_end":8342241,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342242,"byte_end":8342245,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342246,"byte_end":8342274,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ let mut line = String::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342275,"byte_end":8342308,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342309,"byte_end":8342347,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342348,"byte_end":8342353,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342354,"byte_end":8342371,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342372,"byte_end":8342379,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4154},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8343044,"byte_end":8343049,"line_start":57,"line_end":57,"column_start":12,"column_end":17},"name":"Stdin","qualname":"::io::stdin::Stdin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard input of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard input of the current process.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342575,"byte_end":8342633,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342634,"byte_end":8342637,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This reader is created by the [`stdin`] function. See its documentation for","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342638,"byte_end":8342717,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342718,"byte_end":8342727,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342728,"byte_end":8342731,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342732,"byte_end":8342779,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342780,"byte_end":8342783,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342784,"byte_end":8342875,"line_start":51,"line_end":51,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342876,"byte_end":8342968,"line_start":52,"line_end":52,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342969,"byte_end":8342982,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342983,"byte_end":8342986,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`stdin`]: fn.stdin.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8342987,"byte_end":8343015,"line_start":55,"line_end":55,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4080},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8344371,"byte_end":8344380,"line_start":112,"line_end":112,"column_start":18,"column_end":27},"name":"read_line","qualname":"<Stdin>::read_line","value":"fn (&self, buf: &mut String) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Reads a line of input into the specified buffer.","sig":null,"attributes":[{"value":"/ Reads a line of input into the specified buffer.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8343966,"byte_end":8344018,"line_start":97,"line_end":97,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8344023,"byte_end":8344026,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8344031,"byte_end":8344045,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8344050,"byte_end":8344053,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8344058,"byte_end":8344071,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8344076,"byte_end":8344150,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8344155,"byte_end":8344160,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/ use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8344165,"byte_end":8344187,"line_start":104,"line_end":104,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8344192,"byte_end":8344195,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let stdin = io::stdin();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8344200,"byte_end":8344228,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/ let mut line = String::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8344233,"byte_end":8344266,"line_start":107,"line_end":107,"column_start":5,"column_end":38}},{"value":"/ stdin.read_line(&mut line).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8344271,"byte_end":8344309,"line_start":108,"line_end":108,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8344314,"byte_end":8344319,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8344324,"byte_end":8344341,"line_start":110,"line_end":110,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8344346,"byte_end":8344353,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":4095},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdio.rs","byte_start":8348638,"byte_end":8348644,"line_start":10,"line_end":10,"column_start":14,"column_end":20},"name":"_print","qualname":"::io::stdio::_print","value":"fn (args: fmt::Arguments<'_>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4098},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdio.rs","byte_start":8348815,"byte_end":8348822,"line_start":17,"line_end":17,"column_start":14,"column_end":21},"name":"_eprint","qualname":"::io::stdio::_eprint","value":"fn (args: fmt::Arguments<'_>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4113},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349895,"byte_end":8349901,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"stdout","qualname":"::io::stdout::stdout","value":"fn () -> Stdout","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ Constructs a new handle to the standard output of the current process.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349125,"byte_end":8349199,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349200,"byte_end":8349203,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::io::stdout`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349204,"byte_end":8349265,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349266,"byte_end":8349269,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`std::io::stdout`]: https://doc.rust-lang.org/std/io/fn.stdout.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349270,"byte_end":8349342,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349343,"byte_end":8349346,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349347,"byte_end":8349394,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349395,"byte_end":8349398,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349399,"byte_end":8349490,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349491,"byte_end":8349583,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349584,"byte_end":8349597,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349598,"byte_end":8349601,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349602,"byte_end":8349616,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349617,"byte_end":8349620,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349621,"byte_end":8349634,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349635,"byte_end":8349709,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349710,"byte_end":8349715,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349716,"byte_end":8349738,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349739,"byte_end":8349769,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349770,"byte_end":8349773,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let mut stdout = io::stdout();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349774,"byte_end":8349808,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ stdout.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349809,"byte_end":8349855,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349856,"byte_end":8349861,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349862,"byte_end":8349879,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8349880,"byte_end":8349887,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4189},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8350532,"byte_end":8350538,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Stdout","qualname":"::io::stdout::Stdout","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to the standard output of the current process.","sig":null,"attributes":[{"value":"/ A handle to the standard output of the current process.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8350059,"byte_end":8350118,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8350119,"byte_end":8350122,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This writer is created by the [`stdout`] function. See its documentation","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8350123,"byte_end":8350199,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ for more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8350200,"byte_end":8350213,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8350214,"byte_end":8350217,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ### Note: Windows Portability Consideration","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8350218,"byte_end":8350265,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8350266,"byte_end":8350269,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When operating in a console, the Windows implementation of this stream does not support","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8350270,"byte_end":8350361,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ non-UTF-8 byte sequences. Attempting to write bytes that are not valid UTF-8 will return","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8350362,"byte_end":8350454,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ an error.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8350455,"byte_end":8350468,"line_start":50,"line_end":50,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8350469,"byte_end":8350472,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ [`stdout`]: fn.stdout.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8350473,"byte_end":8350503,"line_start":52,"line_end":52,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":2930},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"os","qualname":"::os","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/mod.rs","parent":null,"children":[{"krate":0,"index":4223}],"decl_id":null,"docs":" OS-specific extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":16048,"byte_end":16071,"line_start":208,"line_end":208,"column_start":13,"column_end":36}},{"value":"! OS-specific extensions.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/mod.rs","byte_start":8182688,"byte_end":8182715,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":4223},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::os::unix","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/mod.rs","parent":null,"children":[{"krate":0,"index":4224},{"krate":0,"index":4230},{"krate":0,"index":4240}],"decl_id":null,"docs":" Platform-specific extensions for Unix platforms.\n","sig":null,"attributes":[{"value":"cfg(any(unix, feature = \"docs\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":15021,"byte_end":15056,"line_start":158,"line_end":158,"column_start":13,"column_end":48}},{"value":"! Platform-specific extensions for Unix platforms.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/mod.rs","byte_start":8355153,"byte_end":8355205,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":4224},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::os::unix::io","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/io.rs","parent":null,"children":[{"krate":0,"index":4225}],"decl_id":null,"docs":" Unix-specific I/O extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":16048,"byte_end":16071,"line_start":208,"line_end":208,"column_start":13,"column_end":36}},{"value":"! Unix-specific I/O extensions.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/io.rs","byte_start":8355288,"byte_end":8355321,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":4230},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::os::unix::fs","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","parent":null,"children":[{"krate":0,"index":4231},{"krate":0,"index":4232},{"krate":0,"index":4233},{"krate":0,"index":4234},{"krate":0,"index":4396}],"decl_id":null,"docs":" Unix-specific filesystem extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":16457,"byte_end":16484,"line_start":232,"line_end":232,"column_start":13,"column_end":40}},{"value":"! Unix-specific filesystem extensions.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8357526,"byte_end":8357566,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":4234},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8358187,"byte_end":8358194,"line_start":26,"line_end":26,"column_start":14,"column_end":21},"name":"symlink","qualname":"::os::unix::fs::symlink","value":"fn <P, Q> (src: P, dst: Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new symbolic link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a new symbolic link on the filesystem.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8357640,"byte_end":8357690,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8357691,"byte_end":8357694,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a symbolic link pointing to the `src` path.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8357695,"byte_end":8357765,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8357766,"byte_end":8357769,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::os::unix::fs::symlink`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8357770,"byte_end":8357842,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8357843,"byte_end":8357846,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::fs::symlink`]: https://doc.rust-lang.org/std/os/unix/fs/fn.symlink.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8357847,"byte_end":8357939,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8357940,"byte_end":8357943,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8357944,"byte_end":8357958,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8357959,"byte_end":8357962,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8357963,"byte_end":8357976,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8357977,"byte_end":8358051,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8358052,"byte_end":8358057,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::fs::symlink;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8358058,"byte_end":8358099,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8358100,"byte_end":8358103,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ symlink(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8358104,"byte_end":8358141,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8358142,"byte_end":8358147,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8358148,"byte_end":8358165,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/fs.rs","byte_start":8358166,"byte_end":8358173,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":4240},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::os::unix::net","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/mod.rs","parent":null,"children":[{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4245},{"krate":0,"index":4246},{"krate":0,"index":4299},{"krate":0,"index":4344},{"krate":0,"index":4411}],"decl_id":null,"docs":" Unix-specific networking extensions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":16457,"byte_end":16484,"line_start":232,"line_end":232,"column_start":13,"column_end":40}},{"value":"! Unix-specific networking extensions.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/mod.rs","byte_start":8360039,"byte_end":8360079,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4259},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363885,"byte_end":8363897,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"UnixDatagram","qualname":"::os::unix::net::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":4260}],"decl_id":null,"docs":" A Unix datagram socket.","sig":null,"attributes":[{"value":"/ A Unix datagram socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8362996,"byte_end":8363023,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363024,"byte_end":8363027,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ After creating a `UnixDatagram` by [`bind`]ing it to a path, data can be [sent to] and","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363028,"byte_end":8363118,"line_start":16,"line_end":16,"column_start":1,"column_end":91}},{"value":"/ [received from] any other socket address.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363119,"byte_end":8363164,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363165,"byte_end":8363168,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixDatagram`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363169,"byte_end":8363243,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363244,"byte_end":8363247,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixDatagram`]:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363248,"byte_end":8363289,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixDatagram.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363290,"byte_end":8363360,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363361,"byte_end":8363387,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363388,"byte_end":8363426,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363427,"byte_end":8363457,"line_start":25,"line_end":25,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363458,"byte_end":8363461,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363462,"byte_end":8363477,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363478,"byte_end":8363481,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363482,"byte_end":8363495,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363496,"byte_end":8363570,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363571,"byte_end":8363576,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363577,"byte_end":8363624,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363625,"byte_end":8363628,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket1\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363629,"byte_end":8363688,"line_start":34,"line_end":34,"column_start":1,"column_end":60}},{"value":"/ socket.send_to(b\"hello world\", \"/tmp/socket2\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363689,"byte_end":8363747,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363748,"byte_end":8363751,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363752,"byte_end":8363786,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363787,"byte_end":8363841,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363842,"byte_end":8363847,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363848,"byte_end":8363865,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363866,"byte_end":8363873,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4263},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364588,"byte_end":8364592,"line_start":68,"line_end":68,"column_start":18,"column_end":22},"name":"bind","qualname":"<UnixDatagram>::bind","value":"fn <P> (path: P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram socket bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram socket bound to the given path.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364202,"byte_end":8364261,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364266,"byte_end":8364269,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364274,"byte_end":8364288,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364293,"byte_end":8364296,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364301,"byte_end":8364314,"line_start":59,"line_end":59,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364319,"byte_end":8364393,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364398,"byte_end":8364403,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364408,"byte_end":8364455,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364460,"byte_end":8364463,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364468,"byte_end":8364526,"line_start":64,"line_end":64,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364531,"byte_end":8364536,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364541,"byte_end":8364558,"line_start":66,"line_end":66,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364563,"byte_end":8364570,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4267},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365236,"byte_end":8365243,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"fn () -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram which is not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram which is not bound to any address.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364869,"byte_end":8364931,"line_start":76,"line_end":76,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364936,"byte_end":8364939,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364944,"byte_end":8364958,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364963,"byte_end":8364966,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364971,"byte_end":8364984,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8364989,"byte_end":8365063,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365068,"byte_end":8365073,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365078,"byte_end":8365125,"line_start":83,"line_end":83,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365130,"byte_end":8365133,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365138,"byte_end":8365180,"line_start":85,"line_end":85,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365185,"byte_end":8365190,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365195,"byte_end":8365212,"line_start":87,"line_end":87,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365217,"byte_end":8365224,"line_start":88,"line_end":88,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4268},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365809,"byte_end":8365813,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"fn () -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365375,"byte_end":8365424,"line_start":94,"line_end":94,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365429,"byte_end":8365432,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Returns two sockets which are connected to each other.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365437,"byte_end":8365495,"line_start":96,"line_end":96,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365500,"byte_end":8365503,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365508,"byte_end":8365522,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365527,"byte_end":8365530,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365535,"byte_end":8365548,"line_start":100,"line_end":100,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365553,"byte_end":8365627,"line_start":101,"line_end":101,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365632,"byte_end":8365637,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365642,"byte_end":8365689,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365694,"byte_end":8365697,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let (socket1, socket2) = UnixDatagram::pair()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365702,"byte_end":8365753,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365758,"byte_end":8365763,"line_start":106,"line_end":106,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365768,"byte_end":8365785,"line_start":107,"line_end":107,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8365790,"byte_end":8365797,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4269},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366696,"byte_end":8366703,"line_start":137,"line_end":137,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixDatagram>::connect","value":"fn <P> (&self, path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366015,"byte_end":8366064,"line_start":116,"line_end":116,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366069,"byte_end":8366072,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The [`send`] method may be used to send data to the specified address. [`recv`] and","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366077,"byte_end":8366164,"line_start":118,"line_end":118,"column_start":5,"column_end":92}},{"value":"/ [`recv_from`] will only receive data from that address.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366169,"byte_end":8366228,"line_start":119,"line_end":119,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366233,"byte_end":8366236,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366241,"byte_end":8366267,"line_start":121,"line_end":121,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366272,"byte_end":8366298,"line_start":122,"line_end":122,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366303,"byte_end":8366339,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366344,"byte_end":8366347,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366352,"byte_end":8366366,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366371,"byte_end":8366374,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366379,"byte_end":8366392,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366397,"byte_end":8366471,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366476,"byte_end":8366481,"line_start":129,"line_end":129,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366486,"byte_end":8366533,"line_start":130,"line_end":130,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366538,"byte_end":8366541,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366546,"byte_end":8366588,"line_start":132,"line_end":132,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366593,"byte_end":8366634,"line_start":133,"line_end":133,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366639,"byte_end":8366644,"line_start":134,"line_end":134,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366649,"byte_end":8366666,"line_start":135,"line_end":135,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366671,"byte_end":8366678,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4273},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367307,"byte_end":8367317,"line_start":157,"line_end":157,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket.","sig":null,"attributes":[{"value":"/ Returns the address of this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366906,"byte_end":8366945,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366950,"byte_end":8366953,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366958,"byte_end":8366972,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366977,"byte_end":8366980,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8366985,"byte_end":8366998,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367003,"byte_end":8367077,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367082,"byte_end":8367087,"line_start":149,"line_end":149,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367092,"byte_end":8367139,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367144,"byte_end":8367147,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367152,"byte_end":8367210,"line_start":152,"line_end":152,"column_start":5,"column_end":63}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367215,"byte_end":8367251,"line_start":153,"line_end":153,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367256,"byte_end":8367261,"line_start":154,"line_end":154,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367266,"byte_end":8367283,"line_start":155,"line_end":155,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367288,"byte_end":8367295,"line_start":156,"line_end":156,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4274},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367964,"byte_end":8367973,"line_start":180,"line_end":180,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367408,"byte_end":8367454,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367459,"byte_end":8367462,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect the socket to a peer.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367467,"byte_end":8367528,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367533,"byte_end":8367536,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367541,"byte_end":8367573,"line_start":165,"line_end":165,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367578,"byte_end":8367581,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367586,"byte_end":8367600,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367605,"byte_end":8367608,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367613,"byte_end":8367626,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367631,"byte_end":8367705,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367710,"byte_end":8367715,"line_start":171,"line_end":171,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367720,"byte_end":8367767,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367772,"byte_end":8367775,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367780,"byte_end":8367822,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367827,"byte_end":8367868,"line_start":175,"line_end":175,"column_start":5,"column_end":46}},{"value":"/ let peer = socket.peer_addr()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367873,"byte_end":8367908,"line_start":176,"line_end":176,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367913,"byte_end":8367918,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367923,"byte_end":8367940,"line_start":178,"line_end":178,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8367945,"byte_end":8367952,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4275},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368607,"byte_end":8368616,"line_start":201,"line_end":201,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"fn (&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368063,"byte_end":8368097,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368102,"byte_end":8368105,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the address from where the data came.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368110,"byte_end":8368200,"line_start":186,"line_end":186,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368205,"byte_end":8368208,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368213,"byte_end":8368227,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368232,"byte_end":8368235,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368240,"byte_end":8368253,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368258,"byte_end":8368332,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368337,"byte_end":8368342,"line_start":192,"line_end":192,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368347,"byte_end":8368394,"line_start":193,"line_end":193,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368399,"byte_end":8368402,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368407,"byte_end":8368449,"line_start":195,"line_end":195,"column_start":5,"column_end":47}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368454,"byte_end":8368486,"line_start":196,"line_end":196,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368491,"byte_end":8368545,"line_start":197,"line_end":197,"column_start":5,"column_end":59}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368550,"byte_end":8368555,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368560,"byte_end":8368577,"line_start":199,"line_end":199,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368582,"byte_end":8368589,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4278},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369236,"byte_end":8369240,"line_start":222,"line_end":222,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368730,"byte_end":8368764,"line_start":205,"line_end":205,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368769,"byte_end":8368772,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368777,"byte_end":8368826,"line_start":207,"line_end":207,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368831,"byte_end":8368834,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368839,"byte_end":8368853,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368858,"byte_end":8368861,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368866,"byte_end":8368879,"line_start":211,"line_end":211,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368884,"byte_end":8368958,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368963,"byte_end":8368968,"line_start":213,"line_end":213,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8368973,"byte_end":8369020,"line_start":214,"line_end":214,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369025,"byte_end":8369028,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369033,"byte_end":8369091,"line_start":216,"line_end":216,"column_start":5,"column_end":63}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369096,"byte_end":8369128,"line_start":217,"line_end":217,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369133,"byte_end":8369174,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369179,"byte_end":8369184,"line_start":219,"line_end":219,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369189,"byte_end":8369206,"line_start":220,"line_end":220,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369211,"byte_end":8369218,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4281},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369827,"byte_end":8369834,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"fn <P> (&self, buf: &[u8], path: P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369335,"byte_end":8369389,"line_start":226,"line_end":226,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369394,"byte_end":8369397,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369402,"byte_end":8369454,"line_start":228,"line_end":228,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369459,"byte_end":8369462,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369467,"byte_end":8369481,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369486,"byte_end":8369489,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369494,"byte_end":8369507,"line_start":232,"line_end":232,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369512,"byte_end":8369586,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369591,"byte_end":8369596,"line_start":234,"line_end":234,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369601,"byte_end":8369648,"line_start":235,"line_end":235,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369653,"byte_end":8369656,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369661,"byte_end":8369703,"line_start":237,"line_end":237,"column_start":5,"column_end":47}},{"value":"/ socket.send_to(b\"hello world\", \"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369708,"byte_end":8369765,"line_start":238,"line_end":238,"column_start":5,"column_end":62}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369770,"byte_end":8369775,"line_start":239,"line_end":239,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369780,"byte_end":8369797,"line_start":240,"line_end":240,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369802,"byte_end":8369809,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4285},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370484,"byte_end":8370488,"line_start":263,"line_end":263,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"fn (&self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8369968,"byte_end":8370018,"line_start":246,"line_end":246,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370023,"byte_end":8370026,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370031,"byte_end":8370083,"line_start":248,"line_end":248,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370088,"byte_end":8370091,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370096,"byte_end":8370110,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370115,"byte_end":8370118,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370123,"byte_end":8370136,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370141,"byte_end":8370215,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370220,"byte_end":8370225,"line_start":254,"line_end":254,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370230,"byte_end":8370277,"line_start":255,"line_end":255,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370282,"byte_end":8370285,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370290,"byte_end":8370332,"line_start":257,"line_end":257,"column_start":5,"column_end":47}},{"value":"/ socket.connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370337,"byte_end":8370378,"line_start":258,"line_end":258,"column_start":5,"column_end":46}},{"value":"/ socket.send(b\"hello world\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370383,"byte_end":8370422,"line_start":259,"line_end":259,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370427,"byte_end":8370432,"line_start":260,"line_end":260,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370437,"byte_end":8370454,"line_start":261,"line_end":261,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370459,"byte_end":8370466,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4288},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8371304,"byte_end":8371312,"line_start":287,"line_end":287,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shut down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shut down the read, write, or both halves of this connection.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370579,"byte_end":8370644,"line_start":267,"line_end":267,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370649,"byte_end":8370652,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the specified portions to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370657,"byte_end":8370747,"line_start":269,"line_end":269,"column_start":5,"column_end":95}},{"value":"/ immediately return with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370752,"byte_end":8370841,"line_start":270,"line_end":270,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370846,"byte_end":8370849,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370854,"byte_end":8370924,"line_start":272,"line_end":272,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370929,"byte_end":8370932,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370937,"byte_end":8370952,"line_start":274,"line_end":274,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370957,"byte_end":8370960,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370965,"byte_end":8370978,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8370983,"byte_end":8371057,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8371062,"byte_end":8371067,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixDatagram;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8371072,"byte_end":8371119,"line_start":279,"line_end":279,"column_start":5,"column_end":52}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8371124,"byte_end":8371151,"line_start":280,"line_end":280,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8371156,"byte_end":8371159,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8371164,"byte_end":8371206,"line_start":282,"line_end":282,"column_start":5,"column_end":47}},{"value":"/ socket.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8371211,"byte_end":8371248,"line_start":283,"line_end":283,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8371253,"byte_end":8371258,"line_start":284,"line_end":284,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8371263,"byte_end":8371280,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8371285,"byte_end":8371292,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4319},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374295,"byte_end":8374307,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"UnixListener","qualname":"::os::unix::net::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":4320}],"decl_id":null,"docs":" A Unix domain socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A Unix domain socket server, listening for connections.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373203,"byte_end":8373262,"line_start":19,"line_end":19,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373263,"byte_end":8373266,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ After creating a `UnixListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373267,"byte_end":8373365,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"/ connections. These can be accepted by awaiting elements from the async stream of [`incoming`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373366,"byte_end":8373463,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ connections.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373464,"byte_end":8373480,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373481,"byte_end":8373484,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373485,"byte_end":8373541,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373542,"byte_end":8373545,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixListener`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373546,"byte_end":8373620,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373621,"byte_end":8373624,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixListener`]:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373625,"byte_end":8373666,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixListener.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373667,"byte_end":8373737,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373738,"byte_end":8373764,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373765,"byte_end":8373799,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373800,"byte_end":8373803,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373804,"byte_end":8373818,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373819,"byte_end":8373822,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373823,"byte_end":8373836,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373837,"byte_end":8373911,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373912,"byte_end":8373917,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373918,"byte_end":8373965,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373966,"byte_end":8373996,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8373997,"byte_end":8374000,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374001,"byte_end":8374061,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374062,"byte_end":8374105,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374106,"byte_end":8374109,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374110,"byte_end":8374162,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374163,"byte_end":8374196,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374197,"byte_end":8374245,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374246,"byte_end":8374251,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374252,"byte_end":8374257,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374258,"byte_end":8374275,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374276,"byte_end":8374283,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4322},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374764,"byte_end":8374768,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UnixListener>::bind","value":"fn <P> (path: P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Unix datagram listener bound to the given path.","sig":null,"attributes":[{"value":"/ Creates a Unix datagram listener bound to the given path.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374374,"byte_end":8374435,"line_start":57,"line_end":57,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374440,"byte_end":8374443,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374448,"byte_end":8374462,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374467,"byte_end":8374470,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374475,"byte_end":8374488,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374493,"byte_end":8374567,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374572,"byte_end":8374577,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374582,"byte_end":8374629,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374634,"byte_end":8374637,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374642,"byte_end":8374702,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374707,"byte_end":8374712,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374717,"byte_end":8374734,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374739,"byte_end":8374746,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4326},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375594,"byte_end":8375600,"line_start":95,"line_end":95,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"fn (&self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375050,"byte_end":8375105,"line_start":79,"line_end":79,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375110,"byte_end":8375113,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375118,"byte_end":8375210,"line_start":81,"line_end":81,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375215,"byte_end":8375218,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375223,"byte_end":8375237,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375242,"byte_end":8375245,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375250,"byte_end":8375263,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375268,"byte_end":8375342,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375347,"byte_end":8375352,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375357,"byte_end":8375404,"line_start":88,"line_end":88,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375409,"byte_end":8375412,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375417,"byte_end":8375477,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/ let (socket, addr) = listener.accept().await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375482,"byte_end":8375532,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375537,"byte_end":8375542,"line_start":92,"line_end":92,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375547,"byte_end":8375564,"line_start":93,"line_end":93,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375569,"byte_end":8375576,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4329},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376792,"byte_end":8376800,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"fn (&self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375846,"byte_end":8375891,"line_start":106,"line_end":106,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375896,"byte_end":8375899,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8375904,"byte_end":8375995,"line_start":108,"line_end":108,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376000,"byte_end":8376092,"line_start":109,"line_end":109,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376097,"byte_end":8376100,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376105,"byte_end":8376135,"line_start":111,"line_end":111,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376140,"byte_end":8376220,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376225,"byte_end":8376228,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376233,"byte_end":8376247,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376252,"byte_end":8376255,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376260,"byte_end":8376273,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376278,"byte_end":8376352,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376357,"byte_end":8376362,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376367,"byte_end":8376414,"line_start":119,"line_end":119,"column_start":5,"column_end":52}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376419,"byte_end":8376449,"line_start":120,"line_end":120,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376454,"byte_end":8376457,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376462,"byte_end":8376522,"line_start":122,"line_end":122,"column_start":5,"column_end":65}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376527,"byte_end":8376570,"line_start":123,"line_end":123,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376575,"byte_end":8376578,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376583,"byte_end":8376635,"line_start":125,"line_end":125,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376640,"byte_end":8376673,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376678,"byte_end":8376726,"line_start":127,"line_end":127,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376731,"byte_end":8376736,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376741,"byte_end":8376746,"line_start":129,"line_end":129,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376751,"byte_end":8376768,"line_start":130,"line_end":130,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376773,"byte_end":8376780,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4330},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377280,"byte_end":8377290,"line_start":150,"line_end":150,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376860,"byte_end":8376914,"line_start":136,"line_end":136,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376919,"byte_end":8376922,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376927,"byte_end":8376941,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376946,"byte_end":8376949,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376954,"byte_end":8376967,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8376972,"byte_end":8377046,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377051,"byte_end":8377056,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixListener;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377061,"byte_end":8377108,"line_start":143,"line_end":143,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377113,"byte_end":8377116,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let listener = UnixListener::bind(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377121,"byte_end":8377181,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377186,"byte_end":8377224,"line_start":146,"line_end":146,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377229,"byte_end":8377234,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377239,"byte_end":8377256,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377261,"byte_end":8377268,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4400},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8378333,"byte_end":8378341,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::os::unix::net::listener::Incoming","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of incoming Unix domain socket connections.","sig":null,"attributes":[{"value":"/ A stream of incoming Unix domain socket connections.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377718,"byte_end":8377774,"line_start":168,"line_end":168,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377775,"byte_end":8377778,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377779,"byte_end":8377877,"line_start":170,"line_end":170,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`UnixListener`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377878,"byte_end":8377937,"line_start":171,"line_end":171,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377938,"byte_end":8377941,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::Incoming`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377942,"byte_end":8378012,"line_start":173,"line_end":173,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8378013,"byte_end":8378016,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::Incoming`]: https://doc.rust-lang.org/std/os/unix/net/struct.Incoming.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8378017,"byte_end":8378117,"line_start":175,"line_end":175,"column_start":1,"column_end":101}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8378118,"byte_end":8378198,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.UnixListener.html#method.incoming","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8378199,"byte_end":8378257,"line_start":177,"line_end":177,"column_start":1,"column_end":59}},{"value":"/ [`UnixListener`]: struct.UnixListener.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8378258,"byte_end":8378304,"line_start":178,"line_end":178,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4407},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380560,"byte_end":8380570,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"UnixStream","qualname":"::os::unix::net::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":4408}],"decl_id":null,"docs":" A Unix stream socket.","sig":null,"attributes":[{"value":"/ A Unix stream socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8379891,"byte_end":8379916,"line_start":17,"line_end":17,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8379917,"byte_end":8379920,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::os::unix::net::UnixStream`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8379921,"byte_end":8379993,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8379994,"byte_end":8379997,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`std::os::unix::net::UnixStream`]:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8379998,"byte_end":8380037,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ https://doc.rust-lang.org/std/os/unix/net/struct.UnixStream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380038,"byte_end":8380106,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380107,"byte_end":8380110,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380111,"byte_end":8380125,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380126,"byte_end":8380129,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380130,"byte_end":8380143,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380144,"byte_end":8380218,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380219,"byte_end":8380224,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380225,"byte_end":8380270,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380271,"byte_end":8380301,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380302,"byte_end":8380305,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380306,"byte_end":8380369,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380370,"byte_end":8380414,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380415,"byte_end":8380418,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let mut response = Vec::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380419,"byte_end":8380453,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ stream.read_to_end(&mut response).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380454,"byte_end":8380499,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380500,"byte_end":8380505,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380506,"byte_end":8380523,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380524,"byte_end":8380531,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4366},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381027,"byte_end":8381034,"line_start":59,"line_end":59,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"fn <P> (path: P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects to the socket to the specified address.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380649,"byte_end":8380701,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380706,"byte_end":8380709,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380714,"byte_end":8380728,"line_start":48,"line_end":48,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380733,"byte_end":8380736,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380741,"byte_end":8380754,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380759,"byte_end":8380833,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380838,"byte_end":8380843,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380848,"byte_end":8380893,"line_start":53,"line_end":53,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380898,"byte_end":8380901,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380906,"byte_end":8380965,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380970,"byte_end":8380975,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380980,"byte_end":8380997,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381002,"byte_end":8381009,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4370},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381743,"byte_end":8381747,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"fn () -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381325,"byte_end":8381374,"line_start":68,"line_end":68,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381379,"byte_end":8381382,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Returns two streams which are connected to each other.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381387,"byte_end":8381445,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381450,"byte_end":8381453,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381458,"byte_end":8381472,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381477,"byte_end":8381480,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381485,"byte_end":8381498,"line_start":74,"line_end":74,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381503,"byte_end":8381577,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381582,"byte_end":8381587,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381592,"byte_end":8381637,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381642,"byte_end":8381645,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::pair()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381650,"byte_end":8381687,"line_start":79,"line_end":79,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381692,"byte_end":8381697,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381702,"byte_end":8381719,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8381724,"byte_end":8381731,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4371},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382513,"byte_end":8382523,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382084,"byte_end":8382152,"line_start":96,"line_end":96,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382157,"byte_end":8382160,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382165,"byte_end":8382179,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382184,"byte_end":8382187,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382192,"byte_end":8382205,"line_start":100,"line_end":100,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382210,"byte_end":8382284,"line_start":101,"line_end":101,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382289,"byte_end":8382294,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382299,"byte_end":8382344,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382349,"byte_end":8382352,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382357,"byte_end":8382416,"line_start":105,"line_end":105,"column_start":5,"column_end":64}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382421,"byte_end":8382457,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382462,"byte_end":8382467,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382472,"byte_end":8382489,"line_start":108,"line_end":108,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382494,"byte_end":8382501,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4372},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383043,"byte_end":8383052,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382614,"byte_end":8382683,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382688,"byte_end":8382691,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382696,"byte_end":8382710,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382715,"byte_end":8382718,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382723,"byte_end":8382736,"line_start":118,"line_end":118,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382741,"byte_end":8382815,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382820,"byte_end":8382825,"line_start":120,"line_end":120,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382830,"byte_end":8382875,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382880,"byte_end":8382883,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382888,"byte_end":8382947,"line_start":123,"line_end":123,"column_start":5,"column_end":64}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382952,"byte_end":8382987,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8382992,"byte_end":8382997,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383002,"byte_end":8383019,"line_start":126,"line_end":126,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383024,"byte_end":8383031,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4373},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383855,"byte_end":8383863,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383142,"byte_end":8383208,"line_start":132,"line_end":132,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383213,"byte_end":8383216,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the specified portions to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383221,"byte_end":8383311,"line_start":134,"line_end":134,"column_start":5,"column_end":95}},{"value":"/ immediately return with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383316,"byte_end":8383405,"line_start":135,"line_end":135,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383410,"byte_end":8383413,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383418,"byte_end":8383488,"line_start":137,"line_end":137,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383493,"byte_end":8383496,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383501,"byte_end":8383514,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383519,"byte_end":8383593,"line_start":140,"line_end":140,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383598,"byte_end":8383603,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ use async_std::os::unix::net::UnixStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383608,"byte_end":8383653,"line_start":142,"line_end":142,"column_start":5,"column_end":50}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383658,"byte_end":8383685,"line_start":143,"line_end":143,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383690,"byte_end":8383693,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ let stream = UnixStream::connect(\"/tmp/socket\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383698,"byte_end":8383757,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383762,"byte_end":8383799,"line_start":146,"line_end":146,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383804,"byte_end":8383809,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383814,"byte_end":8383831,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383836,"byte_end":8383843,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2931},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","parent":null,"children":[{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4415},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":4419},{"krate":0,"index":4420},{"krate":0,"index":4421},{"krate":0,"index":4422},{"krate":0,"index":4423},{"krate":0,"index":4424},{"krate":0,"index":4425},{"krate":0,"index":4426}],"decl_id":null,"docs":" The async prelude.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":16048,"byte_end":16071,"line_start":208,"line_end":208,"column_start":13,"column_end":36}},{"value":"! The async prelude.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8182789,"byte_end":8182811,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8182812,"byte_end":8182815,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The prelude re-exports most commonly used traits and macros from this crate.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8182816,"byte_end":8182896,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8182897,"byte_end":8182900,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8182901,"byte_end":8182915,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8182916,"byte_end":8182919,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! Import the prelude with:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8182920,"byte_end":8182948,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8182949,"byte_end":8182952,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8182953,"byte_end":8182960,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"! # #[allow(unused_imports)]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8182961,"byte_end":8182991,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8182992,"byte_end":8183022,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/prelude.rs","byte_start":8183023,"byte_end":8183030,"line_start":12,"line_end":12,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":2932},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":2933},{"krate":0,"index":2936},{"krate":0,"index":2939},{"krate":0,"index":2943},{"krate":0,"index":3032},{"krate":0,"index":4427},{"krate":0,"index":4430},{"krate":0,"index":4437},{"krate":0,"index":4438},{"krate":0,"index":4449},{"krate":0,"index":4520},{"krate":0,"index":3163},{"krate":0,"index":3206}],"decl_id":null,"docs":" Synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":16048,"byte_end":16071,"line_start":208,"line_end":208,"column_start":13,"column_end":36}},{"value":"! Synchronization primitives.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184018,"byte_end":8184049,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184050,"byte_end":8184053,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::sync`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184054,"byte_end":8184107,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184108,"byte_end":8184111,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [`std::sync`]: https://doc.rust-lang.org/std/sync/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184112,"byte_end":8184176,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184177,"byte_end":8184180,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! ## The need for synchronization","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184181,"byte_end":8184216,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184217,"byte_end":8184220,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! async-std's sync primitives are scheduler-aware, making it possible to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184221,"byte_end":8184295,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"! `.await` their operations - for example the locking of a [`Mutex`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184296,"byte_end":8184367,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184368,"byte_end":8184371,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Conceptually, a Rust program is a series of operations which will","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184372,"byte_end":8184441,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"! be executed on a computer. The timeline of events happening in the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184442,"byte_end":8184512,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"! program is consistent with the order of the operations in the code.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184513,"byte_end":8184584,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184585,"byte_end":8184588,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! Consider the following code, operating on some global static variables:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184589,"byte_end":8184664,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184665,"byte_end":8184668,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184669,"byte_end":8184676,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"! static mut A: u32 = 0;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184677,"byte_end":8184703,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"! static mut B: u32 = 0;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184704,"byte_end":8184730,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"! static mut C: u32 = 0;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184731,"byte_end":8184757,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184758,"byte_end":8184761,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184762,"byte_end":8184777,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"!     unsafe {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184778,"byte_end":8184794,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"!         A = 3;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184795,"byte_end":8184813,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"!         B = 4;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184814,"byte_end":8184832,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"!         A = A + B;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184833,"byte_end":8184855,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"!         C = B;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184856,"byte_end":8184874,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"!         println!(\"{} {} {}\", A, B, C);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184875,"byte_end":8184917,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"!         C = A;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184918,"byte_end":8184936,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"!     }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184937,"byte_end":8184946,"line_start":31,"line_end":31,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184947,"byte_end":8184952,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184953,"byte_end":8184960,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184961,"byte_end":8184964,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! It appears as if some variables stored in memory are changed, an addition","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8184965,"byte_end":8185042,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"! is performed, result is stored in `A` and the variable `C` is","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185043,"byte_end":8185108,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"! modified twice.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185109,"byte_end":8185128,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185129,"byte_end":8185132,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! When only a single thread is involved, the results are as expected:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185133,"byte_end":8185204,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"! the line `7 4 4` gets printed.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185205,"byte_end":8185239,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185240,"byte_end":8185243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! As for what happens behind the scenes, when optimizations are enabled the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185244,"byte_end":8185321,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"! final generated machine code might look very different from the code:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185322,"byte_end":8185395,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185396,"byte_end":8185399,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! - The first store to `C` might be moved before the store to `A` or `B`,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185400,"byte_end":8185475,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"!   _as if_ we had written `C = 4; A = 3; B = 4`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185476,"byte_end":8185527,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185528,"byte_end":8185531,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! - Assignment of `A + B` to `A` might be removed, since the sum can be stored","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185532,"byte_end":8185612,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"!   in a temporary location until it gets printed, with the global variable","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185613,"byte_end":8185690,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"!   never getting updated.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185691,"byte_end":8185719,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185720,"byte_end":8185723,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! - The final result could be determined just by looking at the code","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185724,"byte_end":8185794,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"!   at compile time, so [constant folding] might turn the whole","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185795,"byte_end":8185860,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"!   block into a simple `println!(\"7 4 4\")`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185861,"byte_end":8185907,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185908,"byte_end":8185911,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! The compiler is allowed to perform any combination of these","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185912,"byte_end":8185975,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"! optimizations, as long as the final optimized code, when executed,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8185976,"byte_end":8186046,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"! produces the same results as the one without optimizations.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186047,"byte_end":8186110,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186111,"byte_end":8186114,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! Due to the [concurrency] involved in modern computers, assumptions","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186115,"byte_end":8186185,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"! about the program's execution order are often wrong. Access to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186186,"byte_end":8186252,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"! global variables can lead to nondeterministic results, **even if**","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186253,"byte_end":8186323,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"! compiler optimizations are disabled, and it is **still possible**","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186324,"byte_end":8186393,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"! to introduce synchronization bugs.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186394,"byte_end":8186432,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186433,"byte_end":8186436,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Note that thanks to Rust's safety guarantees, accessing global (static)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186437,"byte_end":8186512,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"! variables requires `unsafe` code, assuming we don't use any of the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186513,"byte_end":8186583,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"! synchronization primitives in this module.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186584,"byte_end":8186630,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186631,"byte_end":8186634,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [constant folding]: https://en.wikipedia.org/wiki/Constant_folding","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186635,"byte_end":8186705,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"! [concurrency]: https://en.wikipedia.org/wiki/Concurrency_(computer_science)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186706,"byte_end":8186785,"line_start":71,"line_end":71,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186786,"byte_end":8186789,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ## Out-of-order execution","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186790,"byte_end":8186819,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186820,"byte_end":8186823,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! Instructions can execute in a different order from the one we define, due to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186824,"byte_end":8186904,"line_start":75,"line_end":75,"column_start":1,"column_end":81}},{"value":"! various reasons:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186905,"byte_end":8186925,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186926,"byte_end":8186929,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! - The **compiler** reordering instructions: If the compiler can issue an","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8186930,"byte_end":8187006,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"!   instruction at an earlier point, it will try to do so. For example, it","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187007,"byte_end":8187083,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"!   might hoist memory loads at the top of a code block, so that the CPU can","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187084,"byte_end":8187162,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"!   start [prefetching] the values from memory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187163,"byte_end":8187212,"line_start":81,"line_end":81,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187213,"byte_end":8187216,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"!   In single-threaded scenarios, this can cause issues when writing","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187217,"byte_end":8187287,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"!   signal handlers or certain kinds of low-level code.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187288,"byte_end":8187345,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"!   Use [compiler fences] to prevent this reordering.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187346,"byte_end":8187401,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187402,"byte_end":8187405,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! - A **single processor** executing instructions [out-of-order]:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187406,"byte_end":8187473,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"!   Modern CPUs are capable of [superscalar] execution,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187474,"byte_end":8187531,"line_start":88,"line_end":88,"column_start":1,"column_end":58}},{"value":"!   i.e., multiple instructions might be executing at the same time,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187532,"byte_end":8187602,"line_start":89,"line_end":89,"column_start":1,"column_end":71}},{"value":"!   even though the machine code describes a sequential process.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187603,"byte_end":8187669,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187670,"byte_end":8187673,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"!   This kind of reordering is handled transparently by the CPU.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187674,"byte_end":8187740,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187741,"byte_end":8187744,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! - A **multiprocessor** system executing multiple hardware threads","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187745,"byte_end":8187814,"line_start":94,"line_end":94,"column_start":1,"column_end":70}},{"value":"!   at the same time: In multi-threaded scenarios, you can use two","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187815,"byte_end":8187883,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"!   kinds of primitives to deal with synchronization:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187884,"byte_end":8187939,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"!   - [memory fences] to ensure memory accesses are made visible to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8187940,"byte_end":8188009,"line_start":97,"line_end":97,"column_start":1,"column_end":70}},{"value":"!   other CPUs in the right order.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188010,"byte_end":8188046,"line_start":98,"line_end":98,"column_start":1,"column_end":37}},{"value":"!   - [atomic operations] to ensure simultaneous access to the same","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188047,"byte_end":8188116,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"!   memory location doesn't lead to undefined behavior.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188117,"byte_end":8188174,"line_start":100,"line_end":100,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188175,"byte_end":8188178,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! [prefetching]: https://en.wikipedia.org/wiki/Cache_prefetching","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188179,"byte_end":8188245,"line_start":102,"line_end":102,"column_start":1,"column_end":67}},{"value":"! [compiler fences]: https://doc.rust-lang.org/std/sync/atomic/fn.compiler_fence.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188246,"byte_end":8188333,"line_start":103,"line_end":103,"column_start":1,"column_end":88}},{"value":"! [out-of-order]: https://en.wikipedia.org/wiki/Out-of-order_execution","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188334,"byte_end":8188406,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"! [superscalar]: https://en.wikipedia.org/wiki/Superscalar_processor","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188407,"byte_end":8188477,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"! [memory fences]: https://doc.rust-lang.org/std/sync/atomic/fn.fence.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188478,"byte_end":8188554,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"! [atomic operations]: https://doc.rust-lang.org/std/sync/atomic/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188555,"byte_end":8188632,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188633,"byte_end":8188636,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"! ## Higher-level synchronization objects","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188637,"byte_end":8188680,"line_start":109,"line_end":109,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188681,"byte_end":8188684,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! Most of the low-level synchronization primitives are quite error-prone and","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188685,"byte_end":8188763,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"! inconvenient to use, which is why async-std also exposes some","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188764,"byte_end":8188829,"line_start":112,"line_end":112,"column_start":1,"column_end":66}},{"value":"! higher-level synchronization objects.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188830,"byte_end":8188871,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188872,"byte_end":8188875,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! These abstractions can be built out of lower-level primitives.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188876,"byte_end":8188942,"line_start":115,"line_end":115,"column_start":1,"column_end":67}},{"value":"! For efficiency, the sync objects in async-std are usually","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8188943,"byte_end":8189004,"line_start":116,"line_end":116,"column_start":1,"column_end":62}},{"value":"! implemented with help from the scheduler, which is","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189005,"byte_end":8189059,"line_start":117,"line_end":117,"column_start":1,"column_end":55}},{"value":"! able to reschedule the tasks while they are blocked on acquiring","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189060,"byte_end":8189128,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"! a lock.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189129,"byte_end":8189140,"line_start":119,"line_end":119,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189141,"byte_end":8189144,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! The following is an overview of the available synchronization","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189145,"byte_end":8189210,"line_start":121,"line_end":121,"column_start":1,"column_end":66}},{"value":"! objects:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189211,"byte_end":8189223,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189224,"byte_end":8189227,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! - [`Arc`]: Atomically Reference-Counted pointer, which can be used","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189228,"byte_end":8189298,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"!   in multithreaded environments to prolong the lifetime of some","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189299,"byte_end":8189366,"line_start":125,"line_end":125,"column_start":1,"column_end":68}},{"value":"!   data until all the threads have finished using it.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189367,"byte_end":8189423,"line_start":126,"line_end":126,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189424,"byte_end":8189427,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! - [`Barrier`]: Ensures multiple threads will wait for each other","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189428,"byte_end":8189496,"line_start":128,"line_end":128,"column_start":1,"column_end":69}},{"value":"!   to reach a point in the program, before continuing execution all","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189497,"byte_end":8189567,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"!   together.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189568,"byte_end":8189583,"line_start":130,"line_end":130,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189584,"byte_end":8189587,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"! - [`channel`]: Multi-producer, multi-consumer queues, used for","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189588,"byte_end":8189654,"line_start":132,"line_end":132,"column_start":1,"column_end":67}},{"value":"!   message-based communication. Can provide a lightweight","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189655,"byte_end":8189715,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"!   inter-task synchronisation mechanism, at the cost of some","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189716,"byte_end":8189779,"line_start":134,"line_end":134,"column_start":1,"column_end":64}},{"value":"!   extra memory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189780,"byte_end":8189799,"line_start":135,"line_end":135,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189800,"byte_end":8189803,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! - [`Mutex`]: Mutual exclusion mechanism, which ensures that at","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189804,"byte_end":8189870,"line_start":137,"line_end":137,"column_start":1,"column_end":67}},{"value":"!   most one task at a time is able to access some data.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189871,"byte_end":8189929,"line_start":138,"line_end":138,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189930,"byte_end":8189933,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"! - [`RwLock`]: Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8189934,"byte_end":8190002,"line_start":140,"line_end":140,"column_start":1,"column_end":69}},{"value":"!   multiple readers at the same time, while allowing only one","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190003,"byte_end":8190067,"line_start":141,"line_end":141,"column_start":1,"column_end":65}},{"value":"!   writer at a time. In some cases, this can be more efficient than","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190068,"byte_end":8190138,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"!   a mutex.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190139,"byte_end":8190153,"line_start":143,"line_end":143,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190154,"byte_end":8190157,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! [`Arc`]: struct.Arc.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190158,"byte_end":8190186,"line_start":145,"line_end":145,"column_start":1,"column_end":29}},{"value":"! [`Barrier`]: struct.Barrier.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190187,"byte_end":8190223,"line_start":146,"line_end":146,"column_start":1,"column_end":37}},{"value":"! [`channel`]: fn.channel.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190224,"byte_end":8190256,"line_start":147,"line_end":147,"column_start":1,"column_end":33}},{"value":"! [`Mutex`]: struct.Mutex.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190257,"byte_end":8190289,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"! [`RwLock`]: struct.RwLock.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190290,"byte_end":8190324,"line_start":149,"line_end":149,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190325,"byte_end":8190328,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190329,"byte_end":8190343,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190344,"byte_end":8190347,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Spawn a task that updates an integer protected by a mutex:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190348,"byte_end":8190410,"line_start":153,"line_end":153,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190411,"byte_end":8190414,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190415,"byte_end":8190422,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"! # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190423,"byte_end":8190462,"line_start":156,"line_end":156,"column_start":1,"column_end":40}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190463,"byte_end":8190468,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"! use async_std::sync::{Arc, Mutex};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190469,"byte_end":8190507,"line_start":158,"line_end":158,"column_start":1,"column_end":39}},{"value":"! use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190508,"byte_end":8190532,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190533,"byte_end":8190536,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! let m1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190537,"byte_end":8190574,"line_start":161,"line_end":161,"column_start":1,"column_end":38}},{"value":"! let m2 = m1.clone();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190575,"byte_end":8190599,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190600,"byte_end":8190603,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190604,"byte_end":8190632,"line_start":164,"line_end":164,"column_start":1,"column_end":29}},{"value":"!     *m2.lock().await = 1;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190633,"byte_end":8190662,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"! })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190663,"byte_end":8190669,"line_start":166,"line_end":166,"column_start":1,"column_end":7}},{"value":"! .await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190670,"byte_end":8190681,"line_start":167,"line_end":167,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190682,"byte_end":8190685,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"! assert_eq!(*m1.lock().await, 1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190686,"byte_end":8190722,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190723,"byte_end":8190728,"line_start":170,"line_end":170,"column_start":1,"column_end":6}},{"value":"! # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190729,"byte_end":8190737,"line_start":171,"line_end":171,"column_start":1,"column_end":9}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190738,"byte_end":8190745,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mod.rs","byte_start":8190747,"byte_end":8190787,"line_start":174,"line_end":174,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2958},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192176,"byte_end":8192181,"line_start":42,"line_end":42,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2962}],"decl_id":null,"docs":" A mutual exclusion primitive for protecting shared data.","sig":null,"attributes":[{"value":"/ A mutual exclusion primitive for protecting shared data.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191491,"byte_end":8191551,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191552,"byte_end":8191555,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::sync::Mutex`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191556,"byte_end":8191614,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191615,"byte_end":8191618,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::sync::Mutex`]: https://doc.rust-lang.org/std/sync/struct.Mutex.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191619,"byte_end":8191697,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191698,"byte_end":8191701,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191702,"byte_end":8191716,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191717,"byte_end":8191720,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191721,"byte_end":8191728,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191729,"byte_end":8191768,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191769,"byte_end":8191774,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191775,"byte_end":8191813,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191814,"byte_end":8191838,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191839,"byte_end":8191842,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let m = Arc::new(Mutex::new(0));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191843,"byte_end":8191879,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/ let mut tasks = vec![];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191880,"byte_end":8191907,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191908,"byte_end":8191911,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191912,"byte_end":8191932,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/     let m = m.clone();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191933,"byte_end":8191959,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/     tasks.push(task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8191960,"byte_end":8192003,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/         *m.lock().await += 1;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192004,"byte_end":8192037,"line_start":31,"line_end":31,"column_start":1,"column_end":34}},{"value":"/     }));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192038,"byte_end":8192050,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192051,"byte_end":8192056,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192057,"byte_end":8192060,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ for t in tasks {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192061,"byte_end":8192081,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/     t.await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192082,"byte_end":8192098,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192099,"byte_end":8192104,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(*m.lock().await, 10);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192105,"byte_end":8192141,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192142,"byte_end":8192147,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192148,"byte_end":8192156,"line_start":40,"line_end":40,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192157,"byte_end":8192164,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2969},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192570,"byte_end":8192573,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn (t: T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new mutex.","sig":null,"attributes":[{"value":"/ Creates a new mutex.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192396,"byte_end":8192420,"line_start":52,"line_end":52,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192425,"byte_end":8192428,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192433,"byte_end":8192447,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192452,"byte_end":8192455,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192460,"byte_end":8192467,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::Mutex;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192472,"byte_end":8192503,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192508,"byte_end":8192511,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192516,"byte_end":8192546,"line_start":59,"line_end":59,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192551,"byte_end":8192558,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2972},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193330,"byte_end":8193334,"line_start":95,"line_end":95,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn (&self) -> MutexGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquires the lock.","sig":null,"attributes":[{"value":"/ Acquires the lock.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192780,"byte_end":8192802,"line_start":71,"line_end":71,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192807,"byte_end":8192810,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192815,"byte_end":8192871,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192876,"byte_end":8192879,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192884,"byte_end":8192898,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192903,"byte_end":8192906,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192911,"byte_end":8192918,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192923,"byte_end":8192962,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192967,"byte_end":8192972,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192977,"byte_end":8193015,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193020,"byte_end":8193044,"line_start":81,"line_end":81,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193049,"byte_end":8193052,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let m1 = Arc::new(Mutex::new(10));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193057,"byte_end":8193095,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/ let m2 = m1.clone();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193100,"byte_end":8193124,"line_start":84,"line_end":84,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193129,"byte_end":8193132,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193137,"byte_end":8193165,"line_start":86,"line_end":86,"column_start":5,"column_end":33}},{"value":"/     *m1.lock().await = 20;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193170,"byte_end":8193200,"line_start":87,"line_end":87,"column_start":5,"column_end":35}},{"value":"/ })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193205,"byte_end":8193211,"line_start":88,"line_end":88,"column_start":5,"column_end":11}},{"value":"/ .await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193216,"byte_end":8193227,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193232,"byte_end":8193235,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*m2.lock().await, 20);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193240,"byte_end":8193277,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193282,"byte_end":8193287,"line_start":92,"line_end":92,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193292,"byte_end":8193300,"line_start":93,"line_end":93,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193305,"byte_end":8193312,"line_start":94,"line_end":94,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2988},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195898,"byte_end":8195906,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn (&self) -> Option<MutexGuard<'_, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195011,"byte_end":8195044,"line_start":144,"line_end":144,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195049,"byte_end":8195052,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195057,"byte_end":8195148,"line_start":146,"line_end":146,"column_start":5,"column_end":96}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195153,"byte_end":8195211,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195216,"byte_end":8195219,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195224,"byte_end":8195304,"line_start":149,"line_end":149,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195309,"byte_end":8195312,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195317,"byte_end":8195331,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195336,"byte_end":8195339,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195344,"byte_end":8195351,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195356,"byte_end":8195395,"line_start":154,"line_end":154,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195400,"byte_end":8195405,"line_start":155,"line_end":155,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::{Arc, Mutex};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195410,"byte_end":8195448,"line_start":156,"line_end":156,"column_start":5,"column_end":43}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195453,"byte_end":8195477,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195482,"byte_end":8195485,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let m1 = Arc::new(Mutex::new(10));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195490,"byte_end":8195528,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"/ let m2 = m1.clone();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195533,"byte_end":8195557,"line_start":160,"line_end":160,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195562,"byte_end":8195565,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195570,"byte_end":8195598,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/     if let Some(mut guard) = m1.try_lock() {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195603,"byte_end":8195651,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/         *guard = 20;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195656,"byte_end":8195680,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195685,"byte_end":8195701,"line_start":165,"line_end":165,"column_start":5,"column_end":21}},{"value":"/         println!(\"try_lock failed\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195706,"byte_end":8195746,"line_start":166,"line_end":166,"column_start":5,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195751,"byte_end":8195760,"line_start":167,"line_end":167,"column_start":5,"column_end":14}},{"value":"/ })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195765,"byte_end":8195771,"line_start":168,"line_end":168,"column_start":5,"column_end":11}},{"value":"/ .await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195776,"byte_end":8195787,"line_start":169,"line_end":169,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195792,"byte_end":8195795,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*m2.lock().await, 20);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195800,"byte_end":8195837,"line_start":171,"line_end":171,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195842,"byte_end":8195847,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195852,"byte_end":8195860,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195865,"byte_end":8195872,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8195877,"byte_end":8195886,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2989},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196339,"byte_end":8196349,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196090,"byte_end":8196144,"line_start":184,"line_end":184,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196149,"byte_end":8196152,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196157,"byte_end":8196171,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196176,"byte_end":8196179,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196184,"byte_end":8196191,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::Mutex;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196196,"byte_end":8196227,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196232,"byte_end":8196235,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(10);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196240,"byte_end":8196271,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(mutex.into_inner(), 10);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196276,"byte_end":8196315,"line_start":192,"line_end":192,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196320,"byte_end":8196327,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2990},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196940,"byte_end":8196947,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196421,"byte_end":8196476,"line_start":198,"line_end":198,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196481,"byte_end":8196484,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the mutex mutably, no actual locking takes place -- the mutable","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196489,"byte_end":8196580,"line_start":200,"line_end":200,"column_start":5,"column_end":96}},{"value":"/ borrow statically guarantees no locks exist.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196585,"byte_end":8196633,"line_start":201,"line_end":201,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196638,"byte_end":8196641,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196646,"byte_end":8196660,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196665,"byte_end":8196668,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196673,"byte_end":8196680,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196685,"byte_end":8196724,"line_start":206,"line_end":206,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196729,"byte_end":8196734,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::Mutex;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196739,"byte_end":8196770,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196775,"byte_end":8196778,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196783,"byte_end":8196817,"line_start":210,"line_end":210,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196822,"byte_end":8196848,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196853,"byte_end":8196893,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196898,"byte_end":8196903,"line_start":213,"line_end":213,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196908,"byte_end":8196916,"line_start":214,"line_end":214,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8196921,"byte_end":8196928,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3004},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8197835,"byte_end":8197845,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the lock when dropped.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8197775,"byte_end":8197823,"line_start":249,"line_end":249,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3052},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200338,"byte_end":8200344,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3056},{"krate":0,"index":3057}],"decl_id":null,"docs":" A reader-writer lock for protecting shared data.","sig":null,"attributes":[{"value":"/ A reader-writer lock for protecting shared data.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199644,"byte_end":8199696,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199697,"byte_end":8199700,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::sync::RwLock`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199701,"byte_end":8199760,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199761,"byte_end":8199764,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`std::sync::RwLock`]: https://doc.rust-lang.org/std/sync/struct.RwLock.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199765,"byte_end":8199845,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199846,"byte_end":8199849,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199850,"byte_end":8199864,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199865,"byte_end":8199868,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199869,"byte_end":8199876,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199877,"byte_end":8199916,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199917,"byte_end":8199922,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199923,"byte_end":8199955,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199956,"byte_end":8199959,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199960,"byte_end":8199990,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199991,"byte_end":8199994,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Multiple read locks can be held at a time.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8199995,"byte_end":8200044,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/ let r1 = lock.read().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200045,"byte_end":8200076,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ let r2 = lock.read().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200077,"byte_end":8200108,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(*r1, 5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200109,"byte_end":8200132,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(*r2, 5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200133,"byte_end":8200156,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/ drop((r1, r2));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200157,"byte_end":8200176,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200177,"byte_end":8200180,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Only one write locks can be held at a time.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200181,"byte_end":8200231,"line_start":45,"line_end":45,"column_start":1,"column_end":51}},{"value":"/ let mut w = lock.write().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200232,"byte_end":8200267,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/ *w += 1;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200268,"byte_end":8200280,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/ assert_eq!(*w, 6);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200281,"byte_end":8200303,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200304,"byte_end":8200309,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200310,"byte_end":8200318,"line_start":50,"line_end":50,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200319,"byte_end":8200326,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3064},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200790,"byte_end":8200793,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"fn (t: T) -> RwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reader-writer lock.","sig":null,"attributes":[{"value":"/ Creates a new reader-writer lock.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200602,"byte_end":8200639,"line_start":63,"line_end":63,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200644,"byte_end":8200647,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200652,"byte_end":8200666,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200671,"byte_end":8200674,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200679,"byte_end":8200686,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200691,"byte_end":8200723,"line_start":68,"line_end":68,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200728,"byte_end":8200731,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(0);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200736,"byte_end":8200766,"line_start":70,"line_end":70,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200771,"byte_end":8200778,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3067},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201497,"byte_end":8201501,"line_start":103,"line_end":103,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"fn (&self) -> RwLockReadGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a read lock.","sig":null,"attributes":[{"value":"/ Acquires a read lock.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201047,"byte_end":8201072,"line_start":83,"line_end":83,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201077,"byte_end":8201080,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201085,"byte_end":8201141,"line_start":85,"line_end":85,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201146,"byte_end":8201149,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201154,"byte_end":8201168,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201173,"byte_end":8201176,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201181,"byte_end":8201188,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201193,"byte_end":8201232,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201237,"byte_end":8201242,"line_start":91,"line_end":91,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201247,"byte_end":8201279,"line_start":92,"line_end":92,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201284,"byte_end":8201287,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201292,"byte_end":8201322,"line_start":94,"line_end":94,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201327,"byte_end":8201330,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201335,"byte_end":8201365,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201370,"byte_end":8201392,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201397,"byte_end":8201400,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201405,"byte_end":8201444,"line_start":99,"line_end":99,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201449,"byte_end":8201454,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201459,"byte_end":8201467,"line_start":101,"line_end":101,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201472,"byte_end":8201479,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8204183,"byte_end":8204191,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"fn (&self) -> Option<RwLockReadGuard<'_, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a read lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a read lock.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8203534,"byte_end":8203570,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8203575,"byte_end":8203578,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ If a read lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8203583,"byte_end":8203677,"line_start":160,"line_end":160,"column_start":5,"column_end":99}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8203682,"byte_end":8203740,"line_start":161,"line_end":161,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8203745,"byte_end":8203748,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8203753,"byte_end":8203833,"line_start":163,"line_end":163,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8203838,"byte_end":8203841,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8203846,"byte_end":8203860,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8203865,"byte_end":8203868,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8203873,"byte_end":8203880,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8203885,"byte_end":8203924,"line_start":168,"line_end":168,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8203929,"byte_end":8203934,"line_start":169,"line_end":169,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8203939,"byte_end":8203971,"line_start":170,"line_end":170,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8203976,"byte_end":8203979,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8203984,"byte_end":8204014,"line_start":172,"line_end":172,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8204019,"byte_end":8204022,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8204027,"byte_end":8204057,"line_start":174,"line_end":174,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8204062,"byte_end":8204084,"line_start":175,"line_end":175,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8204089,"byte_end":8204092,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_some());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8204097,"byte_end":8204136,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8204141,"byte_end":8204146,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8204151,"byte_end":8204159,"line_start":179,"line_end":179,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8204164,"byte_end":8204171,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205465,"byte_end":8205470,"line_start":228,"line_end":228,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"fn (&self) -> RwLockWriteGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a write lock.","sig":null,"attributes":[{"value":"/ Acquires a write lock.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205020,"byte_end":8205046,"line_start":208,"line_end":208,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205051,"byte_end":8205054,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Returns a guard that releases the lock when dropped.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205059,"byte_end":8205115,"line_start":210,"line_end":210,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205120,"byte_end":8205123,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205128,"byte_end":8205142,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205147,"byte_end":8205150,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205155,"byte_end":8205162,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205167,"byte_end":8205206,"line_start":215,"line_end":215,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205211,"byte_end":8205216,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205221,"byte_end":8205253,"line_start":217,"line_end":217,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205258,"byte_end":8205261,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205266,"byte_end":8205296,"line_start":219,"line_end":219,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205301,"byte_end":8205304,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let mut n = lock.write().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205309,"byte_end":8205344,"line_start":221,"line_end":221,"column_start":5,"column_end":40}},{"value":"/ *n = 2;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205349,"byte_end":8205360,"line_start":222,"line_end":222,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205365,"byte_end":8205368,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_none());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205373,"byte_end":8205412,"line_start":224,"line_end":224,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205417,"byte_end":8205422,"line_start":225,"line_end":225,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205427,"byte_end":8205435,"line_start":226,"line_end":226,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205440,"byte_end":8205447,"line_start":227,"line_end":227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3100},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208035,"byte_end":8208044,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"fn (&self) -> Option<RwLockWriteGuard<'_, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire a write lock.","sig":null,"attributes":[{"value":"/ Attempts to acquire a write lock.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207383,"byte_end":8207420,"line_start":280,"line_end":280,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207425,"byte_end":8207428,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ If a write lock could not be acquired at this time, then [`None`] is returned. Otherwise, a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207433,"byte_end":8207528,"line_start":282,"line_end":282,"column_start":5,"column_end":100}},{"value":"/ guard is returned that releases the lock when dropped.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207533,"byte_end":8207591,"line_start":283,"line_end":283,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207596,"byte_end":8207599,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207604,"byte_end":8207684,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207689,"byte_end":8207692,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207697,"byte_end":8207711,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207716,"byte_end":8207719,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207724,"byte_end":8207731,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207736,"byte_end":8207775,"line_start":290,"line_end":290,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207780,"byte_end":8207785,"line_start":291,"line_end":291,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207790,"byte_end":8207822,"line_start":292,"line_end":292,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207827,"byte_end":8207830,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207835,"byte_end":8207865,"line_start":294,"line_end":294,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207870,"byte_end":8207873,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207878,"byte_end":8207908,"line_start":296,"line_end":296,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207913,"byte_end":8207935,"line_start":297,"line_end":297,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207940,"byte_end":8207943,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_none());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207948,"byte_end":8207988,"line_start":299,"line_end":299,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8207993,"byte_end":8207998,"line_start":300,"line_end":300,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208003,"byte_end":8208011,"line_start":301,"line_end":301,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208016,"byte_end":8208023,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208512,"byte_end":8208522,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208264,"byte_end":8208317,"line_start":311,"line_end":311,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208322,"byte_end":8208325,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208330,"byte_end":8208344,"line_start":313,"line_end":313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208349,"byte_end":8208352,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208357,"byte_end":8208364,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208369,"byte_end":8208401,"line_start":316,"line_end":316,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208406,"byte_end":8208409,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(10);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208414,"byte_end":8208445,"line_start":318,"line_end":318,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(lock.into_inner(), 10);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208450,"byte_end":8208488,"line_start":319,"line_end":319,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208493,"byte_end":8208500,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3102},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8209112,"byte_end":8209119,"line_start":343,"line_end":343,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208594,"byte_end":8208649,"line_start":325,"line_end":325,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208654,"byte_end":8208657,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the lock mutably, no actual locking takes place -- the mutable","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208662,"byte_end":8208752,"line_start":327,"line_end":327,"column_start":5,"column_end":95}},{"value":"/ borrow statically guarantees no locks exist.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208757,"byte_end":8208805,"line_start":328,"line_end":328,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208810,"byte_end":8208813,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208818,"byte_end":8208832,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208837,"byte_end":8208840,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208845,"byte_end":8208852,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208857,"byte_end":8208896,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208901,"byte_end":8208906,"line_start":334,"line_end":334,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::RwLock;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208911,"byte_end":8208943,"line_start":335,"line_end":335,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208948,"byte_end":8208951,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ let mut lock = RwLock::new(0);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208956,"byte_end":8208990,"line_start":337,"line_end":337,"column_start":5,"column_end":39}},{"value":"/ *lock.get_mut() = 10;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8208995,"byte_end":8209020,"line_start":338,"line_end":338,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(*lock.write().await, 10);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8209025,"byte_end":8209065,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8209070,"byte_end":8209075,"line_start":340,"line_end":340,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8209080,"byte_end":8209088,"line_start":341,"line_end":341,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8209093,"byte_end":8209100,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3116},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8210021,"byte_end":8210036,"line_start":377,"line_end":377,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the read lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the read lock when dropped.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8209956,"byte_end":8210009,"line_start":376,"line_end":376,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3138},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8211119,"byte_end":8211135,"line_start":414,"line_end":414,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A guard that releases the write lock when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that releases the write lock when dropped.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8211053,"byte_end":8211107,"line_start":413,"line_end":413,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":4676},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391207,"byte_end":8391214,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":4677},{"krate":0,"index":4678},{"krate":0,"index":4679}],"decl_id":null,"docs":" A barrier enables multiple tasks to synchronize the beginning\n of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple tasks to synchronize the beginning","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390330,"byte_end":8390395,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ of some computation.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390396,"byte_end":8390420,"line_start":4,"line_end":4,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390421,"byte_end":8390424,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390425,"byte_end":8390439,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390440,"byte_end":8390443,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390444,"byte_end":8390451,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390452,"byte_end":8390491,"line_start":9,"line_end":9,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390492,"byte_end":8390497,"line_start":10,"line_end":10,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::{Arc, Barrier};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390498,"byte_end":8390538,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390539,"byte_end":8390563,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390564,"byte_end":8390567,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390568,"byte_end":8390613,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390614,"byte_end":8390659,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390660,"byte_end":8390680,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390681,"byte_end":8390713,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390714,"byte_end":8390768,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390769,"byte_end":8390814,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/     handles.push(task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390815,"byte_end":8390860,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390861,"byte_end":8390897,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/         c.wait().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390898,"byte_end":8390925,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390926,"byte_end":8390961,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/     }));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390962,"byte_end":8390974,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390975,"byte_end":8390980,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ // Wait for the other futures to finish.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8390981,"byte_end":8391025,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ for handle in handles {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391026,"byte_end":8391053,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/     handle.await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391054,"byte_end":8391075,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391076,"byte_end":8391081,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391082,"byte_end":8391091,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391092,"byte_end":8391099,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391100,"byte_end":8391128,"line_start":32,"line_end":32,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":4687},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391878,"byte_end":8391895,"line_start":64,"line_end":64,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391418,"byte_end":8391518,"line_start":48,"line_end":48,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391519,"byte_end":8391522,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`wait`]: struct.Barrier.html#method.wait","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391523,"byte_end":8391568,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/ [`Barrier`]: struct.Barrier.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391569,"byte_end":8391605,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391606,"byte_end":8391609,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391610,"byte_end":8391624,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391625,"byte_end":8391628,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391629,"byte_end":8391636,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use async_std::sync::Barrier;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391637,"byte_end":8391670,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391671,"byte_end":8391674,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let barrier = Barrier::new(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391675,"byte_end":8391709,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/ let barrier_wait_result = barrier.wait();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391710,"byte_end":8391755,"line_start":59,"line_end":59,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391756,"byte_end":8391763,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391764,"byte_end":8391792,"line_start":61,"line_end":61,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4443},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392326,"byte_end":8392329,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"fn (n: usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of tasks.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of tasks.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391923,"byte_end":8391988,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391993,"byte_end":8391996,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 tasks which call [`wait`] and then wake up","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392001,"byte_end":8392074,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ all tasks at once when the `n`th task calls [`wait`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392079,"byte_end":8392136,"line_start":70,"line_end":70,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392141,"byte_end":8392144,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`wait`]: #method.wait","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392149,"byte_end":8392175,"line_start":72,"line_end":72,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392180,"byte_end":8392183,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392188,"byte_end":8392202,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392207,"byte_end":8392210,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392215,"byte_end":8392222,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Barrier;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392227,"byte_end":8392254,"line_start":77,"line_end":77,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392259,"byte_end":8392262,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let barrier = Barrier::new(10);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392267,"byte_end":8392302,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392307,"byte_end":8392314,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4444},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393965,"byte_end":8393969,"line_start":131,"line_end":131,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"fn (&self) -> BarrierWaitResult","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current task until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Blocks the current task until all tasks have rendezvoused here.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392573,"byte_end":8392640,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392645,"byte_end":8392648,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all tasks have rendezvoused once, and can","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392653,"byte_end":8392727,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ be used continuously.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392732,"byte_end":8392757,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392762,"byte_end":8392765,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) task will receive a [`BarrierWaitResult`] that","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392770,"byte_end":8392841,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/ returns `true` from [`is_leader`] when returning from this function, and","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392846,"byte_end":8392922,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ all other tasks will receive a result that will return `false` from","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8392927,"byte_end":8392998,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/ [`is_leader`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393003,"byte_end":8393021,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393026,"byte_end":8393029,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`BarrierWaitResult`]: struct.BarrierWaitResult.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393034,"byte_end":8393090,"line_start":102,"line_end":102,"column_start":5,"column_end":61}},{"value":"/ [`is_leader`]: struct.BarrierWaitResult.html#method.is_leader","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393095,"byte_end":8393160,"line_start":103,"line_end":103,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393165,"byte_end":8393168,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393173,"byte_end":8393187,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393192,"byte_end":8393195,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393200,"byte_end":8393207,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393212,"byte_end":8393251,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393256,"byte_end":8393261,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::{Arc, Barrier};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393266,"byte_end":8393306,"line_start":110,"line_end":110,"column_start":5,"column_end":45}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393311,"byte_end":8393335,"line_start":111,"line_end":111,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393340,"byte_end":8393343,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393348,"byte_end":8393393,"line_start":113,"line_end":113,"column_start":5,"column_end":50}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393398,"byte_end":8393443,"line_start":114,"line_end":114,"column_start":5,"column_end":50}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393448,"byte_end":8393468,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393473,"byte_end":8393505,"line_start":116,"line_end":116,"column_start":5,"column_end":37}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393510,"byte_end":8393564,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393569,"byte_end":8393614,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/     handles.push(task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393619,"byte_end":8393664,"line_start":119,"line_end":119,"column_start":5,"column_end":50}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393669,"byte_end":8393705,"line_start":120,"line_end":120,"column_start":5,"column_end":41}},{"value":"/         c.wait().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393710,"byte_end":8393737,"line_start":121,"line_end":121,"column_start":5,"column_end":32}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393742,"byte_end":8393777,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/     }));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393782,"byte_end":8393794,"line_start":123,"line_end":123,"column_start":5,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393799,"byte_end":8393804,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ // Wait for the other futures to finish.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393809,"byte_end":8393853,"line_start":125,"line_end":125,"column_start":5,"column_end":49}},{"value":"/ for handle in handles {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393858,"byte_end":8393885,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/     handle.await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393890,"byte_end":8393911,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393916,"byte_end":8393921,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393926,"byte_end":8393935,"line_start":129,"line_end":129,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8393940,"byte_end":8393947,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4448},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8395181,"byte_end":8395190,"line_start":171,"line_end":171,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this task from [`wait`] is the \"leader task\".","sig":null,"attributes":[{"value":"/ Returns `true` if this task from [`wait`] is the \"leader task\".","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394590,"byte_end":8394657,"line_start":152,"line_end":152,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394662,"byte_end":8394665,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Only one task will have `true` returned from their result, all other","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394670,"byte_end":8394742,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/ tasks will have `false` returned.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394747,"byte_end":8394784,"line_start":155,"line_end":155,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394789,"byte_end":8394792,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ [`wait`]: struct.Barrier.html#method.wait","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394797,"byte_end":8394842,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394847,"byte_end":8394850,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394855,"byte_end":8394869,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394874,"byte_end":8394877,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394882,"byte_end":8394889,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394894,"byte_end":8394933,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394938,"byte_end":8394943,"line_start":163,"line_end":163,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::Barrier;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394948,"byte_end":8394981,"line_start":164,"line_end":164,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394986,"byte_end":8394989,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let barrier = Barrier::new(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394994,"byte_end":8395028,"line_start":166,"line_end":166,"column_start":5,"column_end":39}},{"value":"/ let barrier_wait_result = barrier.wait().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8395033,"byte_end":8395084,"line_start":167,"line_end":167,"column_start":5,"column_end":56}},{"value":"/ println!(\"{:?}\", barrier_wait_result.is_leader());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8395089,"byte_end":8395143,"line_start":168,"line_end":168,"column_start":5,"column_end":59}},{"value":"/ # });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8395148,"byte_end":8395157,"line_start":169,"line_end":169,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8395162,"byte_end":8395169,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4694},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397211,"byte_end":8397228,"line_start":11,"line_end":11,"column_start":12,"column_end":29},"name":"WaitTimeoutResult","qualname":"::sync::condvar::WaitTimeoutResult","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4464},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397442,"byte_end":8397451,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"timed_out","qualname":"<WaitTimeoutResult>::timed_out","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the wait was known to have timed out.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the wait was known to have timed out.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397371,"byte_end":8397430,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":4465},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398469,"byte_end":8398476,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"Condvar","qualname":"::sync::condvar::Condvar","value":"Condvar {  }","parent":null,"children":[{"krate":0,"index":4466}],"decl_id":null,"docs":" A Condition Variable","sig":null,"attributes":[{"value":"/ A Condition Variable","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397492,"byte_end":8397516,"line_start":22,"line_end":22,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397517,"byte_end":8397520,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::sync::Mutex`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397521,"byte_end":8397579,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397580,"byte_end":8397583,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`std::sync::Condvar`]: https://doc.rust-lang.org/std/sync/struct.Condvar.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397584,"byte_end":8397666,"line_start":26,"line_end":26,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397667,"byte_end":8397670,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397671,"byte_end":8397685,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397686,"byte_end":8397689,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397690,"byte_end":8397697,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397698,"byte_end":8397737,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397738,"byte_end":8397743,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397744,"byte_end":8397767,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397768,"byte_end":8397771,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397772,"byte_end":8397814,"line_start":35,"line_end":35,"column_start":1,"column_end":43}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397815,"byte_end":8397839,"line_start":36,"line_end":36,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397840,"byte_end":8397843,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397844,"byte_end":8397905,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397906,"byte_end":8397935,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397936,"byte_end":8397939,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // Inside of our lock, spawn a new thread, and then wait for it to start.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397940,"byte_end":8398017,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398018,"byte_end":8398046,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398047,"byte_end":8398082,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398083,"byte_end":8398127,"line_start":44,"line_end":44,"column_start":1,"column_end":45}},{"value":"/     *started = true;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398128,"byte_end":8398152,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398153,"byte_end":8398213,"line_start":46,"line_end":46,"column_start":1,"column_end":61}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398214,"byte_end":8398240,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398241,"byte_end":8398248,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398249,"byte_end":8398252,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398253,"byte_end":8398292,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398293,"byte_end":8398323,"line_start":51,"line_end":51,"column_start":1,"column_end":31}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398324,"byte_end":8398364,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ while !*started {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398365,"byte_end":8398386,"line_start":53,"line_end":53,"column_start":1,"column_end":22}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398387,"byte_end":8398430,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398431,"byte_end":8398436,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398437,"byte_end":8398440,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398441,"byte_end":8398449,"line_start":57,"line_end":57,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398450,"byte_end":8398457,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4472},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398862,"byte_end":8398865,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<Condvar>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new condition variable","sig":null,"attributes":[{"value":"/ Creates a new condition variable","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398674,"byte_end":8398710,"line_start":73,"line_end":73,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398715,"byte_end":8398718,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398723,"byte_end":8398737,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398742,"byte_end":8398745,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398750,"byte_end":8398757,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::Condvar;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398762,"byte_end":8398795,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398800,"byte_end":8398803,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let cvar = Condvar::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398808,"byte_end":8398838,"line_start":80,"line_end":80,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398843,"byte_end":8398850,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4473},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400088,"byte_end":8400092,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"name":"wait","qualname":"<Condvar>::wait","value":"fn <'a, T> (&self, guard: MutexGuard<'a, T>) -> MutexGuard<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current task until this condition variable receives a notification.","sig":null,"attributes":[{"value":"/ Blocks the current task until this condition variable receives a notification.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398954,"byte_end":8399036,"line_start":88,"line_end":88,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399041,"byte_end":8399044,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Unlike the std equivalent, this does not check that a single mutex is used at runtime.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399049,"byte_end":8399139,"line_start":90,"line_end":90,"column_start":5,"column_end":95}},{"value":"/ However, as a best practice avoid using with multiple mutexes.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399144,"byte_end":8399210,"line_start":91,"line_end":91,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399215,"byte_end":8399218,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399223,"byte_end":8399237,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399242,"byte_end":8399245,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399250,"byte_end":8399257,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399262,"byte_end":8399301,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399306,"byte_end":8399329,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399334,"byte_end":8399337,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399342,"byte_end":8399384,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399389,"byte_end":8399413,"line_start":100,"line_end":100,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399418,"byte_end":8399421,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399426,"byte_end":8399487,"line_start":102,"line_end":102,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399492,"byte_end":8399521,"line_start":103,"line_end":103,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399526,"byte_end":8399529,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399534,"byte_end":8399562,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399567,"byte_end":8399602,"line_start":106,"line_end":106,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399607,"byte_end":8399651,"line_start":107,"line_end":107,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399656,"byte_end":8399680,"line_start":108,"line_end":108,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399685,"byte_end":8399745,"line_start":109,"line_end":109,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399750,"byte_end":8399776,"line_start":110,"line_end":110,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399781,"byte_end":8399788,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399793,"byte_end":8399796,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399801,"byte_end":8399840,"line_start":113,"line_end":113,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399845,"byte_end":8399875,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399880,"byte_end":8399920,"line_start":115,"line_end":115,"column_start":5,"column_end":45}},{"value":"/ while !*started {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399925,"byte_end":8399946,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399951,"byte_end":8399994,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8399999,"byte_end":8400004,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400009,"byte_end":8400017,"line_start":119,"line_end":119,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400022,"byte_end":8400029,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400034,"byte_end":8400070,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4481},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401645,"byte_end":8401655,"line_start":171,"line_end":171,"column_start":18,"column_end":28},"name":"wait_until","qualname":"<Condvar>::wait_until","value":"fn <'a, T, F> (&self, mut guard: MutexGuard<'a, T>, mut condition: F) -> MutexGuard<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current taks until this condition variable receives a notification and the\n required condition is met. Spurious wakeups are ignored and this function will only\n return once the condition has been met.","sig":null,"attributes":[{"value":"/ Blocks the current taks until this condition variable receives a notification and the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400482,"byte_end":8400571,"line_start":138,"line_end":138,"column_start":5,"column_end":94}},{"value":"/ required condition is met. Spurious wakeups are ignored and this function will only","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400576,"byte_end":8400663,"line_start":139,"line_end":139,"column_start":5,"column_end":92}},{"value":"/ return once the condition has been met.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400668,"byte_end":8400711,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400716,"byte_end":8400719,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400724,"byte_end":8400738,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400743,"byte_end":8400746,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400751,"byte_end":8400758,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400763,"byte_end":8400802,"line_start":145,"line_end":145,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400807,"byte_end":8400812,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400817,"byte_end":8400840,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400845,"byte_end":8400848,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400853,"byte_end":8400895,"line_start":149,"line_end":149,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400900,"byte_end":8400924,"line_start":150,"line_end":150,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400929,"byte_end":8400932,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8400937,"byte_end":8400998,"line_start":152,"line_end":152,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401003,"byte_end":8401032,"line_start":153,"line_end":153,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401037,"byte_end":8401040,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401045,"byte_end":8401073,"line_start":155,"line_end":155,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401078,"byte_end":8401113,"line_start":156,"line_end":156,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401118,"byte_end":8401162,"line_start":157,"line_end":157,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401167,"byte_end":8401191,"line_start":158,"line_end":158,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401196,"byte_end":8401256,"line_start":159,"line_end":159,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401261,"byte_end":8401287,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401292,"byte_end":8401299,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401304,"byte_end":8401307,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401312,"byte_end":8401351,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401356,"byte_end":8401386,"line_start":164,"line_end":164,"column_start":5,"column_end":35}},{"value":"/ // As long as the value inside the `Mutex<bool>` is `false`, we wait.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401391,"byte_end":8401464,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/ let _guard = cvar.wait_until(lock.lock().await, |started| { *started }).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401469,"byte_end":8401551,"line_start":166,"line_end":166,"column_start":5,"column_end":87}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401556,"byte_end":8401561,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401566,"byte_end":8401574,"line_start":168,"line_end":168,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401579,"byte_end":8401586,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401591,"byte_end":8401627,"line_start":170,"line_end":170,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4487},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403262,"byte_end":8403274,"line_start":226,"line_end":226,"column_start":18,"column_end":30},"name":"wait_timeout","qualname":"<Condvar>::wait_timeout","value":"fn <'a, T> (&self, guard: MutexGuard<'a, T>, dur: Duration) -> (MutexGuard<'a, T>, WaitTimeoutResult)","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a specified duration.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a specified duration.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8401942,"byte_end":8402037,"line_start":185,"line_end":185,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402042,"byte_end":8402045,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ For these reasons `Condvar::wait_timeout_until` is recommended in most cases.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402050,"byte_end":8402131,"line_start":187,"line_end":187,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402136,"byte_end":8402139,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402144,"byte_end":8402158,"line_start":189,"line_end":189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402163,"byte_end":8402166,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402171,"byte_end":8402178,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402183,"byte_end":8402222,"line_start":192,"line_end":192,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402227,"byte_end":8402232,"line_start":193,"line_end":193,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402237,"byte_end":8402260,"line_start":194,"line_end":194,"column_start":5,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402265,"byte_end":8402293,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402298,"byte_end":8402301,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402306,"byte_end":8402348,"line_start":197,"line_end":197,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402353,"byte_end":8402377,"line_start":198,"line_end":198,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402382,"byte_end":8402385,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402390,"byte_end":8402451,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402456,"byte_end":8402485,"line_start":201,"line_end":201,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402490,"byte_end":8402493,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402498,"byte_end":8402526,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/   let (lock, cvar) = &*pair2;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402531,"byte_end":8402564,"line_start":204,"line_end":204,"column_start":5,"column_end":38}},{"value":"/   let mut started = lock.lock().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402569,"byte_end":8402611,"line_start":205,"line_end":205,"column_start":5,"column_end":47}},{"value":"/   *started = true;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402616,"byte_end":8402638,"line_start":206,"line_end":206,"column_start":5,"column_end":27}},{"value":"/   // We notify the condvar that the value has changed.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402643,"byte_end":8402701,"line_start":207,"line_end":207,"column_start":5,"column_end":63}},{"value":"/   cvar.notify_one();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402706,"byte_end":8402730,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402735,"byte_end":8402742,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402747,"byte_end":8402750,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ // wait for the thread to start up","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402755,"byte_end":8402793,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402798,"byte_end":8402828,"line_start":212,"line_end":212,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402833,"byte_end":8402873,"line_start":213,"line_end":213,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402878,"byte_end":8402888,"line_start":214,"line_end":214,"column_start":5,"column_end":15}},{"value":"/   let result = cvar.wait_timeout(started, Duration::from_millis(10)).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402893,"byte_end":8402972,"line_start":215,"line_end":215,"column_start":5,"column_end":84}},{"value":"/   started = result.0;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8402977,"byte_end":8403002,"line_start":216,"line_end":216,"column_start":5,"column_end":30}},{"value":"/   if *started == true {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403007,"byte_end":8403034,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/       // We received the notification and the value has been updated, we can leave.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403039,"byte_end":8403126,"line_start":218,"line_end":218,"column_start":5,"column_end":92}},{"value":"/       break","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403131,"byte_end":8403146,"line_start":219,"line_end":219,"column_start":5,"column_end":20}},{"value":"/   }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403151,"byte_end":8403158,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403163,"byte_end":8403168,"line_start":221,"line_end":221,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403173,"byte_end":8403178,"line_start":222,"line_end":222,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403183,"byte_end":8403191,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403196,"byte_end":8403203,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403208,"byte_end":8403244,"line_start":225,"line_end":225,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4492},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404914,"byte_end":8404932,"line_start":275,"line_end":275,"column_start":18,"column_end":36},"name":"wait_timeout_until","qualname":"<Condvar>::wait_timeout_until","value":"fn <'a, T, F> (&self, guard: MutexGuard<'a, T>, dur: Duration, condition: F) -> (MutexGuard<'a, T>, WaitTimeoutResult)","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a specified duration.\n Spurious wakes will not cause this function to return.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a specified duration.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403648,"byte_end":8403743,"line_start":238,"line_end":238,"column_start":5,"column_end":100}},{"value":"/ Spurious wakes will not cause this function to return.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403748,"byte_end":8403806,"line_start":239,"line_end":239,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403811,"byte_end":8403814,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403819,"byte_end":8403833,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403838,"byte_end":8403845,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403850,"byte_end":8403889,"line_start":243,"line_end":243,"column_start":5,"column_end":44}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403894,"byte_end":8403917,"line_start":244,"line_end":244,"column_start":5,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403922,"byte_end":8403950,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403955,"byte_end":8403958,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8403963,"byte_end":8404005,"line_start":247,"line_end":247,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404010,"byte_end":8404034,"line_start":248,"line_end":248,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404039,"byte_end":8404042,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404047,"byte_end":8404108,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404113,"byte_end":8404142,"line_start":251,"line_end":251,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404147,"byte_end":8404150,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404155,"byte_end":8404183,"line_start":253,"line_end":253,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404188,"byte_end":8404223,"line_start":254,"line_end":254,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404228,"byte_end":8404272,"line_start":255,"line_end":255,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404277,"byte_end":8404301,"line_start":256,"line_end":256,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404306,"byte_end":8404366,"line_start":257,"line_end":257,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404371,"byte_end":8404397,"line_start":258,"line_end":258,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404402,"byte_end":8404409,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404414,"byte_end":8404417,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ // wait for the thread to start up","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404422,"byte_end":8404460,"line_start":261,"line_end":261,"column_start":5,"column_end":43}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404465,"byte_end":8404495,"line_start":262,"line_end":262,"column_start":5,"column_end":35}},{"value":"/ let result = cvar.wait_timeout_until(","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404500,"byte_end":8404541,"line_start":263,"line_end":263,"column_start":5,"column_end":46}},{"value":"/     lock.lock().await,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404546,"byte_end":8404572,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/     Duration::from_millis(100),","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404577,"byte_end":8404612,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     |&mut started| started,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404617,"byte_end":8404648,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"/ ).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404653,"byte_end":8404665,"line_start":267,"line_end":267,"column_start":5,"column_end":17}},{"value":"/ if result.1.timed_out() {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404670,"byte_end":8404699,"line_start":268,"line_end":268,"column_start":5,"column_end":34}},{"value":"/     // timed-out without the condition ever evaluating to true.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404704,"byte_end":8404771,"line_start":269,"line_end":269,"column_start":5,"column_end":72}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404776,"byte_end":8404781,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/ // access the locked mutex via result.0","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404786,"byte_end":8404829,"line_start":271,"line_end":271,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404834,"byte_end":8404843,"line_start":272,"line_end":272,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404848,"byte_end":8404855,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8404860,"byte_end":8404896,"line_start":274,"line_end":274,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4498},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406287,"byte_end":8406297,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Condvar>::notify_one","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Wakes up one blocked task on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up one blocked task on this condvar.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405396,"byte_end":8405442,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405447,"byte_end":8405450,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405455,"byte_end":8405469,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405474,"byte_end":8405477,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405482,"byte_end":8405489,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405494,"byte_end":8405545,"line_start":296,"line_end":296,"column_start":5,"column_end":56}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405550,"byte_end":8405573,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405578,"byte_end":8405581,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405586,"byte_end":8405628,"line_start":299,"line_end":299,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405633,"byte_end":8405657,"line_start":300,"line_end":300,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405662,"byte_end":8405665,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405670,"byte_end":8405731,"line_start":302,"line_end":302,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405736,"byte_end":8405765,"line_start":303,"line_end":303,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405770,"byte_end":8405773,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405778,"byte_end":8405806,"line_start":305,"line_end":305,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405811,"byte_end":8405846,"line_start":306,"line_end":306,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405851,"byte_end":8405895,"line_start":307,"line_end":307,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405900,"byte_end":8405924,"line_start":308,"line_end":308,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405929,"byte_end":8405989,"line_start":309,"line_end":309,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_one();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8405994,"byte_end":8406020,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406025,"byte_end":8406032,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406037,"byte_end":8406040,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406045,"byte_end":8406084,"line_start":313,"line_end":313,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406089,"byte_end":8406119,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406124,"byte_end":8406164,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/ while !*started {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406169,"byte_end":8406190,"line_start":316,"line_end":316,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406195,"byte_end":8406238,"line_start":317,"line_end":317,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406243,"byte_end":8406248,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ # }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406253,"byte_end":8406263,"line_start":319,"line_end":319,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406268,"byte_end":8406275,"line_start":320,"line_end":320,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4499},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8407334,"byte_end":8407344,"line_start":357,"line_end":357,"column_start":12,"column_end":22},"name":"notify_all","qualname":"<Condvar>::notify_all","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Wakes up all blocked tasks on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up all blocked tasks on this condvar.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406352,"byte_end":8406399,"line_start":325,"line_end":325,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406404,"byte_end":8406407,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406412,"byte_end":8406426,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406431,"byte_end":8406438,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # fn main() { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406443,"byte_end":8406494,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406499,"byte_end":8406504,"line_start":330,"line_end":330,"column_start":5,"column_end":10}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406509,"byte_end":8406532,"line_start":331,"line_end":331,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406537,"byte_end":8406540,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ use async_std::sync::{Mutex, Condvar};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406545,"byte_end":8406587,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406592,"byte_end":8406616,"line_start":334,"line_end":334,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406621,"byte_end":8406624,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406629,"byte_end":8406690,"line_start":336,"line_end":336,"column_start":5,"column_end":66}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406695,"byte_end":8406724,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406729,"byte_end":8406732,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406737,"byte_end":8406765,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/     let (lock, cvar) = &*pair2;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406770,"byte_end":8406805,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/     let mut started = lock.lock().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406810,"byte_end":8406854,"line_start":341,"line_end":341,"column_start":5,"column_end":49}},{"value":"/     *started = true;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406859,"byte_end":8406883,"line_start":342,"line_end":342,"column_start":5,"column_end":29}},{"value":"/     // We notify the condvar that the value has changed.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406888,"byte_end":8406948,"line_start":343,"line_end":343,"column_start":5,"column_end":65}},{"value":"/     cvar.notify_all();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406953,"byte_end":8406979,"line_start":344,"line_end":344,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406984,"byte_end":8406991,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8406996,"byte_end":8406999,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ // Wait for the thread to start up.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8407004,"byte_end":8407043,"line_start":347,"line_end":347,"column_start":5,"column_end":44}},{"value":"/ let (lock, cvar) = &*pair;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8407048,"byte_end":8407078,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ let mut started = lock.lock().await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8407083,"byte_end":8407123,"line_start":349,"line_end":349,"column_start":5,"column_end":45}},{"value":"/ // As long as the value inside the `Mutex<bool>` is `false`, we wait.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8407128,"byte_end":8407201,"line_start":350,"line_end":350,"column_start":5,"column_end":78}},{"value":"/ while !*started {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8407206,"byte_end":8407227,"line_start":351,"line_end":351,"column_start":5,"column_end":26}},{"value":"/     started = cvar.wait(started).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8407232,"byte_end":8407275,"line_start":352,"line_end":352,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8407280,"byte_end":8407285,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8407290,"byte_end":8407295,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/ # }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8407300,"byte_end":8407310,"line_start":355,"line_end":355,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8407315,"byte_end":8407322,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":4545},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410979,"byte_end":8410986,"line_start":63,"line_end":63,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::channel::channel","value":"fn <T> (cap: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded multi-producer multi-consumer channel.","sig":null,"attributes":[{"value":"/ Creates a bounded multi-producer multi-consumer channel.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8409701,"byte_end":8409761,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8409762,"byte_end":8409765,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This channel has a buffer that can hold at most `cap` messages at a time.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8409766,"byte_end":8409843,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8409844,"byte_end":8409847,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Senders and receivers can be cloned. When all senders associated with a channel get dropped, it","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8409848,"byte_end":8409947,"line_start":24,"line_end":24,"column_start":1,"column_end":100}},{"value":"/ becomes closed. Receive operations on a closed and empty channel return `None` instead of","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8409948,"byte_end":8410041,"line_start":25,"line_end":25,"column_start":1,"column_end":94}},{"value":"/ trying to await a message.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410042,"byte_end":8410072,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410073,"byte_end":8410076,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410077,"byte_end":8410089,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410090,"byte_end":8410093,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ If `cap` is zero, this function will panic.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410094,"byte_end":8410141,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410142,"byte_end":8410145,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410146,"byte_end":8410160,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410161,"byte_end":8410164,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410165,"byte_end":8410172,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), async_std::sync::RecvError> {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410173,"byte_end":8410232,"line_start":35,"line_end":35,"column_start":1,"column_end":60}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410233,"byte_end":8410272,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410273,"byte_end":8410278,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410279,"byte_end":8410307,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410308,"byte_end":8410311,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410312,"byte_end":8410345,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410346,"byte_end":8410370,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410371,"byte_end":8410374,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410375,"byte_end":8410403,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410404,"byte_end":8410407,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // This call returns immediately because there is enough space in the channel.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410408,"byte_end":8410490,"line_start":45,"line_end":45,"column_start":1,"column_end":83}},{"value":"/ s.send(1usize).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410491,"byte_end":8410516,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410517,"byte_end":8410520,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410521,"byte_end":8410549,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/     // This call will have to wait because the channel is full.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410550,"byte_end":8410617,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/     // It will be able to complete only after the first message is received.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410618,"byte_end":8410698,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/     s.send(2).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410699,"byte_end":8410723,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410724,"byte_end":8410731,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410732,"byte_end":8410735,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ task::sleep(Duration::from_secs(1)).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410736,"byte_end":8410782,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(r.recv().await?, 1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410783,"byte_end":8410818,"line_start":55,"line_end":55,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(r.recv().await?, 2);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410819,"byte_end":8410854,"line_start":56,"line_end":56,"column_start":1,"column_end":36}},{"value":"/ # Ok(())","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410855,"byte_end":8410867,"line_start":57,"line_end":57,"column_start":1,"column_end":13}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410868,"byte_end":8410873,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410874,"byte_end":8410884,"line_start":59,"line_end":59,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410885,"byte_end":8410892,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8410893,"byte_end":8410921,"line_start":61,"line_end":61,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":4547},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411937,"byte_end":8411943,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::channel::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":4549}],"decl_id":null,"docs":" The sending side of a channel.","sig":null,"attributes":[{"value":"/ The sending side of a channel.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411235,"byte_end":8411269,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411270,"byte_end":8411273,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`channel`] function. See its","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411274,"byte_end":8411337,"line_start":77,"line_end":77,"column_start":1,"column_end":64}},{"value":"/ documentation for more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411338,"byte_end":8411365,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411366,"byte_end":8411369,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [`channel`]: fn.channel.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411370,"byte_end":8411402,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411403,"byte_end":8411406,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411407,"byte_end":8411421,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411422,"byte_end":8411425,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411426,"byte_end":8411433,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411434,"byte_end":8411473,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411474,"byte_end":8411479,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411480,"byte_end":8411513,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411514,"byte_end":8411538,"line_start":88,"line_end":88,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411539,"byte_end":8411542,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ let (s1, r) = channel(100);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411543,"byte_end":8411574,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/ let s2 = s1.clone();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411575,"byte_end":8411599,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411600,"byte_end":8411603,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async move { s1.send(1).await });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411604,"byte_end":8411653,"line_start":93,"line_end":93,"column_start":1,"column_end":50}},{"value":"/ task::spawn(async move { s2.send(2).await });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411654,"byte_end":8411703,"line_start":94,"line_end":94,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411704,"byte_end":8411707,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ let msg1 = r.recv().await.unwrap();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411708,"byte_end":8411747,"line_start":96,"line_end":96,"column_start":1,"column_end":40}},{"value":"/ let msg2 = r.recv().await.unwrap();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411748,"byte_end":8411787,"line_start":97,"line_end":97,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411788,"byte_end":8411791,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(msg1 + msg2, 3);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411792,"byte_end":8411823,"line_start":99,"line_end":99,"column_start":1,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411824,"byte_end":8411829,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411830,"byte_end":8411838,"line_start":101,"line_end":101,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411839,"byte_end":8411846,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8411847,"byte_end":8411875,"line_start":103,"line_end":103,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4552},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412755,"byte_end":8412759,"line_start":138,"line_end":138,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"fn (&self, msg: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sends a message into the channel.","sig":null,"attributes":[{"value":"/ Sends a message into the channel.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412033,"byte_end":8412070,"line_start":111,"line_end":111,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412075,"byte_end":8412078,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, this method will wait until there is space in the channel.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412083,"byte_end":8412169,"line_start":113,"line_end":113,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412174,"byte_end":8412177,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412182,"byte_end":8412196,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412201,"byte_end":8412204,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412209,"byte_end":8412216,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), async_std::sync::RecvError> {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412221,"byte_end":8412280,"line_start":118,"line_end":118,"column_start":5,"column_end":64}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412285,"byte_end":8412324,"line_start":119,"line_end":119,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412329,"byte_end":8412334,"line_start":120,"line_end":120,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412339,"byte_end":8412372,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412377,"byte_end":8412401,"line_start":122,"line_end":122,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412406,"byte_end":8412409,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412414,"byte_end":8412442,"line_start":124,"line_end":124,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412447,"byte_end":8412450,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412455,"byte_end":8412483,"line_start":126,"line_end":126,"column_start":5,"column_end":33}},{"value":"/     s.send(1).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412488,"byte_end":8412512,"line_start":127,"line_end":127,"column_start":5,"column_end":29}},{"value":"/     s.send(2).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412517,"byte_end":8412541,"line_start":128,"line_end":128,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412546,"byte_end":8412553,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412558,"byte_end":8412561,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r.recv().await?, 1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412566,"byte_end":8412601,"line_start":131,"line_end":131,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(r.recv().await?, 2);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412606,"byte_end":8412641,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/ assert!(r.recv().await.is_err());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412646,"byte_end":8412683,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412688,"byte_end":8412693,"line_start":134,"line_end":134,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412698,"byte_end":8412710,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/ # }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412715,"byte_end":8412725,"line_start":136,"line_end":136,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412730,"byte_end":8412737,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4570},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415355,"byte_end":8415363,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"fn (&self, msg: T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message into the channel.","sig":null,"attributes":[{"value":"/ Attempts to send a message into the channel.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8414925,"byte_end":8414973,"line_start":200,"line_end":200,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8414978,"byte_end":8414981,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, this method will return an error.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8414986,"byte_end":8415047,"line_start":202,"line_end":202,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415052,"byte_end":8415055,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415060,"byte_end":8415074,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415079,"byte_end":8415082,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415087,"byte_end":8415094,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415099,"byte_end":8415138,"line_start":207,"line_end":207,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415143,"byte_end":8415148,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415153,"byte_end":8415186,"line_start":209,"line_end":209,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415191,"byte_end":8415194,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415199,"byte_end":8415227,"line_start":211,"line_end":211,"column_start":5,"column_end":33}},{"value":"/ assert!(s.try_send(1).is_ok());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415232,"byte_end":8415267,"line_start":212,"line_end":212,"column_start":5,"column_end":40}},{"value":"/ assert!(s.try_send(2).is_err());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415272,"byte_end":8415308,"line_start":213,"line_end":213,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415313,"byte_end":8415318,"line_start":214,"line_end":214,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415323,"byte_end":8415331,"line_start":215,"line_end":215,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415336,"byte_end":8415343,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4571},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415685,"byte_end":8415693,"line_start":231,"line_end":231,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Sender<T>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the channel capacity.","sig":null,"attributes":[{"value":"/ Returns the channel capacity.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415458,"byte_end":8415491,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415496,"byte_end":8415499,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415504,"byte_end":8415518,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415523,"byte_end":8415526,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415531,"byte_end":8415538,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415543,"byte_end":8415576,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415581,"byte_end":8415584,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let (s, _) = channel::<i32>(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415589,"byte_end":8415624,"line_start":228,"line_end":228,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(s.capacity(), 5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415629,"byte_end":8415661,"line_start":229,"line_end":229,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415666,"byte_end":8415673,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4572},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416114,"byte_end":8416122,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Sender<T>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is empty.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is empty.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415748,"byte_end":8415791,"line_start":235,"line_end":235,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415796,"byte_end":8415799,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415804,"byte_end":8415818,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415823,"byte_end":8415826,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415831,"byte_end":8415838,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415843,"byte_end":8415882,"line_start":240,"line_end":240,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415887,"byte_end":8415892,"line_start":241,"line_end":241,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415897,"byte_end":8415930,"line_start":242,"line_end":242,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415935,"byte_end":8415938,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415943,"byte_end":8415971,"line_start":244,"line_end":244,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415976,"byte_end":8415979,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ assert!(s.is_empty());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8415984,"byte_end":8416010,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/ s.send(0).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416015,"byte_end":8416035,"line_start":247,"line_end":247,"column_start":5,"column_end":25}},{"value":"/ assert!(!s.is_empty());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416040,"byte_end":8416067,"line_start":248,"line_end":248,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416072,"byte_end":8416077,"line_start":249,"line_end":249,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416082,"byte_end":8416090,"line_start":250,"line_end":250,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416095,"byte_end":8416102,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4573},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416546,"byte_end":8416553,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"name":"is_full","qualname":"<Sender<T>>::is_full","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is full.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is full.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416183,"byte_end":8416225,"line_start":256,"line_end":256,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416230,"byte_end":8416233,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416238,"byte_end":8416252,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416257,"byte_end":8416260,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416265,"byte_end":8416272,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416277,"byte_end":8416316,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416321,"byte_end":8416326,"line_start":262,"line_end":262,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416331,"byte_end":8416364,"line_start":263,"line_end":263,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416369,"byte_end":8416372,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416377,"byte_end":8416405,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416410,"byte_end":8416413,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert!(!s.is_full());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416418,"byte_end":8416444,"line_start":267,"line_end":267,"column_start":5,"column_end":31}},{"value":"/ s.send(0).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416449,"byte_end":8416469,"line_start":268,"line_end":268,"column_start":5,"column_end":25}},{"value":"/ assert!(s.is_full());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416474,"byte_end":8416499,"line_start":269,"line_end":269,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416504,"byte_end":8416509,"line_start":270,"line_end":270,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416514,"byte_end":8416522,"line_start":271,"line_end":271,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416527,"byte_end":8416534,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4574},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8417012,"byte_end":8417015,"line_start":295,"line_end":295,"column_start":12,"column_end":15},"name":"len","qualname":"<Sender<T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages in the channel.","sig":null,"attributes":[{"value":"/ Returns the number of messages in the channel.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416613,"byte_end":8416663,"line_start":277,"line_end":277,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416668,"byte_end":8416671,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416676,"byte_end":8416690,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416695,"byte_end":8416698,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416703,"byte_end":8416710,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416715,"byte_end":8416754,"line_start":282,"line_end":282,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416759,"byte_end":8416764,"line_start":283,"line_end":283,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416769,"byte_end":8416802,"line_start":284,"line_end":284,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416807,"byte_end":8416810,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(2);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416815,"byte_end":8416843,"line_start":286,"line_end":286,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(s.len(), 0);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416848,"byte_end":8416875,"line_start":287,"line_end":287,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416880,"byte_end":8416883,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ s.send(1).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416888,"byte_end":8416908,"line_start":289,"line_end":289,"column_start":5,"column_end":25}},{"value":"/ s.send(2).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416913,"byte_end":8416933,"line_start":290,"line_end":290,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(s.len(), 2);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416938,"byte_end":8416965,"line_start":291,"line_end":291,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416970,"byte_end":8416975,"line_start":292,"line_end":292,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416980,"byte_end":8416988,"line_start":293,"line_end":293,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8416993,"byte_end":8417000,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4584},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418912,"byte_end":8418920,"line_start":366,"line_end":366,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::channel::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":4586},{"krate":0,"index":4587}],"decl_id":null,"docs":" The receiving side of a channel.","sig":null,"attributes":[{"value":"/ The receiving side of a channel.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8417882,"byte_end":8417918,"line_start":330,"line_end":330,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8417919,"byte_end":8417922,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ This type receives messages by calling `recv`. But it also implements the [`Stream`] trait,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8417923,"byte_end":8418018,"line_start":332,"line_end":332,"column_start":1,"column_end":96}},{"value":"/ which means it can act as an asynchronous iterator. This struct is created by the [`channel`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418019,"byte_end":8418116,"line_start":333,"line_end":333,"column_start":1,"column_end":98}},{"value":"/ function. See its documentation for more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418117,"byte_end":8418162,"line_start":334,"line_end":334,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418163,"byte_end":8418166,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ [`channel`]: fn.channel.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418167,"byte_end":8418199,"line_start":336,"line_end":336,"column_start":1,"column_end":33}},{"value":"/ [`Stream`]: ../stream/trait.Stream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418200,"byte_end":8418243,"line_start":337,"line_end":337,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418244,"byte_end":8418247,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418248,"byte_end":8418262,"line_start":339,"line_end":339,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418263,"byte_end":8418266,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418267,"byte_end":8418274,"line_start":341,"line_end":341,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> Result<(), async_std::sync::RecvError> {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418275,"byte_end":8418334,"line_start":342,"line_end":342,"column_start":1,"column_end":60}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418335,"byte_end":8418374,"line_start":343,"line_end":343,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418375,"byte_end":8418380,"line_start":344,"line_end":344,"column_start":1,"column_end":6}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418381,"byte_end":8418409,"line_start":345,"line_end":345,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418410,"byte_end":8418413,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418414,"byte_end":8418447,"line_start":347,"line_end":347,"column_start":1,"column_end":34}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418448,"byte_end":8418472,"line_start":348,"line_end":348,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418473,"byte_end":8418476,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ let (s, r) = channel(100);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418477,"byte_end":8418507,"line_start":350,"line_end":350,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418508,"byte_end":8418511,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418512,"byte_end":8418540,"line_start":352,"line_end":352,"column_start":1,"column_end":29}},{"value":"/     s.send(1usize).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418541,"byte_end":8418570,"line_start":353,"line_end":353,"column_start":1,"column_end":30}},{"value":"/     task::sleep(Duration::from_secs(1)).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418571,"byte_end":8418621,"line_start":354,"line_end":354,"column_start":1,"column_end":51}},{"value":"/     s.send(2).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418622,"byte_end":8418646,"line_start":355,"line_end":355,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418647,"byte_end":8418654,"line_start":356,"line_end":356,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418655,"byte_end":8418658,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(r.recv().await?, 1); // Received immediately.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418659,"byte_end":8418719,"line_start":358,"line_end":358,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(r.recv().await?, 2); // Received after 1 second.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418720,"byte_end":8418783,"line_start":359,"line_end":359,"column_start":1,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418784,"byte_end":8418789,"line_start":360,"line_end":360,"column_start":1,"column_end":6}},{"value":"/ # Ok(())","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418790,"byte_end":8418802,"line_start":361,"line_end":361,"column_start":1,"column_end":13}},{"value":"/ # }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418803,"byte_end":8418813,"line_start":362,"line_end":362,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418814,"byte_end":8418821,"line_start":363,"line_end":363,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8418822,"byte_end":8418850,"line_start":364,"line_end":364,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4590},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419973,"byte_end":8419977,"line_start":405,"line_end":405,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn (&self) -> Result<T, RecvError>","parent":null,"children":[],"decl_id":null,"docs":" Receives a message from the channel.","sig":null,"attributes":[{"value":"/ Receives a message from the channel.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419111,"byte_end":8419151,"line_start":375,"line_end":375,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419156,"byte_end":8419159,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ If the channel is empty and still has senders, this method","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419164,"byte_end":8419226,"line_start":377,"line_end":377,"column_start":5,"column_end":67}},{"value":"/ will wait until a message is sent into it. Once all senders","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419231,"byte_end":8419294,"line_start":378,"line_end":378,"column_start":5,"column_end":68}},{"value":"/ have been dropped it will return `None`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419299,"byte_end":8419343,"line_start":379,"line_end":379,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419348,"byte_end":8419351,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419356,"byte_end":8419370,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419375,"byte_end":8419378,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419383,"byte_end":8419390,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ # fn main() -> Result<(), async_std::sync::RecvError> {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419395,"byte_end":8419454,"line_start":384,"line_end":384,"column_start":5,"column_end":64}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419459,"byte_end":8419498,"line_start":385,"line_end":385,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419503,"byte_end":8419508,"line_start":386,"line_end":386,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419513,"byte_end":8419546,"line_start":387,"line_end":387,"column_start":5,"column_end":38}},{"value":"/ use async_std::task;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419551,"byte_end":8419575,"line_start":388,"line_end":388,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419580,"byte_end":8419583,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419588,"byte_end":8419616,"line_start":390,"line_end":390,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419621,"byte_end":8419624,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ task::spawn(async move {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419629,"byte_end":8419657,"line_start":392,"line_end":392,"column_start":5,"column_end":33}},{"value":"/     s.send(1usize).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419662,"byte_end":8419691,"line_start":393,"line_end":393,"column_start":5,"column_end":34}},{"value":"/     s.send(2).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419696,"byte_end":8419720,"line_start":394,"line_end":394,"column_start":5,"column_end":29}},{"value":"/     // Then we drop the sender","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419725,"byte_end":8419759,"line_start":395,"line_end":395,"column_start":5,"column_end":39}},{"value":"/ });","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419764,"byte_end":8419771,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419776,"byte_end":8419779,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(r.recv().await?, 1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419784,"byte_end":8419819,"line_start":398,"line_end":398,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(r.recv().await?, 2);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419824,"byte_end":8419859,"line_start":399,"line_end":399,"column_start":5,"column_end":40}},{"value":"/ assert!(r.recv().await.is_err());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419864,"byte_end":8419901,"line_start":400,"line_end":400,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419906,"byte_end":8419911,"line_start":401,"line_end":401,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419916,"byte_end":8419928,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/ # }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419933,"byte_end":8419943,"line_start":403,"line_end":403,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419948,"byte_end":8419955,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4605},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421455,"byte_end":8421463,"line_start":460,"line_end":460,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message from the channel.","sig":null,"attributes":[{"value":"/ Attempts to receive a message from the channel.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8420980,"byte_end":8421031,"line_start":440,"line_end":440,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421036,"byte_end":8421039,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ If the channel is empty, this method will return an error.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421044,"byte_end":8421106,"line_start":442,"line_end":442,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421111,"byte_end":8421114,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421119,"byte_end":8421133,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421138,"byte_end":8421141,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421146,"byte_end":8421153,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421158,"byte_end":8421197,"line_start":447,"line_end":447,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421202,"byte_end":8421207,"line_start":448,"line_end":448,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421212,"byte_end":8421245,"line_start":449,"line_end":449,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421250,"byte_end":8421253,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421258,"byte_end":8421286,"line_start":451,"line_end":451,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421291,"byte_end":8421294,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ s.send(1u8).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421299,"byte_end":8421321,"line_start":453,"line_end":453,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421326,"byte_end":8421329,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ assert!(r.try_recv().is_ok());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421334,"byte_end":8421368,"line_start":455,"line_end":455,"column_start":5,"column_end":39}},{"value":"/ assert!(r.try_recv().is_err());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421373,"byte_end":8421408,"line_start":456,"line_end":456,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421413,"byte_end":8421418,"line_start":457,"line_end":457,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421423,"byte_end":8421431,"line_start":458,"line_end":458,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421436,"byte_end":8421443,"line_start":459,"line_end":459,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4606},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421770,"byte_end":8421778,"line_start":474,"line_end":474,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Receiver<T>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the channel capacity.","sig":null,"attributes":[{"value":"/ Returns the channel capacity.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421543,"byte_end":8421576,"line_start":464,"line_end":464,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421581,"byte_end":8421584,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421589,"byte_end":8421603,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421608,"byte_end":8421611,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421616,"byte_end":8421623,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421628,"byte_end":8421661,"line_start":469,"line_end":469,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421666,"byte_end":8421669,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let (_, r) = channel::<i32>(5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421674,"byte_end":8421709,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(r.capacity(), 5);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421714,"byte_end":8421746,"line_start":472,"line_end":472,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421751,"byte_end":8421758,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4607},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422199,"byte_end":8422207,"line_start":495,"line_end":495,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Receiver<T>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is empty.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is empty.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421833,"byte_end":8421876,"line_start":478,"line_end":478,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421881,"byte_end":8421884,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421889,"byte_end":8421903,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421908,"byte_end":8421911,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421916,"byte_end":8421923,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421928,"byte_end":8421967,"line_start":483,"line_end":483,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421972,"byte_end":8421977,"line_start":484,"line_end":484,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8421982,"byte_end":8422015,"line_start":485,"line_end":485,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422020,"byte_end":8422023,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422028,"byte_end":8422056,"line_start":487,"line_end":487,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422061,"byte_end":8422064,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ assert!(r.is_empty());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422069,"byte_end":8422095,"line_start":489,"line_end":489,"column_start":5,"column_end":31}},{"value":"/ s.send(0).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422100,"byte_end":8422120,"line_start":490,"line_end":490,"column_start":5,"column_end":25}},{"value":"/ assert!(!r.is_empty());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422125,"byte_end":8422152,"line_start":491,"line_end":491,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422157,"byte_end":8422162,"line_start":492,"line_end":492,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422167,"byte_end":8422175,"line_start":493,"line_end":493,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422180,"byte_end":8422187,"line_start":494,"line_end":494,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4608},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422631,"byte_end":8422638,"line_start":516,"line_end":516,"column_start":12,"column_end":19},"name":"is_full","qualname":"<Receiver<T>>::is_full","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the channel is full.","sig":null,"attributes":[{"value":"/ Returns `true` if the channel is full.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422268,"byte_end":8422310,"line_start":499,"line_end":499,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422315,"byte_end":8422318,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422323,"byte_end":8422337,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422342,"byte_end":8422345,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422350,"byte_end":8422357,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422362,"byte_end":8422401,"line_start":504,"line_end":504,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422406,"byte_end":8422411,"line_start":505,"line_end":505,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422416,"byte_end":8422449,"line_start":506,"line_end":506,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422454,"byte_end":8422457,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(1);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422462,"byte_end":8422490,"line_start":508,"line_end":508,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422495,"byte_end":8422498,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ assert!(!r.is_full());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422503,"byte_end":8422529,"line_start":510,"line_end":510,"column_start":5,"column_end":31}},{"value":"/ s.send(0).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422534,"byte_end":8422554,"line_start":511,"line_end":511,"column_start":5,"column_end":25}},{"value":"/ assert!(r.is_full());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422559,"byte_end":8422584,"line_start":512,"line_end":512,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422589,"byte_end":8422594,"line_start":513,"line_end":513,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422599,"byte_end":8422607,"line_start":514,"line_end":514,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422612,"byte_end":8422619,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4609},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8423097,"byte_end":8423100,"line_start":538,"line_end":538,"column_start":12,"column_end":15},"name":"len","qualname":"<Receiver<T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of messages in the channel.","sig":null,"attributes":[{"value":"/ Returns the number of messages in the channel.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422698,"byte_end":8422748,"line_start":520,"line_end":520,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422753,"byte_end":8422756,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422761,"byte_end":8422775,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422780,"byte_end":8422783,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422788,"byte_end":8422795,"line_start":524,"line_end":524,"column_start":5,"column_end":12}},{"value":"/ # async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422800,"byte_end":8422839,"line_start":525,"line_end":525,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422844,"byte_end":8422849,"line_start":526,"line_end":526,"column_start":5,"column_end":10}},{"value":"/ use async_std::sync::channel;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422854,"byte_end":8422887,"line_start":527,"line_end":527,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422892,"byte_end":8422895,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ let (s, r) = channel(2);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422900,"byte_end":8422928,"line_start":529,"line_end":529,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(r.len(), 0);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422933,"byte_end":8422960,"line_start":530,"line_end":530,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422965,"byte_end":8422968,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ s.send(1).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422973,"byte_end":8422993,"line_start":532,"line_end":532,"column_start":5,"column_end":25}},{"value":"/ s.send(2).await;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8422998,"byte_end":8423018,"line_start":533,"line_end":533,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(r.len(), 2);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8423023,"byte_end":8423050,"line_start":534,"line_end":534,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8423055,"byte_end":8423060,"line_start":535,"line_end":535,"column_start":5,"column_end":10}},{"value":"/ # })","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8423065,"byte_end":8423073,"line_start":536,"line_end":536,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8423078,"byte_end":8423085,"line_start":537,"line_end":537,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4711},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8439091,"byte_end":8439095,"line_start":998,"line_end":998,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::channel::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":4709},"children":[],"decl_id":null,"docs":" The channel is full but not disconnected.\n","sig":null,"attributes":[{"value":"/ The channel is full but not disconnected.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8439041,"byte_end":8439086,"line_start":997,"line_end":997,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4714},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8439151,"byte_end":8439163,"line_start":1001,"line_end":1001,"column_start":5,"column_end":17},"name":"Disconnected","qualname":"::sync::channel::TrySendError::Disconnected","value":"TrySendError::Disconnected(T)","parent":{"krate":0,"index":4709},"children":[],"decl_id":null,"docs":" The channel is full and disconnected.\n","sig":null,"attributes":[{"value":"/ The channel is full and disconnected.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8439105,"byte_end":8439146,"line_start":1000,"line_end":1000,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":4709},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8439019,"byte_end":8439031,"line_start":996,"line_end":996,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::channel::TrySendError","value":"TrySendError::{Full, Disconnected}","parent":null,"children":[{"krate":0,"index":4711},{"krate":0,"index":4714}],"decl_id":null,"docs":" An error returned from the `try_send` method.\n","sig":null,"attributes":[{"value":"/ An error returned from the `try_send` method.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8438856,"byte_end":8438905,"line_start":992,"line_end":992,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8438906,"byte_end":8438934,"line_start":993,"line_end":993,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6719},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8440020,"byte_end":8440025,"line_start":1030,"line_end":1030,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::channel::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6718},"children":[],"decl_id":null,"docs":" The channel is empty but not disconnected.\n","sig":null,"attributes":[{"value":"/ The channel is empty but not disconnected.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8439969,"byte_end":8440015,"line_start":1029,"line_end":1029,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6721},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8440079,"byte_end":8440091,"line_start":1033,"line_end":1033,"column_start":5,"column_end":17},"name":"Disconnected","qualname":"::sync::channel::TryRecvError::Disconnected","value":"TryRecvError::Disconnected","parent":{"krate":0,"index":6718},"children":[],"decl_id":null,"docs":" The channel is empty and disconnected.\n","sig":null,"attributes":[{"value":"/ The channel is empty and disconnected.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8440032,"byte_end":8440074,"line_start":1032,"line_end":1032,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":6718},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8439950,"byte_end":8439962,"line_start":1028,"line_end":1028,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::channel::TryRecvError","value":"TryRecvError::{Empty, Disconnected}","parent":null,"children":[{"krate":0,"index":6719},{"krate":0,"index":6721}],"decl_id":null,"docs":" An error returned from the `try_recv` method.\n","sig":null,"attributes":[{"value":"/ An error returned from the `try_recv` method.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8439780,"byte_end":8439829,"line_start":1024,"line_end":1024,"column_start":1,"column_end":50}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8439830,"byte_end":8439858,"line_start":1025,"line_end":1025,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":6708},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8440593,"byte_end":8440602,"line_start":1051,"line_end":1051,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::channel::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error returned from the `recv` method.\n","sig":null,"attributes":[{"value":"/ An error returned from the `recv` method.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8440425,"byte_end":8440470,"line_start":1047,"line_end":1047,"column_start":1,"column_end":46}},{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8440471,"byte_end":8440499,"line_start":1048,"line_end":1048,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":4744},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fs","qualname":"::fs","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","parent":null,"children":[{"krate":0,"index":4745},{"krate":0,"index":4746},{"krate":0,"index":4747},{"krate":0,"index":4748},{"krate":0,"index":4749},{"krate":0,"index":4750},{"krate":0,"index":4751},{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4755},{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4758},{"krate":0,"index":4759},{"krate":0,"index":4760},{"krate":0,"index":4761},{"krate":0,"index":4762},{"krate":0,"index":4763},{"krate":0,"index":4764},{"krate":0,"index":4765},{"krate":0,"index":4766},{"krate":0,"index":4767},{"krate":0,"index":4768},{"krate":0,"index":4769},{"krate":0,"index":4770},{"krate":0,"index":4783},{"krate":0,"index":4795},{"krate":0,"index":4806},{"krate":0,"index":4817},{"krate":0,"index":4830},{"krate":0,"index":4859},{"krate":0,"index":5024},{"krate":0,"index":5025},{"krate":0,"index":5037},{"krate":0,"index":5046},{"krate":0,"index":5067},{"krate":0,"index":5068},{"krate":0,"index":5079},{"krate":0,"index":5105},{"krate":0,"index":5118},{"krate":0,"index":5129},{"krate":0,"index":5140},{"krate":0,"index":5151},{"krate":0,"index":5162},{"krate":0,"index":5174},{"krate":0,"index":5184},{"krate":0,"index":5194}],"decl_id":null,"docs":" Filesystem manipulation operations.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":16457,"byte_end":16484,"line_start":232,"line_end":232,"column_start":13,"column_end":40}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":10670,"byte_end":10704,"line_start":297,"line_end":297,"column_start":5,"column_end":39}},{"value":"! Filesystem manipulation operations.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8440784,"byte_end":8440823,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8440824,"byte_end":8440827,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::fs`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8440828,"byte_end":8440879,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8440880,"byte_end":8440883,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [`os::unix::fs`]: ../os/unix/fs/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8440884,"byte_end":8440930,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"! [`os::windows::fs`]: ../os/windows/fs/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8440931,"byte_end":8440983,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"! [`std::fs`]: https://doc.rust-lang.org/std/fs/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8440984,"byte_end":8441044,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441045,"byte_end":8441048,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Platform-specific extensions","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441049,"byte_end":8441083,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441084,"byte_end":8441087,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! * Unix: use the [`os::unix::fs`] module.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441088,"byte_end":8441132,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"! * Windows: use the [`os::windows::fs`] module.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441133,"byte_end":8441183,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441184,"byte_end":8441187,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441188,"byte_end":8441202,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441203,"byte_end":8441206,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! Create a new file and write some bytes to it:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441207,"byte_end":8441256,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441257,"byte_end":8441260,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441261,"byte_end":8441274,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441275,"byte_end":8441349,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441350,"byte_end":8441355,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"! use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441356,"byte_end":8441384,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"! use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441385,"byte_end":8441415,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441416,"byte_end":8441419,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441420,"byte_end":8441468,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"! file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441469,"byte_end":8441513,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441514,"byte_end":8441519,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"! # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441520,"byte_end":8441537,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/mod.rs","byte_start":8441538,"byte_end":8441545,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4777},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443607,"byte_end":8443619,"line_start":34,"line_end":34,"column_start":14,"column_end":26},"name":"canonicalize","qualname":"::fs::canonicalize::canonicalize","value":"fn <P> (path: P) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8442805,"byte_end":8442846,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8442847,"byte_end":8442850,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and symbolic","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8442851,"byte_end":8442949,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ links resolved.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8442950,"byte_end":8442969,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8442970,"byte_end":8442973,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::canonicalize`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8442974,"byte_end":8443041,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443042,"byte_end":8443045,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::canonicalize`]: https://doc.rust-lang.org/std/fs/fn.canonicalize.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443046,"byte_end":8443130,"line_start":13,"line_end":13,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443131,"byte_end":8443134,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443135,"byte_end":8443147,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443148,"byte_end":8443151,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443152,"byte_end":8443210,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443211,"byte_end":8443214,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443215,"byte_end":8443276,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * A non-final component in `path` is not a directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443277,"byte_end":8443334,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443335,"byte_end":8443371,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443372,"byte_end":8443375,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443376,"byte_end":8443390,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443391,"byte_end":8443394,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443395,"byte_end":8443408,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443409,"byte_end":8443483,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443484,"byte_end":8443489,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443490,"byte_end":8443512,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443513,"byte_end":8443516,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let path = fs::canonicalize(\".\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443517,"byte_end":8443561,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443562,"byte_end":8443567,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443568,"byte_end":8443585,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/canonicalize.rs","byte_start":8443586,"byte_end":8443593,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4788},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8445209,"byte_end":8445213,"line_start":42,"line_end":42,"column_start":14,"column_end":18},"name":"copy","qualname":"::fs::copy::copy","value":"fn <P, Q> (from: P, to: Q) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Copies the contents and permissions of a file to a new location.","sig":null,"attributes":[{"value":"/ Copies the contents and permissions of a file to a new location.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444011,"byte_end":8444079,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444080,"byte_end":8444083,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ On success, the total number of bytes copied is returned and equals the length of the `to` file","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444084,"byte_end":8444183,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ after this operation.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444184,"byte_end":8444209,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444210,"byte_end":8444213,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The old contents of `to` will be overwritten. If `from` and `to` both point to the same file,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444214,"byte_end":8444311,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ then the file will likely get truncated as a result of this operation.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444312,"byte_end":8444386,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444387,"byte_end":8444390,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If you're working with open [`File`]s and want to copy contents through those types, use the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444391,"byte_end":8444487,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ [`io::copy`] function.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444488,"byte_end":8444514,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444515,"byte_end":8444518,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::copy`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444519,"byte_end":8444578,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444579,"byte_end":8444582,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`File`]: struct.File.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444583,"byte_end":8444613,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/ [`io::copy`]: ../io/fn.copy.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444614,"byte_end":8444650,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ [`std::fs::copy`]: https://doc.rust-lang.org/std/fs/fn.copy.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444651,"byte_end":8444719,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444720,"byte_end":8444723,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444724,"byte_end":8444736,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444737,"byte_end":8444740,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444741,"byte_end":8444799,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444800,"byte_end":8444803,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444804,"byte_end":8444852,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read `from` or write `to`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444853,"byte_end":8444926,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444927,"byte_end":8444963,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444964,"byte_end":8444967,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444968,"byte_end":8444982,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444983,"byte_end":8444986,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8444987,"byte_end":8445000,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8445001,"byte_end":8445075,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8445076,"byte_end":8445081,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8445082,"byte_end":8445104,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8445105,"byte_end":8445108,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let num_bytes = fs::copy(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8445109,"byte_end":8445163,"line_start":38,"line_end":38,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8445164,"byte_end":8445169,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8445170,"byte_end":8445187,"line_start":40,"line_end":40,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/copy.rs","byte_start":8445188,"byte_end":8445195,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4800},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446608,"byte_end":8446618,"line_start":36,"line_end":36,"column_start":14,"column_end":24},"name":"create_dir","qualname":"::fs::create_dir::create_dir","value":"fn <P> (path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory.","sig":null,"attributes":[{"value":"/ Creates a new directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8445643,"byte_end":8445671,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8445672,"byte_end":8445675,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Note that this function will only create the final directory in `path`. If you want to create","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8445676,"byte_end":8445773,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ all of its missing parent directories too, use the [`create_dir_all`] function instead.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8445774,"byte_end":8445865,"line_start":9,"line_end":9,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8445866,"byte_end":8445869,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8445870,"byte_end":8445935,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8445936,"byte_end":8445939,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`create_dir_all`]: fn.create_dir_all.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8445940,"byte_end":8445986,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::create_dir`]: https://doc.rust-lang.org/std/fs/fn.create_dir.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8445987,"byte_end":8446067,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446068,"byte_end":8446071,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446072,"byte_end":8446084,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446085,"byte_end":8446088,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446089,"byte_end":8446147,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446148,"byte_end":8446151,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446152,"byte_end":8446213,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * A parent directory in `path` does not exist.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446214,"byte_end":8446264,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ * The current process lacks permissions to create the directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446265,"byte_end":8446333,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446334,"byte_end":8446370,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446371,"byte_end":8446374,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446375,"byte_end":8446389,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446390,"byte_end":8446393,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446394,"byte_end":8446407,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446408,"byte_end":8446482,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446483,"byte_end":8446488,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446489,"byte_end":8446511,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446512,"byte_end":8446515,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir(\"./some/directory\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446516,"byte_end":8446562,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446563,"byte_end":8446568,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446569,"byte_end":8446586,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir.rs","byte_start":8446587,"byte_end":8446594,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":4811},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447733,"byte_end":8447747,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"create_dir_all","qualname":"::fs::create_dir_all::create_dir_all","value":"fn <P> (path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new directory and all of its parents if they are missing.","sig":null,"attributes":[{"value":"/ Creates a new directory and all of its parents if they are missing.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8446978,"byte_end":8447049,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447050,"byte_end":8447053,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::create_dir_all`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447054,"byte_end":8447123,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447124,"byte_end":8447127,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::create_dir_all`]: https://doc.rust-lang.org/std/fs/fn.create_dir_all.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447128,"byte_end":8447216,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447217,"byte_end":8447220,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447221,"byte_end":8447233,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447234,"byte_end":8447237,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447238,"byte_end":8447296,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447297,"byte_end":8447300,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447301,"byte_end":8447362,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447363,"byte_end":8447454,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447455,"byte_end":8447491,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447492,"byte_end":8447495,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447496,"byte_end":8447510,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447511,"byte_end":8447514,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447515,"byte_end":8447528,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447529,"byte_end":8447603,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447604,"byte_end":8447609,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447610,"byte_end":8447632,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447633,"byte_end":8447636,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::create_dir_all(\"./some/directory\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447637,"byte_end":8447687,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447688,"byte_end":8447693,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447694,"byte_end":8447711,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/create_dir_all.rs","byte_start":8447712,"byte_end":8447719,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5759},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448529,"byte_end":8448539,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"DirBuilder","qualname":"::fs::dir_builder::DirBuilder","value":"DirBuilder {  }","parent":null,"children":[{"krate":0,"index":5760},{"krate":0,"index":5761}],"decl_id":null,"docs":" A builder for creating directories with configurable options.","sig":null,"attributes":[{"value":"/ A builder for creating directories with configurable options.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448110,"byte_end":8448175,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448176,"byte_end":8448179,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ For Unix-specific options, import the [`os::unix::fs::DirBuilderExt`] trait.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448180,"byte_end":8448260,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448261,"byte_end":8448264,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirBuilder`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448265,"byte_end":8448326,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448327,"byte_end":8448330,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`os::unix::fs::DirBuilderExt`]: ../os/unix/fs/trait.DirBuilderExt.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448331,"byte_end":8448406,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ [`std::fs::DirBuilder`]: https://doc.rust-lang.org/std/fs/struct.DirBuilder.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448407,"byte_end":8448491,"line_start":14,"line_end":14,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4823},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449067,"byte_end":8449070,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<DirBuilder>::new","value":"fn () -> DirBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448754,"byte_end":8448789,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448794,"byte_end":8448797,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The [`recursive`] option is initially set to `false`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448802,"byte_end":8448859,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448864,"byte_end":8448867,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`recursive`]: #method.recursive","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448872,"byte_end":8448908,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448913,"byte_end":8448916,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448921,"byte_end":8448935,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448940,"byte_end":8448943,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448948,"byte_end":8448955,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448960,"byte_end":8448994,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448999,"byte_end":8449002,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let builder = DirBuilder::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449007,"byte_end":8449043,"line_start":37,"line_end":37,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449048,"byte_end":8449055,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4824},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449818,"byte_end":8449827,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"recursive","qualname":"<DirBuilder>::recursive","value":"fn (&mut self, recursive: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option for recursive mode.","sig":null,"attributes":[{"value":"/ Sets the option for recursive mode.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449320,"byte_end":8449359,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449364,"byte_end":8449367,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means all parent directories should be created recursively","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449372,"byte_end":8449466,"line_start":54,"line_end":54,"column_start":5,"column_end":99}},{"value":"/ if they don't exist. Parents are created with the same permissions as the final directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449471,"byte_end":8449565,"line_start":55,"line_end":55,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449570,"byte_end":8449573,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This option is initially set to `false`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449578,"byte_end":8449622,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449627,"byte_end":8449630,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449635,"byte_end":8449649,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449654,"byte_end":8449657,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449662,"byte_end":8449669,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449674,"byte_end":8449708,"line_start":62,"line_end":62,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449713,"byte_end":8449716,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let mut builder = DirBuilder::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449721,"byte_end":8449761,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/ builder.recursive(true);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449766,"byte_end":8449794,"line_start":65,"line_end":65,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449799,"byte_end":8449806,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4825},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450759,"byte_end":8450765,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"create","qualname":"<DirBuilder>::create","value":"fn <P> (&self, path: P) -> impl Future<Output = io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a directory with the configured options.","sig":null,"attributes":[{"value":"/ Creates a directory with the configured options.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449931,"byte_end":8449983,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449988,"byte_end":8449991,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is considered an error if the directory already exists unless recursive mode is enabled.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8449996,"byte_end":8450091,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450096,"byte_end":8450099,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450104,"byte_end":8450116,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450121,"byte_end":8450124,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450129,"byte_end":8450187,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450192,"byte_end":8450195,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ * `path` already points to an existing file or directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450200,"byte_end":8450261,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/ * The current process lacks permissions to create the directory or its missing parents.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450266,"byte_end":8450357,"line_start":81,"line_end":81,"column_start":5,"column_end":96}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450362,"byte_end":8450398,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450403,"byte_end":8450406,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450411,"byte_end":8450425,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450430,"byte_end":8450433,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450438,"byte_end":8450451,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450456,"byte_end":8450530,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450535,"byte_end":8450540,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::DirBuilder;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450545,"byte_end":8450579,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450584,"byte_end":8450587,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ DirBuilder::new()","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450592,"byte_end":8450613,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     .recursive(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450618,"byte_end":8450642,"line_start":92,"line_end":92,"column_start":5,"column_end":29}},{"value":"/     .create(\"./some/directory\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450647,"byte_end":8450682,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/     .await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450687,"byte_end":8450703,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450708,"byte_end":8450713,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450718,"byte_end":8450735,"line_start":96,"line_end":96,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8450740,"byte_end":8450747,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4840},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8451931,"byte_end":8451939,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::fs::dir_entry::DirEntry","value":"","parent":null,"children":[],"decl_id":null,"docs":" An entry in a directory.","sig":null,"attributes":[{"value":"/ An entry in a directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8451635,"byte_end":8451663,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8451664,"byte_end":8451667,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A stream of entries in a directory is returned by [`read_dir`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8451668,"byte_end":8451735,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8451736,"byte_end":8451739,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::DirEntry`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8451740,"byte_end":8451799,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8451800,"byte_end":8451803,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8451804,"byte_end":8451838,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::DirEntry`]: https://doc.rust-lang.org/std/fs/struct.DirEntry.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8451839,"byte_end":8451919,"line_start":17,"line_end":17,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4845},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452830,"byte_end":8452834,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"fn (&self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the full path to this entry.","sig":null,"attributes":[{"value":"/ Returns the full path to this entry.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452156,"byte_end":8452196,"line_start":26,"line_end":26,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452201,"byte_end":8452204,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ The full path is created by joining the original path passed to [`read_dir`] with the name","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452209,"byte_end":8452303,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ of this entry.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452308,"byte_end":8452326,"line_start":29,"line_end":29,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452331,"byte_end":8452334,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452339,"byte_end":8452373,"line_start":31,"line_end":31,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452378,"byte_end":8452381,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452386,"byte_end":8452400,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452405,"byte_end":8452408,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452413,"byte_end":8452426,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452431,"byte_end":8452505,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452510,"byte_end":8452515,"line_start":37,"line_end":37,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452520,"byte_end":8452542,"line_start":38,"line_end":38,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452547,"byte_end":8452577,"line_start":39,"line_end":39,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452582,"byte_end":8452585,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452590,"byte_end":8452633,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452638,"byte_end":8452641,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452646,"byte_end":8452690,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452695,"byte_end":8452720,"line_start":44,"line_end":44,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.path());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452725,"byte_end":8452764,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452769,"byte_end":8452774,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452779,"byte_end":8452784,"line_start":47,"line_end":47,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452789,"byte_end":8452806,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452811,"byte_end":8452818,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4846},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453965,"byte_end":8453973,"line_start":88,"line_end":88,"column_start":18,"column_end":26},"name":"metadata","qualname":"<DirEntry>::metadata","value":"fn (&self) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata for this entry.","sig":null,"attributes":[{"value":"/ Reads the metadata for this entry.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452895,"byte_end":8452933,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452938,"byte_end":8452941,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to read the metadata.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8452946,"byte_end":8453014,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453019,"byte_end":8453022,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453027,"byte_end":8453118,"line_start":58,"line_end":58,"column_start":5,"column_end":96}},{"value":"/ instead.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453123,"byte_end":8453135,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453140,"byte_end":8453143,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453148,"byte_end":8453198,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453203,"byte_end":8453206,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453211,"byte_end":8453223,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453228,"byte_end":8453231,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453236,"byte_end":8453294,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453299,"byte_end":8453302,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453307,"byte_end":8453380,"line_start":67,"line_end":67,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read the metadata.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453385,"byte_end":8453450,"line_start":68,"line_end":68,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453455,"byte_end":8453491,"line_start":69,"line_end":69,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453496,"byte_end":8453499,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453504,"byte_end":8453518,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453523,"byte_end":8453526,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453531,"byte_end":8453544,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453549,"byte_end":8453623,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453628,"byte_end":8453633,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453638,"byte_end":8453660,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453665,"byte_end":8453695,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453700,"byte_end":8453703,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453708,"byte_end":8453751,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453756,"byte_end":8453759,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453764,"byte_end":8453808,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453813,"byte_end":8453838,"line_start":82,"line_end":82,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.metadata().await?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453843,"byte_end":8453893,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453898,"byte_end":8453903,"line_start":84,"line_end":84,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453908,"byte_end":8453913,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453918,"byte_end":8453935,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8453940,"byte_end":8453947,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4850},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455166,"byte_end":8455175,"line_start":126,"line_end":126,"column_start":18,"column_end":27},"name":"file_type","qualname":"<DirEntry>::file_type","value":"fn (&self) -> io::Result<FileType>","parent":null,"children":[],"decl_id":null,"docs":" Reads the file type for this entry.","sig":null,"attributes":[{"value":"/ Reads the file type for this entry.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454109,"byte_end":8454148,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454153,"byte_end":8454156,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This function will not traverse symbolic links if this entry points at one.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454161,"byte_end":8454240,"line_start":95,"line_end":95,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454245,"byte_end":8454248,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If you want to read metadata with following symbolic links, use [`metadata`] instead.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454253,"byte_end":8454342,"line_start":97,"line_end":97,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454347,"byte_end":8454350,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`metadata`]: #method.metadata","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454355,"byte_end":8454389,"line_start":99,"line_end":99,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454394,"byte_end":8454397,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454402,"byte_end":8454414,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454419,"byte_end":8454422,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454427,"byte_end":8454485,"line_start":103,"line_end":103,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454490,"byte_end":8454493,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ * This entry does not point to an existing file or directory anymore.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454498,"byte_end":8454571,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ * The current process lacks permissions to read this entry's metadata.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454576,"byte_end":8454650,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454655,"byte_end":8454691,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454696,"byte_end":8454699,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454704,"byte_end":8454718,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454723,"byte_end":8454726,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454731,"byte_end":8454744,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454749,"byte_end":8454823,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454828,"byte_end":8454833,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454838,"byte_end":8454860,"line_start":114,"line_end":114,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454865,"byte_end":8454895,"line_start":115,"line_end":115,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454900,"byte_end":8454903,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454908,"byte_end":8454951,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454956,"byte_end":8454959,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8454964,"byte_end":8455008,"line_start":119,"line_end":119,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455013,"byte_end":8455038,"line_start":120,"line_end":120,"column_start":5,"column_end":30}},{"value":"/     println!(\"{:?}\", entry.file_type().await?);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455043,"byte_end":8455094,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455099,"byte_end":8455104,"line_start":122,"line_end":122,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455109,"byte_end":8455114,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455119,"byte_end":8455136,"line_start":124,"line_end":124,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455141,"byte_end":8455148,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4854},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455855,"byte_end":8455864,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"fn (&self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the bare name of this entry without the leading path.","sig":null,"attributes":[{"value":"/ Returns the bare name of this entry without the leading path.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455312,"byte_end":8455377,"line_start":131,"line_end":131,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455382,"byte_end":8455385,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455390,"byte_end":8455404,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455409,"byte_end":8455412,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455417,"byte_end":8455430,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455435,"byte_end":8455509,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455514,"byte_end":8455519,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455524,"byte_end":8455546,"line_start":138,"line_end":138,"column_start":5,"column_end":27}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455551,"byte_end":8455581,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455586,"byte_end":8455589,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut dir = fs::read_dir(\".\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455594,"byte_end":8455637,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455642,"byte_end":8455645,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455650,"byte_end":8455694,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455699,"byte_end":8455724,"line_start":144,"line_end":144,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455729,"byte_end":8455789,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455794,"byte_end":8455799,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455804,"byte_end":8455809,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455814,"byte_end":8455831,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455836,"byte_end":8455843,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4895},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458107,"byte_end":8458111,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"File","qualname":"::fs::file::File","value":"File {  }","parent":null,"children":[{"krate":0,"index":4896},{"krate":0,"index":4897}],"decl_id":null,"docs":" An open file on the filesystem.","sig":null,"attributes":[{"value":"/ An open file on the filesystem.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8456832,"byte_end":8456867,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8456868,"byte_end":8456871,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Depending on what options the file was opened with, this type can be used for reading and/or","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8456872,"byte_end":8456968,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ writing.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8456969,"byte_end":8456981,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8456982,"byte_end":8456985,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Files are automatically closed when they get dropped and any errors detected on closing are","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8456986,"byte_end":8457081,"line_start":23,"line_end":23,"column_start":1,"column_end":96}},{"value":"/ ignored. Use the [`sync_all`] method before dropping a file if such errors need to be handled.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457082,"byte_end":8457180,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457181,"byte_end":8457184,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::File`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457185,"byte_end":8457240,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457241,"byte_end":8457244,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457245,"byte_end":8457279,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::File`]: https://doc.rust-lang.org/std/fs/struct.File.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457280,"byte_end":8457352,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457353,"byte_end":8457356,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457357,"byte_end":8457371,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457372,"byte_end":8457375,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Create a new file and write some bytes to it:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457376,"byte_end":8457425,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457426,"byte_end":8457429,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457430,"byte_end":8457443,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457444,"byte_end":8457518,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457519,"byte_end":8457524,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457525,"byte_end":8457553,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457554,"byte_end":8457584,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457585,"byte_end":8457588,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457589,"byte_end":8457637,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457638,"byte_end":8457682,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457683,"byte_end":8457688,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457689,"byte_end":8457706,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457707,"byte_end":8457714,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457715,"byte_end":8457718,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Read the contents of a file into a vector of bytes:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457719,"byte_end":8457774,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457775,"byte_end":8457778,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457779,"byte_end":8457792,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457793,"byte_end":8457867,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457868,"byte_end":8457873,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457874,"byte_end":8457902,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457903,"byte_end":8457933,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457934,"byte_end":8457937,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let mut file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457938,"byte_end":8457984,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ let mut contents = Vec::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8457985,"byte_end":8458019,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ file.read_to_end(&mut contents).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458020,"byte_end":8458063,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458064,"byte_end":8458069,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458070,"byte_end":8458087,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458088,"byte_end":8458095,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4900},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459572,"byte_end":8459576,"line_start":114,"line_end":114,"column_start":18,"column_end":22},"name":"open","qualname":"<File>::open","value":"fn <P> (path: P) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in read-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in read-only mode.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458739,"byte_end":8458774,"line_start":87,"line_end":87,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458779,"byte_end":8458782,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458787,"byte_end":8458847,"line_start":89,"line_end":89,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458852,"byte_end":8458855,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458860,"byte_end":8458872,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458877,"byte_end":8458880,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458885,"byte_end":8458943,"line_start":93,"line_end":93,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458948,"byte_end":8458951,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458956,"byte_end":8459004,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459009,"byte_end":8459070,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459075,"byte_end":8459111,"line_start":97,"line_end":97,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459116,"byte_end":8459119,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459124,"byte_end":8459205,"line_start":99,"line_end":99,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459210,"byte_end":8459213,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459218,"byte_end":8459280,"line_start":101,"line_end":101,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459285,"byte_end":8459288,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459293,"byte_end":8459307,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459312,"byte_end":8459315,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459320,"byte_end":8459333,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459338,"byte_end":8459412,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459417,"byte_end":8459422,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459427,"byte_end":8459455,"line_start":108,"line_end":108,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459460,"byte_end":8459463,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459468,"byte_end":8459510,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459515,"byte_end":8459520,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459525,"byte_end":8459542,"line_start":112,"line_end":112,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459547,"byte_end":8459554,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4906},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460829,"byte_end":8460835,"line_start":152,"line_end":152,"column_start":18,"column_end":24},"name":"create","qualname":"<File>::create","value":"fn <P> (path: P) -> io::Result<File>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file in write-only mode.","sig":null,"attributes":[{"value":"/ Opens a file in write-only mode.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459884,"byte_end":8459920,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459925,"byte_end":8459928,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function will create a file if it does not exist, and will truncate it if it does.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8459933,"byte_end":8460024,"line_start":125,"line_end":125,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460029,"byte_end":8460032,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ See the [`OpenOptions::open`] function for more options.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460037,"byte_end":8460097,"line_start":127,"line_end":127,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460102,"byte_end":8460105,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460110,"byte_end":8460122,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460127,"byte_end":8460130,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460135,"byte_end":8460193,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460198,"byte_end":8460201,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460206,"byte_end":8460255,"line_start":133,"line_end":133,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460260,"byte_end":8460325,"line_start":134,"line_end":134,"column_start":5,"column_end":70}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460330,"byte_end":8460366,"line_start":135,"line_end":135,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460371,"byte_end":8460374,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ For more details, see the list of errors documented by [`OpenOptions::open`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460379,"byte_end":8460460,"line_start":137,"line_end":137,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460465,"byte_end":8460468,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`OpenOptions::open`]: struct.OpenOptions.html#method.open","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460473,"byte_end":8460535,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460540,"byte_end":8460543,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460548,"byte_end":8460562,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460567,"byte_end":8460570,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460575,"byte_end":8460588,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460593,"byte_end":8460667,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460672,"byte_end":8460677,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460682,"byte_end":8460710,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460715,"byte_end":8460718,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460723,"byte_end":8460767,"line_start":148,"line_end":148,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460772,"byte_end":8460777,"line_start":149,"line_end":149,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460782,"byte_end":8460799,"line_start":150,"line_end":150,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8460804,"byte_end":8460811,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4912},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461936,"byte_end":8461944,"line_start":183,"line_end":183,"column_start":18,"column_end":26},"name":"sync_all","qualname":"<File>::sync_all","value":"fn (&self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents and metadata to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents and metadata to disk.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461164,"byte_end":8461232,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461237,"byte_end":8461240,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This function will ensure that all in-memory data reaches the filesystem.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461245,"byte_end":8461322,"line_start":164,"line_end":164,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461327,"byte_end":8461330,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This can be used to handle errors that would otherwise only be caught when the file is","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461335,"byte_end":8461425,"line_start":166,"line_end":166,"column_start":5,"column_end":95}},{"value":"/ closed. When a file is dropped, errors in synchronizing this in-memory data are ignored.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461430,"byte_end":8461522,"line_start":167,"line_end":167,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461527,"byte_end":8461530,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461535,"byte_end":8461549,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461554,"byte_end":8461557,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461562,"byte_end":8461575,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461580,"byte_end":8461654,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461659,"byte_end":8461664,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461669,"byte_end":8461697,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461702,"byte_end":8461732,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461737,"byte_end":8461740,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461745,"byte_end":8461793,"line_start":177,"line_end":177,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461798,"byte_end":8461842,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ file.sync_all().await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461847,"byte_end":8461874,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461879,"byte_end":8461884,"line_start":180,"line_end":180,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461889,"byte_end":8461906,"line_start":181,"line_end":181,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8461911,"byte_end":8461918,"line_start":182,"line_end":182,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4917},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463149,"byte_end":8463158,"line_start":219,"line_end":219,"column_start":18,"column_end":27},"name":"sync_data","qualname":"<File>::sync_data","value":"fn (&self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Synchronizes OS-internal buffered contents to disk.","sig":null,"attributes":[{"value":"/ Synchronizes OS-internal buffered contents to disk.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462281,"byte_end":8462336,"line_start":194,"line_end":194,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462341,"byte_end":8462344,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`sync_all`], except that file metadata may not be synchronized.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462349,"byte_end":8462436,"line_start":196,"line_end":196,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462441,"byte_end":8462444,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This is intended for use cases that must synchronize the contents of the file, but don't","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462449,"byte_end":8462541,"line_start":198,"line_end":198,"column_start":5,"column_end":97}},{"value":"/ need the file metadata synchronized to disk.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462546,"byte_end":8462594,"line_start":199,"line_end":199,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462599,"byte_end":8462602,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that some platforms may simply implement this in terms of [`sync_all`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462607,"byte_end":8462687,"line_start":201,"line_end":201,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462692,"byte_end":8462695,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ [`sync_all`]: #method.sync_all","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462700,"byte_end":8462734,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462739,"byte_end":8462742,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462747,"byte_end":8462761,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462766,"byte_end":8462769,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462774,"byte_end":8462787,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462792,"byte_end":8462866,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462871,"byte_end":8462876,"line_start":209,"line_end":209,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462881,"byte_end":8462909,"line_start":210,"line_end":210,"column_start":5,"column_end":33}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462914,"byte_end":8462944,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462949,"byte_end":8462952,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let mut file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8462957,"byte_end":8463005,"line_start":213,"line_end":213,"column_start":5,"column_end":53}},{"value":"/ file.write_all(b\"Hello, world!\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463010,"byte_end":8463054,"line_start":214,"line_end":214,"column_start":5,"column_end":49}},{"value":"/ file.sync_data().await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463059,"byte_end":8463087,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463092,"byte_end":8463097,"line_start":216,"line_end":216,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463102,"byte_end":8463119,"line_start":217,"line_end":217,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463124,"byte_end":8463131,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4922},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464255,"byte_end":8464262,"line_start":251,"line_end":251,"column_start":18,"column_end":25},"name":"set_len","qualname":"<File>::set_len","value":"fn (&self, size: u64) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Truncates or extends the file.","sig":null,"attributes":[{"value":"/ Truncates or extends the file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463497,"byte_end":8463531,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463536,"byte_end":8463539,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current file size, then the file will be truncated. If it is","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463544,"byte_end":8463635,"line_start":232,"line_end":232,"column_start":5,"column_end":96}},{"value":"/ greater than the current file size, then the file will be extended to `size` and have all","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463640,"byte_end":8463733,"line_start":233,"line_end":233,"column_start":5,"column_end":98}},{"value":"/ intermediate data filled with zeros.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463738,"byte_end":8463778,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463783,"byte_end":8463786,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The file's cursor stays at the same position, even if the cursor ends up being past the end","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463791,"byte_end":8463886,"line_start":236,"line_end":236,"column_start":5,"column_end":100}},{"value":"/ of the file after this operation.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463891,"byte_end":8463928,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463933,"byte_end":8463936,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463941,"byte_end":8463955,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463960,"byte_end":8463963,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463968,"byte_end":8463981,"line_start":241,"line_end":241,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8463986,"byte_end":8464060,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464065,"byte_end":8464070,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464075,"byte_end":8464103,"line_start":244,"line_end":244,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464108,"byte_end":8464111,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464116,"byte_end":8464160,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/ file.set_len(10).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464165,"byte_end":8464193,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464198,"byte_end":8464203,"line_start":248,"line_end":248,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464208,"byte_end":8464225,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464230,"byte_end":8464237,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4927},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465081,"byte_end":8465089,"line_start":277,"line_end":277,"column_start":18,"column_end":26},"name":"metadata","qualname":"<File>::metadata","value":"fn (&self) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads the file's metadata.","sig":null,"attributes":[{"value":"/ Reads the file's metadata.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464712,"byte_end":8464742,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464747,"byte_end":8464750,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464755,"byte_end":8464769,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464774,"byte_end":8464777,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464782,"byte_end":8464795,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464800,"byte_end":8464874,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464879,"byte_end":8464884,"line_start":269,"line_end":269,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464889,"byte_end":8464917,"line_start":270,"line_end":270,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464922,"byte_end":8464925,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let file = File::open(\"a.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464930,"byte_end":8464972,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ let metadata = file.metadata().await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8464977,"byte_end":8465019,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465024,"byte_end":8465029,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465034,"byte_end":8465051,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465056,"byte_end":8465063,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4931},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465935,"byte_end":8465950,"line_start":306,"line_end":306,"column_start":18,"column_end":33},"name":"set_permissions","qualname":"<File>::set_permissions","value":"fn (&self, perm: Permissions) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions on the file.","sig":null,"attributes":[{"value":"/ Changes the permissions on the file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465226,"byte_end":8465266,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465271,"byte_end":8465274,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465279,"byte_end":8465291,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465296,"byte_end":8465299,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465304,"byte_end":8465362,"line_start":286,"line_end":286,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465367,"byte_end":8465370,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ * The current process lacks permissions to change attributes on the file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465375,"byte_end":8465452,"line_start":288,"line_end":288,"column_start":5,"column_end":82}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465457,"byte_end":8465493,"line_start":289,"line_end":289,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465498,"byte_end":8465501,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465506,"byte_end":8465520,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465525,"byte_end":8465528,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465533,"byte_end":8465546,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465551,"byte_end":8465625,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465630,"byte_end":8465635,"line_start":295,"line_end":295,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::File;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465640,"byte_end":8465668,"line_start":296,"line_end":296,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465673,"byte_end":8465676,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let file = File::create(\"a.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465681,"byte_end":8465725,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465730,"byte_end":8465733,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let mut perms = file.metadata().await?.permissions();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465738,"byte_end":8465795,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/ perms.set_readonly(true);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465800,"byte_end":8465829,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/ file.set_permissions(perms).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465834,"byte_end":8465873,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465878,"byte_end":8465883,"line_start":303,"line_end":303,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465888,"byte_end":8465905,"line_start":304,"line_end":304,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8465910,"byte_end":8465917,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5030},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488466,"byte_end":8488475,"line_start":33,"line_end":33,"column_start":14,"column_end":23},"name":"hard_link","qualname":"::fs::hard_link::hard_link","value":"fn <P, Q> (from: P, to: Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Creates a hard link on the filesystem.","sig":null,"attributes":[{"value":"/ Creates a hard link on the filesystem.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8487702,"byte_end":8487744,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8487745,"byte_end":8487748,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `dst` path will be a link pointing to the `src` path. Note that operating systems often","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8487749,"byte_end":8487844,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ require these two paths to be located on the same filesystem.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8487845,"byte_end":8487910,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8487911,"byte_end":8487914,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::hard_link`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8487915,"byte_end":8487979,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8487980,"byte_end":8487983,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::hard_link`]: https://doc.rust-lang.org/std/fs/fn.hard_link.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8487984,"byte_end":8488062,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488063,"byte_end":8488066,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488067,"byte_end":8488079,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488080,"byte_end":8488083,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488084,"byte_end":8488142,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488143,"byte_end":8488146,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `src` does not point to an existing file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488147,"byte_end":8488194,"line_start":19,"line_end":19,"column_start":1,"column_end":48}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488195,"byte_end":8488231,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488232,"byte_end":8488235,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488236,"byte_end":8488250,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488251,"byte_end":8488254,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488255,"byte_end":8488268,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488269,"byte_end":8488343,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488344,"byte_end":8488349,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488350,"byte_end":8488372,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488373,"byte_end":8488376,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ fs::hard_link(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488377,"byte_end":8488420,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488421,"byte_end":8488426,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488427,"byte_end":8488444,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/hard_link.rs","byte_start":8488445,"byte_end":8488452,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5041},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489914,"byte_end":8489922,"line_start":35,"line_end":35,"column_start":14,"column_end":22},"name":"metadata","qualname":"::fs::metadata::metadata","value":"fn <P> (path: P) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path.","sig":null,"attributes":[{"value":"/ Reads metadata for a path.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8488969,"byte_end":8488999,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489000,"byte_end":8489003,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function will traverse symbolic links to read metadata for the target file or directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489004,"byte_end":8489101,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ If you want to read metadata without following symbolic links, use [`symlink_metadata`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489102,"byte_end":8489193,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ instead.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489194,"byte_end":8489206,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489207,"byte_end":8489210,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::metadata`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489211,"byte_end":8489274,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489275,"byte_end":8489278,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`symlink_metadata`]: fn.symlink_metadata.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489279,"byte_end":8489329,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/ [`std::fs::metadata`]: https://doc.rust-lang.org/std/fs/fn.metadata.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489330,"byte_end":8489406,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489407,"byte_end":8489410,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489411,"byte_end":8489423,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489424,"byte_end":8489427,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489428,"byte_end":8489486,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489487,"byte_end":8489490,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489491,"byte_end":8489552,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489553,"byte_end":8489627,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489628,"byte_end":8489664,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489665,"byte_end":8489668,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489669,"byte_end":8489683,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489684,"byte_end":8489687,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489688,"byte_end":8489701,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489702,"byte_end":8489776,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489777,"byte_end":8489782,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489783,"byte_end":8489805,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489806,"byte_end":8489809,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489810,"byte_end":8489868,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489869,"byte_end":8489874,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489875,"byte_end":8489892,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/metadata.rs","byte_start":8489893,"byte_end":8489900,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5785},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497548,"byte_end":8497559,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"OpenOptions","qualname":"::fs::open_options::OpenOptions","value":"","parent":null,"children":[],"decl_id":null,"docs":" A builder for opening files with configurable options.","sig":null,"attributes":[{"value":"/ A builder for opening files with configurable options.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496003,"byte_end":8496061,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496062,"byte_end":8496065,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Files can be opened in [`read`] and/or [`write`] mode.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496066,"byte_end":8496124,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496125,"byte_end":8496128,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`append`] option opens files in a special writing mode that moves the file cursor to the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496129,"byte_end":8496226,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ end of file before every write operation.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496227,"byte_end":8496272,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496273,"byte_end":8496276,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ It is also possible to [`truncate`] the file right after opening, to [`create`] a file if it","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496277,"byte_end":8496373,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"/ doesn't exist yet, or to always create a new file with [`create_new`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496374,"byte_end":8496448,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496449,"byte_end":8496452,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::OpenOptions`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496453,"byte_end":8496515,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496516,"byte_end":8496519,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496520,"byte_end":8496546,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496547,"byte_end":8496575,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496576,"byte_end":8496606,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496607,"byte_end":8496641,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ [`create`]: #method.create","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496642,"byte_end":8496672,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496673,"byte_end":8496711,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::OpenOptions`]: https://doc.rust-lang.org/std/fs/struct.OpenOptions.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496712,"byte_end":8496798,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496799,"byte_end":8496802,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496803,"byte_end":8496817,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496818,"byte_end":8496821,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Open a file for reading:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496822,"byte_end":8496850,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496851,"byte_end":8496854,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496855,"byte_end":8496868,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496869,"byte_end":8496943,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496944,"byte_end":8496949,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496950,"byte_end":8496985,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496986,"byte_end":8496989,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8496990,"byte_end":8497023,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497024,"byte_end":8497043,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497044,"byte_end":8497066,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497067,"byte_end":8497083,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497084,"byte_end":8497089,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497090,"byte_end":8497107,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497108,"byte_end":8497115,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497116,"byte_end":8497119,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Open a file for both reading and writing, and create it if it doesn't exist yet:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497120,"byte_end":8497204,"line_start":45,"line_end":45,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497205,"byte_end":8497208,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497209,"byte_end":8497222,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497223,"byte_end":8497297,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497298,"byte_end":8497303,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497304,"byte_end":8497339,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497340,"byte_end":8497343,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497344,"byte_end":8497377,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/     .read(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497378,"byte_end":8497397,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/     .write(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497398,"byte_end":8497418,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/     .create(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497419,"byte_end":8497440,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497441,"byte_end":8497463,"line_start":56,"line_end":56,"column_start":1,"column_end":23}},{"value":"/     .await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497464,"byte_end":8497480,"line_start":57,"line_end":57,"column_start":1,"column_end":17}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497481,"byte_end":8497486,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497487,"byte_end":8497504,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497505,"byte_end":8497512,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5053},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498056,"byte_end":8498059,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<OpenOptions>::new","value":"fn () -> OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a blank set of options.","sig":null,"attributes":[{"value":"/ Creates a blank set of options.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497607,"byte_end":8497642,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497647,"byte_end":8497650,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ All options are initially set to `false`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497655,"byte_end":8497700,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497705,"byte_end":8497708,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497713,"byte_end":8497727,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497732,"byte_end":8497735,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497740,"byte_end":8497753,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497758,"byte_end":8497832,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497837,"byte_end":8497842,"line_start":73,"line_end":73,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497847,"byte_end":8497882,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497887,"byte_end":8497890,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497895,"byte_end":8497928,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497933,"byte_end":8497952,"line_start":77,"line_end":77,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497957,"byte_end":8497979,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497984,"byte_end":8498000,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498005,"byte_end":8498010,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498015,"byte_end":8498032,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498037,"byte_end":8498044,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5054},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498630,"byte_end":8498634,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"read","qualname":"<OpenOptions>::read","value":"fn (&mut self, read: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for read mode.","sig":null,"attributes":[{"value":"/ Configures the option for read mode.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498139,"byte_end":8498179,"line_start":87,"line_end":87,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498184,"byte_end":8498187,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be readable after opening.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498192,"byte_end":8498274,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498279,"byte_end":8498282,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498287,"byte_end":8498301,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498306,"byte_end":8498309,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498314,"byte_end":8498327,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498332,"byte_end":8498406,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498411,"byte_end":8498416,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498421,"byte_end":8498456,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498461,"byte_end":8498464,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498469,"byte_end":8498502,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498507,"byte_end":8498526,"line_start":99,"line_end":99,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498531,"byte_end":8498553,"line_start":100,"line_end":100,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498558,"byte_end":8498574,"line_start":101,"line_end":101,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498579,"byte_end":8498584,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498589,"byte_end":8498606,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498611,"byte_end":8498618,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5055},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499354,"byte_end":8499359,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"write","qualname":"<OpenOptions>::write","value":"fn (&mut self, write: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for write mode.","sig":null,"attributes":[{"value":"/ Configures the option for write mode.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498731,"byte_end":8498772,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498777,"byte_end":8498780,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498785,"byte_end":8498867,"line_start":112,"line_end":112,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498872,"byte_end":8498875,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If the file already exists, write calls on it will overwrite the previous contents without","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498880,"byte_end":8498974,"line_start":114,"line_end":114,"column_start":5,"column_end":99}},{"value":"/ truncating it.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8498979,"byte_end":8498997,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499002,"byte_end":8499005,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499010,"byte_end":8499024,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499029,"byte_end":8499032,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499037,"byte_end":8499050,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499055,"byte_end":8499129,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499134,"byte_end":8499139,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499144,"byte_end":8499179,"line_start":122,"line_end":122,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499184,"byte_end":8499187,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499192,"byte_end":8499225,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499230,"byte_end":8499250,"line_start":125,"line_end":125,"column_start":5,"column_end":25}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499255,"byte_end":8499277,"line_start":126,"line_end":126,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499282,"byte_end":8499298,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499303,"byte_end":8499308,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499313,"byte_end":8499330,"line_start":129,"line_end":129,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499335,"byte_end":8499342,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5056},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500044,"byte_end":8500050,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"append","qualname":"<OpenOptions>::append","value":"fn (&mut self, append: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for append mode.","sig":null,"attributes":[{"value":"/ Configures the option for append mode.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499459,"byte_end":8499501,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499506,"byte_end":8499509,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means the file will be writable after opening and the file","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499514,"byte_end":8499608,"line_start":138,"line_end":138,"column_start":5,"column_end":99}},{"value":"/ cursor will be moved to the end of file before every write operaiton.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499613,"byte_end":8499686,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499691,"byte_end":8499694,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499699,"byte_end":8499713,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499718,"byte_end":8499721,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499726,"byte_end":8499739,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499744,"byte_end":8499818,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499823,"byte_end":8499828,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499833,"byte_end":8499868,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499873,"byte_end":8499876,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499881,"byte_end":8499914,"line_start":148,"line_end":148,"column_start":5,"column_end":38}},{"value":"/     .append(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499919,"byte_end":8499940,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499945,"byte_end":8499967,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499972,"byte_end":8499988,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8499993,"byte_end":8499998,"line_start":152,"line_end":152,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500003,"byte_end":8500020,"line_start":153,"line_end":153,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500025,"byte_end":8500032,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5057},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500858,"byte_end":8500866,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"truncate","qualname":"<OpenOptions>::truncate","value":"fn (&mut self, truncate: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for truncating the previous file.","sig":null,"attributes":[{"value":"/ Configures the option for truncating the previous file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500153,"byte_end":8500212,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500217,"byte_end":8500220,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, the file will be truncated to the length of 0 bytes.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500225,"byte_end":8500301,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500306,"byte_end":8500309,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for truncation to work.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500314,"byte_end":8500397,"line_start":164,"line_end":164,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500402,"byte_end":8500405,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500410,"byte_end":8500438,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500443,"byte_end":8500473,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500478,"byte_end":8500481,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500486,"byte_end":8500500,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500505,"byte_end":8500508,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500513,"byte_end":8500526,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500531,"byte_end":8500605,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500610,"byte_end":8500615,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500620,"byte_end":8500655,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500660,"byte_end":8500663,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500668,"byte_end":8500701,"line_start":176,"line_end":176,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500706,"byte_end":8500726,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/     .truncate(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500731,"byte_end":8500754,"line_start":178,"line_end":178,"column_start":5,"column_end":28}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500759,"byte_end":8500781,"line_start":179,"line_end":179,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500786,"byte_end":8500802,"line_start":180,"line_end":180,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500807,"byte_end":8500812,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500817,"byte_end":8500834,"line_start":182,"line_end":182,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500839,"byte_end":8500846,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5058},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501705,"byte_end":8501711,"line_start":213,"line_end":213,"column_start":12,"column_end":18},"name":"create","qualname":"<OpenOptions>::create","value":"fn (&mut self, create: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file if it doesn't exist.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file if it doesn't exist.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8500975,"byte_end":8501045,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501050,"byte_end":8501053,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created if it doesn't exist.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501058,"byte_end":8501147,"line_start":191,"line_end":191,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501152,"byte_end":8501155,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501160,"byte_end":8501246,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501251,"byte_end":8501254,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501259,"byte_end":8501287,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501292,"byte_end":8501322,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501327,"byte_end":8501330,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501335,"byte_end":8501349,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501354,"byte_end":8501357,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501362,"byte_end":8501375,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501380,"byte_end":8501454,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501459,"byte_end":8501464,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501469,"byte_end":8501504,"line_start":203,"line_end":203,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501509,"byte_end":8501512,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501517,"byte_end":8501550,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501555,"byte_end":8501575,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/     .create(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501580,"byte_end":8501601,"line_start":207,"line_end":207,"column_start":5,"column_end":26}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501606,"byte_end":8501628,"line_start":208,"line_end":208,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501633,"byte_end":8501649,"line_start":209,"line_end":209,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501654,"byte_end":8501659,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501664,"byte_end":8501681,"line_start":211,"line_end":211,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501686,"byte_end":8501693,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5059},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502608,"byte_end":8502618,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"create_new","qualname":"<OpenOptions>::create_new","value":"fn (&mut self, create_new: bool) -> &mut OpenOptions","parent":null,"children":[],"decl_id":null,"docs":" Configures the option for creating a new file or failing if it already exists.","sig":null,"attributes":[{"value":"/ Configures the option for creating a new file or failing if it already exists.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501814,"byte_end":8501896,"line_start":218,"line_end":218,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501901,"byte_end":8501904,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, this option means a new file will be created, or the open operation","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8501909,"byte_end":8502000,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ will fail if the file already exists.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502005,"byte_end":8502046,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502051,"byte_end":8502054,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The file must be opened in [`write`] or [`append`] mode for file creation to work.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502059,"byte_end":8502145,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502150,"byte_end":8502153,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502158,"byte_end":8502186,"line_start":225,"line_end":225,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502191,"byte_end":8502221,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502226,"byte_end":8502229,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502234,"byte_end":8502248,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502253,"byte_end":8502256,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502261,"byte_end":8502274,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502279,"byte_end":8502353,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502358,"byte_end":8502363,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502368,"byte_end":8502403,"line_start":233,"line_end":233,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502408,"byte_end":8502411,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502416,"byte_end":8502449,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/     .write(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502454,"byte_end":8502474,"line_start":236,"line_end":236,"column_start":5,"column_end":25}},{"value":"/     .create_new(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502479,"byte_end":8502504,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502509,"byte_end":8502531,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502536,"byte_end":8502552,"line_start":239,"line_end":239,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502557,"byte_end":8502562,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502567,"byte_end":8502584,"line_start":241,"line_end":241,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502589,"byte_end":8502596,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5060},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8504056,"byte_end":8504060,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"open","qualname":"<OpenOptions>::open","value":"fn <P> (&self, path: P) -> impl Future<Output = io::Result<File>>","parent":null,"children":[],"decl_id":null,"docs":" Opens a file with the configured options.","sig":null,"attributes":[{"value":"/ Opens a file with the configured options.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502733,"byte_end":8502778,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502783,"byte_end":8502786,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502791,"byte_end":8502803,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502808,"byte_end":8502811,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502816,"byte_end":8502874,"line_start":252,"line_end":252,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502879,"byte_end":8502882,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ * The file does not exist and neither [`create`] nor [`create_new`] were set.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502887,"byte_end":8502968,"line_start":254,"line_end":254,"column_start":5,"column_end":86}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8502973,"byte_end":8503022,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/ * The current process lacks permissions to open the file in the configured mode.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503027,"byte_end":8503111,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"/ * The file already exists and [`create_new`] was set.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503116,"byte_end":8503173,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"/ * Invalid combination of options was used, like [`truncate`] was set but [`write`] wasn't,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503178,"byte_end":8503272,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/   or none of [`read`], [`write`], and [`append`] modes was set.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503277,"byte_end":8503344,"line_start":259,"line_end":259,"column_start":5,"column_end":72}},{"value":"/ * An OS-level occurred, like too many files are open or the file name is too long.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503349,"byte_end":8503435,"line_start":260,"line_end":260,"column_start":5,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503440,"byte_end":8503476,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503481,"byte_end":8503484,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ [`read`]: #method.read","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503489,"byte_end":8503515,"line_start":263,"line_end":263,"column_start":5,"column_end":31}},{"value":"/ [`write`]: #method.write","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503520,"byte_end":8503548,"line_start":264,"line_end":264,"column_start":5,"column_end":33}},{"value":"/ [`append`]: #method.append","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503553,"byte_end":8503583,"line_start":265,"line_end":265,"column_start":5,"column_end":35}},{"value":"/ [`truncate`]: #method.truncate","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503588,"byte_end":8503622,"line_start":266,"line_end":266,"column_start":5,"column_end":39}},{"value":"/ [`create`]: #method.create","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503627,"byte_end":8503657,"line_start":267,"line_end":267,"column_start":5,"column_end":35}},{"value":"/ [`create_new`]: #method.create_new","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503662,"byte_end":8503700,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503705,"byte_end":8503708,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503713,"byte_end":8503727,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503732,"byte_end":8503735,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503740,"byte_end":8503753,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503758,"byte_end":8503832,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503837,"byte_end":8503842,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs::OpenOptions;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503847,"byte_end":8503882,"line_start":275,"line_end":275,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503887,"byte_end":8503890,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let file = OpenOptions::new()","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503895,"byte_end":8503928,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/     .read(true)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503933,"byte_end":8503952,"line_start":278,"line_end":278,"column_start":5,"column_end":24}},{"value":"/     .open(\"a.txt\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503957,"byte_end":8503979,"line_start":279,"line_end":279,"column_start":5,"column_end":27}},{"value":"/     .await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8503984,"byte_end":8504000,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8504005,"byte_end":8504010,"line_start":281,"line_end":281,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8504015,"byte_end":8504032,"line_start":282,"line_end":282,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8504037,"byte_end":8504044,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":5073},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507564,"byte_end":8507568,"line_start":38,"line_end":38,"column_start":14,"column_end":18},"name":"read","qualname":"::fs::read::read","value":"fn <P> (path: P) -> io::Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as raw bytes.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as raw bytes.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8506559,"byte_end":8506612,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8506613,"byte_end":8506616,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a buffer based on the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8506617,"byte_end":8506716,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8506717,"byte_end":8506813,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8506814,"byte_end":8506826,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8506827,"byte_end":8506830,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as a string, use [`read_to_string`] instead.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8506831,"byte_end":8506912,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8506913,"byte_end":8506916,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8506917,"byte_end":8506976,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8506977,"byte_end":8506980,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read_to_string`]: fn.read_to_string.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8506981,"byte_end":8507027,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/ [`std::fs::read`]: https://doc.rust-lang.org/std/fs/fn.read.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507028,"byte_end":8507096,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507097,"byte_end":8507100,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507101,"byte_end":8507113,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507114,"byte_end":8507117,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507118,"byte_end":8507176,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507177,"byte_end":8507180,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507181,"byte_end":8507229,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507230,"byte_end":8507291,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507292,"byte_end":8507328,"line_start":25,"line_end":25,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507329,"byte_end":8507332,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507333,"byte_end":8507347,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507348,"byte_end":8507351,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507352,"byte_end":8507365,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507366,"byte_end":8507440,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507441,"byte_end":8507446,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507447,"byte_end":8507469,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507470,"byte_end":8507473,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read(\"a.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507474,"byte_end":8507518,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507519,"byte_end":8507524,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507525,"byte_end":8507542,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read.rs","byte_start":8507543,"byte_end":8507550,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5092},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509125,"byte_end":8509133,"line_start":47,"line_end":47,"column_start":14,"column_end":22},"name":"read_dir","qualname":"::fs::read_dir::read_dir","value":"fn <P> (path: P) -> io::Result<ReadDir>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of entries in a directory.","sig":null,"attributes":[{"value":"/ Returns a stream of entries in a directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508033,"byte_end":8508080,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508081,"byte_end":8508084,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The stream yields items of type [`io::Result`]`<`[`DirEntry`]`>`. Note that I/O errors can","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508085,"byte_end":8508179,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ occur while reading from the stream.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508180,"byte_end":8508220,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508221,"byte_end":8508224,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_dir`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508225,"byte_end":8508288,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508289,"byte_end":8508292,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508293,"byte_end":8508335,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508336,"byte_end":8508374,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::read_dir`]: https://doc.rust-lang.org/std/fs/fn.read_dir.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508375,"byte_end":8508451,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508452,"byte_end":8508455,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508456,"byte_end":8508468,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508469,"byte_end":8508472,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508473,"byte_end":8508531,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508532,"byte_end":8508535,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508536,"byte_end":8508589,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ * The current process lacks permissions to read the contents of the directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508590,"byte_end":8508672,"line_start":27,"line_end":27,"column_start":1,"column_end":83}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508673,"byte_end":8508709,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508710,"byte_end":8508713,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508714,"byte_end":8508728,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508729,"byte_end":8508732,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508733,"byte_end":8508746,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508747,"byte_end":8508821,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508822,"byte_end":8508827,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508828,"byte_end":8508850,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508851,"byte_end":8508881,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508882,"byte_end":8508885,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut entries = fs::read_dir(\".\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508886,"byte_end":8508933,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508934,"byte_end":8508937,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ while let Some(res) = entries.next().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508938,"byte_end":8508986,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8508987,"byte_end":8509012,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509013,"byte_end":8509073,"line_start":42,"line_end":42,"column_start":1,"column_end":61}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509074,"byte_end":8509079,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509080,"byte_end":8509085,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509086,"byte_end":8509103,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509104,"byte_end":8509111,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5797},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509938,"byte_end":8509945,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"ReadDir","qualname":"::fs::read_dir::ReadDir","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of entries in a directory.","sig":null,"attributes":[{"value":"/ A stream of entries in a directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509413,"byte_end":8509452,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509453,"byte_end":8509456,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This stream is returned by [`read_dir`] and yields items of type","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509457,"byte_end":8509525,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ [`io::Result`]`<`[`DirEntry`]`>`. Each [`DirEntry`] can then retrieve information like entry's","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509526,"byte_end":8509624,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ path or metadata.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509625,"byte_end":8509646,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509647,"byte_end":8509650,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::fs::ReadDir`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509651,"byte_end":8509709,"line_start":63,"line_end":63,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509710,"byte_end":8509713,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`read_dir`]: fn.read_dir.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509714,"byte_end":8509748,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509749,"byte_end":8509791,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/ [`DirEntry`]: struct.DirEntry.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509792,"byte_end":8509830,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ [`std::fs::ReadDir`]: https://doc.rust-lang.org/std/fs/struct.ReadDir.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8509831,"byte_end":8509909,"line_start":68,"line_end":68,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":5112},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8512118,"byte_end":8512127,"line_start":30,"line_end":30,"column_start":14,"column_end":23},"name":"read_link","qualname":"::fs::read_link::read_link","value":"fn <P> (path: P) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link and returns the path it points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link and returns the path it points to.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511499,"byte_end":8511559,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511560,"byte_end":8511563,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_link`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511564,"byte_end":8511628,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511629,"byte_end":8511632,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::read_link`]: https://doc.rust-lang.org/std/fs/fn.read_link.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511633,"byte_end":8511711,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511712,"byte_end":8511715,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511716,"byte_end":8511728,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511729,"byte_end":8511732,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511733,"byte_end":8511791,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511792,"byte_end":8511795,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing link.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511796,"byte_end":8511844,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511845,"byte_end":8511881,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511882,"byte_end":8511885,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511886,"byte_end":8511900,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511901,"byte_end":8511904,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511905,"byte_end":8511918,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511919,"byte_end":8511993,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8511994,"byte_end":8511999,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8512000,"byte_end":8512022,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8512023,"byte_end":8512026,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let path = fs::read_link(\"a.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8512027,"byte_end":8512072,"line_start":26,"line_end":26,"column_start":1,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8512073,"byte_end":8512078,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8512079,"byte_end":8512096,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_link.rs","byte_start":8512097,"byte_end":8512104,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5123},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513593,"byte_end":8513607,"line_start":39,"line_end":39,"column_start":14,"column_end":28},"name":"read_to_string","qualname":"::fs::read_to_string::read_to_string","value":"fn <P> (path: P) -> io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Reads the entire contents of a file as a string.","sig":null,"attributes":[{"value":"/ Reads the entire contents of a file as a string.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8512513,"byte_end":8512565,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8512566,"byte_end":8512569,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a convenience function for reading entire files. It pre-allocates a string based on the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8512570,"byte_end":8512669,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ file size when available, so it is typically faster than manually opening a file and reading","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8512670,"byte_end":8512766,"line_start":9,"line_end":9,"column_start":1,"column_end":97}},{"value":"/ from it.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8512767,"byte_end":8512779,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8512780,"byte_end":8512783,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want to read the contents as raw bytes, use [`read`] instead.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8512784,"byte_end":8512856,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8512857,"byte_end":8512860,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::read_to_string`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8512861,"byte_end":8512930,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8512931,"byte_end":8512934,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`read`]: fn.read.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8512935,"byte_end":8512961,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ [`std::fs::read_to_string`]: https://doc.rust-lang.org/std/fs/fn.read_to_string.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8512962,"byte_end":8513050,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513051,"byte_end":8513054,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513055,"byte_end":8513067,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513068,"byte_end":8513071,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513072,"byte_end":8513130,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513131,"byte_end":8513134,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513135,"byte_end":8513183,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to read the file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513184,"byte_end":8513245,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ * The contents of the file cannot be read as a UTF-8 string.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513246,"byte_end":8513310,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513311,"byte_end":8513347,"line_start":26,"line_end":26,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513348,"byte_end":8513351,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513352,"byte_end":8513366,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513367,"byte_end":8513370,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513371,"byte_end":8513384,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513385,"byte_end":8513459,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513460,"byte_end":8513465,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513466,"byte_end":8513488,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513489,"byte_end":8513492,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let contents = fs::read_to_string(\"a.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513493,"byte_end":8513547,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513548,"byte_end":8513553,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513554,"byte_end":8513571,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_to_string.rs","byte_start":8513572,"byte_end":8513579,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5134},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514635,"byte_end":8514645,"line_start":31,"line_end":31,"column_start":14,"column_end":24},"name":"remove_dir","qualname":"::fs::remove_dir::remove_dir","value":"fn <P> (path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes an empty directory.","sig":null,"attributes":[{"value":"/ Removes an empty directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8513968,"byte_end":8513999,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514000,"byte_end":8514003,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514004,"byte_end":8514069,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514070,"byte_end":8514073,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir`]: https://doc.rust-lang.org/std/fs/fn.remove_dir.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514074,"byte_end":8514154,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514155,"byte_end":8514158,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514159,"byte_end":8514171,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514172,"byte_end":8514175,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514176,"byte_end":8514234,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514235,"byte_end":8514238,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514239,"byte_end":8514291,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514292,"byte_end":8514360,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514361,"byte_end":8514397,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514398,"byte_end":8514401,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514402,"byte_end":8514416,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514417,"byte_end":8514420,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514421,"byte_end":8514434,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514435,"byte_end":8514509,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514510,"byte_end":8514515,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514516,"byte_end":8514538,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514539,"byte_end":8514542,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir(\"./some/directory\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514543,"byte_end":8514589,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514590,"byte_end":8514595,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514596,"byte_end":8514613,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir.rs","byte_start":8514614,"byte_end":8514621,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5145},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515705,"byte_end":8515719,"line_start":31,"line_end":31,"column_start":14,"column_end":28},"name":"remove_dir_all","qualname":"::fs::remove_dir_all::remove_dir_all","value":"fn <P> (path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a directory and all of its contents.","sig":null,"attributes":[{"value":"/ Removes a directory and all of its contents.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515005,"byte_end":8515053,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515054,"byte_end":8515057,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_dir_all`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515058,"byte_end":8515127,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515128,"byte_end":8515131,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_dir_all`]: https://doc.rust-lang.org/std/fs/fn.remove_dir_all.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515132,"byte_end":8515220,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515221,"byte_end":8515224,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515225,"byte_end":8515237,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515238,"byte_end":8515241,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515242,"byte_end":8515300,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515301,"byte_end":8515304,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` is not an existing and empty directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515305,"byte_end":8515357,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ * The current process lacks permissions to remove the directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515358,"byte_end":8515426,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515427,"byte_end":8515463,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515464,"byte_end":8515467,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515468,"byte_end":8515482,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515483,"byte_end":8515486,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515487,"byte_end":8515500,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515501,"byte_end":8515575,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515576,"byte_end":8515581,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515582,"byte_end":8515604,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515605,"byte_end":8515608,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_dir_all(\"./some/directory\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515609,"byte_end":8515659,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515660,"byte_end":8515665,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515666,"byte_end":8515683,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_dir_all.rs","byte_start":8515684,"byte_end":8515691,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5156},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516722,"byte_end":8516733,"line_start":31,"line_end":31,"column_start":14,"column_end":25},"name":"remove_file","qualname":"::fs::remove_file::remove_file","value":"fn <P> (path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Removes a file.","sig":null,"attributes":[{"value":"/ Removes a file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516083,"byte_end":8516102,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516103,"byte_end":8516106,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::remove_file`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516107,"byte_end":8516173,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516174,"byte_end":8516177,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::remove_file`]: https://doc.rust-lang.org/std/fs/fn.remove_file.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516178,"byte_end":8516260,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516261,"byte_end":8516264,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516265,"byte_end":8516277,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516278,"byte_end":8516281,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516282,"byte_end":8516340,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516341,"byte_end":8516344,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516345,"byte_end":8516393,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/ * The current process lacks permissions to remove the file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516394,"byte_end":8516457,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516458,"byte_end":8516494,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516495,"byte_end":8516498,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516499,"byte_end":8516513,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516514,"byte_end":8516517,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516518,"byte_end":8516531,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516532,"byte_end":8516606,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516607,"byte_end":8516612,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516613,"byte_end":8516635,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516636,"byte_end":8516639,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fs::remove_file(\"a.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516640,"byte_end":8516676,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516677,"byte_end":8516682,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516683,"byte_end":8516700,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/remove_file.rs","byte_start":8516701,"byte_end":8516708,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5167},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517937,"byte_end":8517943,"line_start":35,"line_end":35,"column_start":14,"column_end":20},"name":"rename","qualname":"::fs::rename::rename","value":"fn <P, Q> (from: P, to: Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Renames a file or directory to a new location.","sig":null,"attributes":[{"value":"/ Renames a file or directory to a new location.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517089,"byte_end":8517139,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517140,"byte_end":8517143,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If a file or directory already exists at the target location, it will be overwritten by this","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517144,"byte_end":8517240,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ operation.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517241,"byte_end":8517255,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517256,"byte_end":8517259,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::rename`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517260,"byte_end":8517321,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517322,"byte_end":8517325,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::rename`]: https://doc.rust-lang.org/std/fs/fn.rename.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517326,"byte_end":8517398,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517399,"byte_end":8517402,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517403,"byte_end":8517415,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517416,"byte_end":8517419,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517420,"byte_end":8517478,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517479,"byte_end":8517482,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `from` does not point to an existing file or directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517483,"byte_end":8517544,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ * `from` and `to` are on different filesystems.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517545,"byte_end":8517596,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/ * The current process lacks permissions to do the rename operation.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517597,"byte_end":8517668,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517669,"byte_end":8517705,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517706,"byte_end":8517709,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517710,"byte_end":8517724,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517725,"byte_end":8517728,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517729,"byte_end":8517742,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517743,"byte_end":8517817,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517818,"byte_end":8517823,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517824,"byte_end":8517846,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517847,"byte_end":8517850,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ fs::rename(\"a.txt\", \"b.txt\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517851,"byte_end":8517891,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517892,"byte_end":8517897,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517898,"byte_end":8517915,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/rename.rs","byte_start":8517916,"byte_end":8517923,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5179},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8519270,"byte_end":8519285,"line_start":33,"line_end":33,"column_start":14,"column_end":29},"name":"set_permissions","qualname":"::fs::set_permissions::set_permissions","value":"fn <P> (path: P, perm: Permissions) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Changes the permissions of a file or directory.","sig":null,"attributes":[{"value":"/ Changes the permissions of a file or directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518445,"byte_end":8518496,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518497,"byte_end":8518500,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::set_permissions`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518501,"byte_end":8518571,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518572,"byte_end":8518575,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::set_permissions`]: https://doc.rust-lang.org/std/fs/fn.set_permissions.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518576,"byte_end":8518666,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518667,"byte_end":8518670,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518671,"byte_end":8518683,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518684,"byte_end":8518687,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518688,"byte_end":8518746,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518747,"byte_end":8518750,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518751,"byte_end":8518812,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to change attributes on the file or directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518813,"byte_end":8518903,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518904,"byte_end":8518940,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518941,"byte_end":8518944,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518945,"byte_end":8518959,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518960,"byte_end":8518963,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518964,"byte_end":8518977,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8518978,"byte_end":8519052,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8519053,"byte_end":8519058,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8519059,"byte_end":8519081,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8519082,"byte_end":8519085,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut perm = fs::metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8519086,"byte_end":8519148,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ perm.set_readonly(true);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8519149,"byte_end":8519177,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ fs::set_permissions(\"a.txt\", perm).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8519178,"byte_end":8519224,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8519225,"byte_end":8519230,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8519231,"byte_end":8519248,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/set_permissions.rs","byte_start":8519249,"byte_end":8519256,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5189},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520481,"byte_end":8520497,"line_start":35,"line_end":35,"column_start":14,"column_end":30},"name":"symlink_metadata","qualname":"::fs::symlink_metadata::symlink_metadata","value":"fn <P> (path: P) -> io::Result<Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads metadata for a path without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads metadata for a path without following symbolic links.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8519562,"byte_end":8519625,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8519626,"byte_end":8519629,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ If you want to follow symbolic links before reading metadata of the target file or directory,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8519630,"byte_end":8519727,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ use [`metadata`] instead.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8519728,"byte_end":8519757,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8519758,"byte_end":8519761,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::symlink_metadata`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8519762,"byte_end":8519833,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8519834,"byte_end":8519837,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`metadata`]: fn.metadata.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8519838,"byte_end":8519872,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/ [`std::fs::symlink_metadata`]: https://doc.rust-lang.org/std/fs/fn.symlink_metadata.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8519873,"byte_end":8519965,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8519966,"byte_end":8519969,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8519970,"byte_end":8519982,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8519983,"byte_end":8519986,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8519987,"byte_end":8520045,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520046,"byte_end":8520049,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * `path` does not point to an existing file or directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520050,"byte_end":8520111,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/ * The current process lacks permissions to read metadata for the path.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520112,"byte_end":8520186,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520187,"byte_end":8520223,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520224,"byte_end":8520227,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520228,"byte_end":8520242,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520243,"byte_end":8520246,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520247,"byte_end":8520260,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520261,"byte_end":8520335,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520336,"byte_end":8520341,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520342,"byte_end":8520364,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520365,"byte_end":8520368,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let perm = fs::symlink_metadata(\"a.txt\").await?.permissions();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520369,"byte_end":8520435,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520436,"byte_end":8520441,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520442,"byte_end":8520459,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/symlink_metadata.rs","byte_start":8520460,"byte_end":8520467,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":5199},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521555,"byte_end":8521560,"line_start":34,"line_end":34,"column_start":14,"column_end":19},"name":"write","qualname":"::fs::write::write","value":"fn <P, C> (path: P, contents: C) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a slice of bytes as the new contents of a file.","sig":null,"attributes":[{"value":"/ Writes a slice of bytes as the new contents of a file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8520763,"byte_end":8520821,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8520822,"byte_end":8520825,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function will create a file if it does not exist, and will entirely replace its contents","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8520826,"byte_end":8520923,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ if it does.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8520924,"byte_end":8520939,"line_start":9,"line_end":9,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8520940,"byte_end":8520943,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This function is an async version of [`std::fs::write`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8520944,"byte_end":8521004,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521005,"byte_end":8521008,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`std::fs::write`]: https://doc.rust-lang.org/std/fs/fn.write.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521009,"byte_end":8521079,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521080,"byte_end":8521083,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521084,"byte_end":8521096,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521097,"byte_end":8521100,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ An error will be returned in the following situations:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521101,"byte_end":8521159,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521160,"byte_end":8521163,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * The file's parent directory does not exist.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521164,"byte_end":8521213,"line_start":19,"line_end":19,"column_start":1,"column_end":50}},{"value":"/ * The current process lacks permissions to write to the file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521214,"byte_end":8521279,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ * Some other I/O error occurred.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521280,"byte_end":8521316,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521317,"byte_end":8521320,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521321,"byte_end":8521335,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521336,"byte_end":8521339,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521340,"byte_end":8521353,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521354,"byte_end":8521428,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521429,"byte_end":8521434,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521435,"byte_end":8521457,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521458,"byte_end":8521461,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ fs::write(\"a.txt\", b\"Hello world!\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521462,"byte_end":8521509,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521510,"byte_end":8521515,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521516,"byte_end":8521533,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/write.rs","byte_start":8521534,"byte_end":8521541,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5206},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::path","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","parent":null,"children":[{"krate":0,"index":5207},{"krate":0,"index":5215},{"krate":0,"index":5238},{"krate":0,"index":5269},{"krate":0,"index":5399},{"krate":0,"index":5498},{"krate":0,"index":5506},{"krate":0,"index":5507},{"krate":0,"index":5508},{"krate":0,"index":5509},{"krate":0,"index":5510}],"decl_id":null,"docs":" Cross-platform path manipulation.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":16457,"byte_end":16484,"line_start":232,"line_end":232,"column_start":13,"column_end":40}},{"value":"! Cross-platform path manipulation.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8521896,"byte_end":8521933,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8521934,"byte_end":8521937,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::path`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8521938,"byte_end":8521991,"line_start":3,"line_end":3,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8521992,"byte_end":8521995,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module provides two types, [`PathBuf`] and [`Path`][`Path`] (akin to [`String`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8521996,"byte_end":8522084,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"! and [`str`]), for working with paths abstractly. These types are thin wrappers","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522085,"byte_end":8522167,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"! around [`OsString`] and [`OsStr`] respectively, meaning that they work directly","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522168,"byte_end":8522251,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"! on strings according to the local platform's path syntax.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522252,"byte_end":8522313,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522314,"byte_end":8522317,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! Paths can be parsed into [`Component`]s by iterating over the structure","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522318,"byte_end":8522393,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"! returned by the [`components`] method on [`Path`]. [`Component`]s roughly","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522394,"byte_end":8522471,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"! correspond to the substrings between path separators (`/` or `\\`). You can","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522472,"byte_end":8522550,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"! reconstruct an equivalent path from components with the [`push`] method on","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522551,"byte_end":8522629,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"! [`PathBuf`]; note that the paths may differ syntactically by the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522630,"byte_end":8522698,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"! normalization described in the documentation for the [`components`] method.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522699,"byte_end":8522778,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522779,"byte_end":8522782,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! [`std::path`]: https://doc.rust-lang.org/std/path/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522783,"byte_end":8522847,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522848,"byte_end":8522851,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! ## Simple usage","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522852,"byte_end":8522871,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522872,"byte_end":8522875,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! Path manipulation includes both parsing components from slices and building","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522876,"byte_end":8522955,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"! new owned paths.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522956,"byte_end":8522976,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522977,"byte_end":8522980,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! To parse a path, you can create a [`Path`] slice from a [`str`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8522981,"byte_end":8523048,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"! slice and start asking questions:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523049,"byte_end":8523086,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523087,"byte_end":8523090,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523091,"byte_end":8523098,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"! use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523099,"byte_end":8523129,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"! use std::ffi::OsStr;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523130,"byte_end":8523154,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523155,"byte_end":8523158,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523159,"byte_end":8523204,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523205,"byte_end":8523208,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! let parent = path.parent();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523209,"byte_end":8523240,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"! assert_eq!(parent, Some(Path::new(\"/tmp/foo\")));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523241,"byte_end":8523293,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523294,"byte_end":8523297,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! let file_stem = path.file_stem();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523298,"byte_end":8523335,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"! assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523336,"byte_end":8523387,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523388,"byte_end":8523391,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! let extension = path.extension();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523392,"byte_end":8523429,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"! assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523430,"byte_end":8523481,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523482,"byte_end":8523489,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523490,"byte_end":8523493,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! To build or modify paths, use [`PathBuf`]:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523494,"byte_end":8523540,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523541,"byte_end":8523544,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523545,"byte_end":8523552,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"! use async_std::path::PathBuf;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523553,"byte_end":8523586,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523587,"byte_end":8523590,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! // This way works...","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523591,"byte_end":8523615,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"! let mut path = PathBuf::from(\"c:\\\\\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523616,"byte_end":8523657,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523658,"byte_end":8523661,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! path.push(\"windows\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523662,"byte_end":8523687,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"! path.push(\"system32\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523688,"byte_end":8523714,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523715,"byte_end":8523718,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! path.set_extension(\"dll\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523719,"byte_end":8523749,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523750,"byte_end":8523753,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! // ... but push is best used if you don't know everything up","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523754,"byte_end":8523818,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"! // front. If you do, this way is better:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523819,"byte_end":8523863,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"! let path: PathBuf = [\"c:\\\\\", \"windows\", \"system32.dll\"].iter().collect();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523864,"byte_end":8523941,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523942,"byte_end":8523949,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523950,"byte_end":8523953,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! [`Component`]: enum.Component.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523954,"byte_end":8523992,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"! [`components`]: struct.Path.html#method.components","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8523993,"byte_end":8524047,"line_start":62,"line_end":62,"column_start":1,"column_end":55}},{"value":"! [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524048,"byte_end":8524084,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"! [`Path`]: struct.Path.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524085,"byte_end":8524115,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"! [`push`]: struct.PathBuf.html#method.push","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524116,"byte_end":8524161,"line_start":65,"line_end":65,"column_start":1,"column_end":46}},{"value":"! [`String`]: https://doc.rust-lang.org/std/string/struct.String.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524162,"byte_end":8524233,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524234,"byte_end":8524237,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! [`str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524238,"byte_end":8524299,"line_start":68,"line_end":68,"column_start":1,"column_end":62}},{"value":"! [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524300,"byte_end":8524372,"line_start":69,"line_end":69,"column_start":1,"column_end":73}},{"value":"! [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/mod.rs","byte_start":8524373,"byte_end":8524439,"line_start":70,"line_end":70,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5811},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525320,"byte_end":8525329,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"Ancestors","qualname":"::path::ancestors::Ancestors","value":"Ancestors {  }","parent":null,"children":[{"krate":0,"index":5813}],"decl_id":null,"docs":" An iterator over [`Path`] and its ancestors.","sig":null,"attributes":[{"value":"/ An iterator over [`Path`] and its ancestors.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8524827,"byte_end":8524875,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8524876,"byte_end":8524879,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`ancestors`] method on [`Path`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8524880,"byte_end":8524949,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8524950,"byte_end":8524985,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8524986,"byte_end":8524989,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8524990,"byte_end":8525004,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525005,"byte_end":8525008,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525009,"byte_end":8525016,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525017,"byte_end":8525047,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525048,"byte_end":8525051,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525052,"byte_end":8525089,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525090,"byte_end":8525093,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ for ancestor in path.ancestors() {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525094,"byte_end":8525132,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/     println!(\"{}\", ancestor.display());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525133,"byte_end":8525176,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525177,"byte_end":8525182,"line_start":19,"line_end":19,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525183,"byte_end":8525190,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525191,"byte_end":8525194,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`ancestors`]: struct.Path.html#method.ancestors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525195,"byte_end":8525247,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525248,"byte_end":8525278,"line_start":23,"line_end":23,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5822},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526291,"byte_end":8526301,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"Components","qualname":"::path::components::Components","value":"Components {  }","parent":null,"children":[{"krate":0,"index":5824}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`].","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8525721,"byte_end":8525775,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8525776,"byte_end":8525779,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`components`] method on [`Path`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8525780,"byte_end":8525850,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8525851,"byte_end":8525886,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8525887,"byte_end":8525890,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8525891,"byte_end":8525905,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8525906,"byte_end":8525909,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8525910,"byte_end":8525917,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8525918,"byte_end":8525948,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8525949,"byte_end":8525952,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let path = Path::new(\"/tmp/foo/bar.txt\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8525953,"byte_end":8525998,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8525999,"byte_end":8526002,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ for component in path.components() {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526003,"byte_end":8526043,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/     println!(\"{:?}\", component);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526044,"byte_end":8526080,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526081,"byte_end":8526086,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526087,"byte_end":8526094,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526095,"byte_end":8526098,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526099,"byte_end":8526137,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`components`]: struct.Path.html#method.components","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526138,"byte_end":8526192,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526193,"byte_end":8526223,"line_start":25,"line_end":25,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5223},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526793,"byte_end":8526800,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Components>::as_path","value":"fn (&self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526390,"byte_end":8526476,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526481,"byte_end":8526484,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526489,"byte_end":8526503,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526508,"byte_end":8526511,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526516,"byte_end":8526523,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526528,"byte_end":8526558,"line_start":37,"line_end":37,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526563,"byte_end":8526566,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo/bar.txt\").components();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526571,"byte_end":8526639,"line_start":39,"line_end":39,"column_start":5,"column_end":73}},{"value":"/ components.next();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526644,"byte_end":8526666,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/ components.next();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526671,"byte_end":8526693,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526698,"byte_end":8526701,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), components.as_path());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526706,"byte_end":8526769,"line_start":43,"line_end":43,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526774,"byte_end":8526781,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5852},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528028,"byte_end":8528032,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Iter","qualname":"::path::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":5854}],"decl_id":null,"docs":" An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","sig":null,"attributes":[{"value":"/ An iterator over the [`Component`]s of a [`Path`], as [`OsStr`] slices.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8527655,"byte_end":8527730,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8527731,"byte_end":8527734,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`Path`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8527735,"byte_end":8527799,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8527800,"byte_end":8527835,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8527836,"byte_end":8527839,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8527840,"byte_end":8527878,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.Path.html#method.iter","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8527879,"byte_end":8527921,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`OsStr`]: ../../std/ffi/struct.OsStr.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8527922,"byte_end":8527968,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8527969,"byte_end":8527999,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5248},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528477,"byte_end":8528484,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"as_path","qualname":"<Iter>::as_path","value":"fn (&self) -> &'a Path","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice corresponding to the portion of the path remaining for iteration.","sig":null,"attributes":[{"value":"/ Extracts a slice corresponding to the portion of the path remaining for iteration.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528104,"byte_end":8528190,"line_start":22,"line_end":22,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528195,"byte_end":8528198,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528203,"byte_end":8528217,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528222,"byte_end":8528225,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528230,"byte_end":8528237,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528242,"byte_end":8528272,"line_start":27,"line_end":27,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528277,"byte_end":8528280,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let mut iter = Path::new(\"/tmp/foo/bar.txt\").iter();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528285,"byte_end":8528341,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ iter.next();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528346,"byte_end":8528362,"line_start":30,"line_end":30,"column_start":5,"column_end":21}},{"value":"/ iter.next();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528367,"byte_end":8528383,"line_start":31,"line_end":31,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528388,"byte_end":8528391,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"foo/bar.txt\"), iter.as_path());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528396,"byte_end":8528453,"line_start":33,"line_end":33,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528458,"byte_end":8528465,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5858},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531115,"byte_end":8531119,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"Path","qualname":"::path::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":5859}],"decl_id":null,"docs":" A slice of a path.","sig":null,"attributes":[{"value":"/ A slice of a path.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8529836,"byte_end":8529858,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8529859,"byte_end":8529862,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This struct is an async version of [`std::path::Path`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8529863,"byte_end":8529922,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8529923,"byte_end":8529926,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type supports a number of operations for inspecting a path, including","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8529927,"byte_end":8530005,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ breaking the path into its components (separated by `/` on Unix and by either","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530006,"byte_end":8530087,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ `/` or `\\` on Windows), extracting the file name, determining whether the path","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530088,"byte_end":8530170,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ is absolute, and so on.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530171,"byte_end":8530198,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530199,"byte_end":8530202,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is an *unsized* type, meaning that it must always be used behind a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530203,"byte_end":8530278,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ pointer like `&` or `Box`. For an owned version of this type,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530279,"byte_end":8530344,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ see [`PathBuf`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530345,"byte_end":8530365,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530366,"byte_end":8530369,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530370,"byte_end":8530406,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.Path.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530407,"byte_end":8530483,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530484,"byte_end":8530487,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ More details about the overall approach can be found in","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530488,"byte_end":8530547,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/ the [module documentation](index.html).","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530548,"byte_end":8530591,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530592,"byte_end":8530595,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530596,"byte_end":8530610,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530611,"byte_end":8530614,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530615,"byte_end":8530622,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530623,"byte_end":8530647,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530648,"byte_end":8530672,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530673,"byte_end":8530676,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Note: this example does work on Windows","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530677,"byte_end":8530723,"line_start":36,"line_end":36,"column_start":1,"column_end":47}},{"value":"/ let path = Path::new(\"./foo/bar.txt\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530724,"byte_end":8530766,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530767,"byte_end":8530770,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let parent = path.parent();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530771,"byte_end":8530802,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(parent, Some(Path::new(\"./foo\")));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530803,"byte_end":8530852,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530853,"byte_end":8530856,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let file_stem = path.file_stem();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530857,"byte_end":8530894,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(file_stem, Some(OsStr::new(\"bar\")));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530895,"byte_end":8530946,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530947,"byte_end":8530950,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let extension = path.extension();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530951,"byte_end":8530988,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(extension, Some(OsStr::new(\"txt\")));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8530989,"byte_end":8531040,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531041,"byte_end":8531048,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5290},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531751,"byte_end":8531754,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"fn <S> (s: &S) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Directly wraps a string slice as a `Path` slice.","sig":null,"attributes":[{"value":"/ Directly wraps a string slice as a `Path` slice.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531169,"byte_end":8531221,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531226,"byte_end":8531229,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is a cost-free conversion.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531234,"byte_end":8531269,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531274,"byte_end":8531277,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531282,"byte_end":8531296,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531301,"byte_end":8531304,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531309,"byte_end":8531316,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531321,"byte_end":8531351,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531356,"byte_end":8531359,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Path::new(\"foo.txt\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531364,"byte_end":8531389,"line_start":63,"line_end":63,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531394,"byte_end":8531401,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531406,"byte_end":8531409,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ You can create `Path`s from `String`s, or even other `Path`s:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531414,"byte_end":8531479,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531484,"byte_end":8531487,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531492,"byte_end":8531499,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531504,"byte_end":8531534,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531539,"byte_end":8531542,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let string = String::from(\"foo.txt\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531547,"byte_end":8531588,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ let from_string = Path::new(&string);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531593,"byte_end":8531634,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ let from_path = Path::new(&from_string);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531639,"byte_end":8531683,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_string, from_path);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531688,"byte_end":8531727,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531732,"byte_end":8531739,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5292},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532277,"byte_end":8532286,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"as_os_str","qualname":"<Path>::as_os_str","value":"fn (&self) -> &OsStr","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying [`OsStr`] slice.","sig":null,"attributes":[{"value":"/ Returns the underlying [`OsStr`] slice.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531898,"byte_end":8531941,"line_start":80,"line_end":80,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531946,"byte_end":8531949,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531954,"byte_end":8532020,"line_start":82,"line_end":82,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532025,"byte_end":8532028,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532033,"byte_end":8532047,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532052,"byte_end":8532055,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532060,"byte_end":8532067,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532072,"byte_end":8532096,"line_start":87,"line_end":87,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532101,"byte_end":8532104,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532109,"byte_end":8532139,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532144,"byte_end":8532147,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let os_str = Path::new(\"foo.txt\").as_os_str();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532152,"byte_end":8532202,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(os_str, OsStr::new(\"foo.txt\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532207,"byte_end":8532253,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532258,"byte_end":8532265,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5293},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532876,"byte_end":8532882,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"to_str","qualname":"<Path>::to_str","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`&str`] slice if the `Path` is valid unicode.","sig":null,"attributes":[{"value":"/ Returns a [`&str`] slice if the `Path` is valid unicode.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532348,"byte_end":8532408,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532413,"byte_end":8532416,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This conversion may entail doing a check for UTF-8 validity.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532421,"byte_end":8532485,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"/ Note that validation is performed because non-UTF-8 strings are","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532490,"byte_end":8532557,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/ perfectly valid for some OS.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532562,"byte_end":8532594,"line_start":102,"line_end":102,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532599,"byte_end":8532602,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`&str`]: https://doc.rust-lang.org/std/primitive.str.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532607,"byte_end":8532669,"line_start":104,"line_end":104,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532674,"byte_end":8532677,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532682,"byte_end":8532696,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532701,"byte_end":8532704,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532709,"byte_end":8532716,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532721,"byte_end":8532751,"line_start":109,"line_end":109,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532756,"byte_end":8532759,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532764,"byte_end":8532800,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_str(), Some(\"foo.txt\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532805,"byte_end":8532852,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532857,"byte_end":8532864,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5294},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533675,"byte_end":8533690,"line_start":139,"line_end":139,"column_start":12,"column_end":27},"name":"to_string_lossy","qualname":"<Path>::to_string_lossy","value":"fn (&self) -> Cow<'_, str>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to a [`Cow<str>`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to a [`Cow<str>`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532947,"byte_end":8532987,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8532992,"byte_end":8532995,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Any non-Unicode sequences are replaced with","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533000,"byte_end":8533047,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/ [`U+FFFD REPLACEMENT CHARACTER`][U+FFFD].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533052,"byte_end":8533097,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533102,"byte_end":8533105,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`Cow<str>`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533110,"byte_end":8533178,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ [U+FFFD]: https://doc.rust-lang.org/std/char/constant.REPLACEMENT_CHARACTER.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533183,"byte_end":8533267,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533272,"byte_end":8533275,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533280,"byte_end":8533294,"line_start":126,"line_end":126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533299,"byte_end":8533302,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Calling `to_string_lossy` on a `Path` with valid unicode:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533307,"byte_end":8533368,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533373,"byte_end":8533376,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533381,"byte_end":8533388,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533393,"byte_end":8533423,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533428,"byte_end":8533431,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.txt\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533436,"byte_end":8533472,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(path.to_string_lossy(), \"foo.txt\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533477,"byte_end":8533527,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533532,"byte_end":8533539,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533544,"byte_end":8533547,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Had `path` contained invalid unicode, the `to_string_lossy` call might","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533552,"byte_end":8533626,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/ have returned `\"fo�.txt\"`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533631,"byte_end":8533663,"line_start":138,"line_end":138,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5295},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534099,"byte_end":8534110,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"to_path_buf","qualname":"<Path>::to_path_buf","value":"fn (&self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Path` to an owned [`PathBuf`].","sig":null,"attributes":[{"value":"/ Converts a `Path` to an owned [`PathBuf`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533764,"byte_end":8533810,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533815,"byte_end":8533818,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533823,"byte_end":8533859,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533864,"byte_end":8533867,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533872,"byte_end":8533886,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533891,"byte_end":8533894,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533899,"byte_end":8533906,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533911,"byte_end":8533952,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533957,"byte_end":8533960,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let path_buf = Path::new(\"foo.txt\").to_path_buf();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8533965,"byte_end":8534019,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(path_buf, PathBuf::from(\"foo.txt\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534024,"byte_end":8534075,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534080,"byte_end":8534087,"line_start":154,"line_end":154,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5296},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534810,"byte_end":8534821,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"is_absolute","qualname":"<Path>::is_absolute","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is absolute, i.e. if it is independent of\n the current directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is absolute, i.e. if it is independent of","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534190,"byte_end":8534264,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ the current directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534269,"byte_end":8534295,"line_start":160,"line_end":160,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534300,"byte_end":8534303,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path is absolute if it starts with the root, so","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534308,"byte_end":8534372,"line_start":162,"line_end":162,"column_start":5,"column_end":69}},{"value":"/   `is_absolute` and [`has_root`] are equivalent.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534377,"byte_end":8534429,"line_start":163,"line_end":163,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534434,"byte_end":8534437,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path is absolute if it has a prefix and starts with the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534442,"byte_end":8534517,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/   root: `c:\\windows` is absolute, while `c:temp` and `\\temp` are not.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534522,"byte_end":8534595,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534600,"byte_end":8534603,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ [`has_root`]: #method.has_root","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534608,"byte_end":8534642,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534647,"byte_end":8534650,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534655,"byte_end":8534669,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534674,"byte_end":8534677,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534682,"byte_end":8534689,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534694,"byte_end":8534724,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534729,"byte_end":8534732,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ assert!(!Path::new(\"foo.txt\").is_absolute());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534737,"byte_end":8534786,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534791,"byte_end":8534798,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5297},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535237,"byte_end":8535248,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"is_relative","qualname":"<Path>::is_relative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` is relative, i.e. not absolute.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` is relative, i.e. not absolute.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534883,"byte_end":8534947,"line_start":181,"line_end":181,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534952,"byte_end":8534955,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ See [`is_absolute`]'s documentation for more details.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8534960,"byte_end":8535017,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535022,"byte_end":8535025,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`is_absolute`]: #method.is_absolute","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535030,"byte_end":8535070,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535075,"byte_end":8535078,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535083,"byte_end":8535097,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535102,"byte_end":8535105,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535110,"byte_end":8535117,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535122,"byte_end":8535152,"line_start":190,"line_end":190,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535157,"byte_end":8535160,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"foo.txt\").is_relative());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535165,"byte_end":8535213,"line_start":192,"line_end":192,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535218,"byte_end":8535225,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5298},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535869,"byte_end":8535877,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"has_root","qualname":"<Path>::has_root","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Path` has a root.","sig":null,"attributes":[{"value":"/ Returns `true` if the `Path` has a root.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535310,"byte_end":8535354,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535359,"byte_end":8535362,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ * On Unix, a path has a root if it begins with `/`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535367,"byte_end":8535422,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535427,"byte_end":8535430,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ * On Windows, a path has a root if it:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535435,"byte_end":8535477,"line_start":202,"line_end":202,"column_start":5,"column_end":47}},{"value":"/     * has no prefix and begins with a separator, e.g. `\\windows`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535482,"byte_end":8535550,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/     * has a prefix followed by a separator, e.g. `c:\\windows` but not `c:windows`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535555,"byte_end":8535640,"line_start":204,"line_end":204,"column_start":5,"column_end":90}},{"value":"/     * has any non-disk prefix, e.g. `\\\\server\\share`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535645,"byte_end":8535701,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535706,"byte_end":8535709,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535714,"byte_end":8535728,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535733,"byte_end":8535736,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535741,"byte_end":8535748,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535753,"byte_end":8535783,"line_start":210,"line_end":210,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535788,"byte_end":8535791,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert!(Path::new(\"/etc/passwd\").has_root());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535796,"byte_end":8535845,"line_start":212,"line_end":212,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535850,"byte_end":8535857,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5299},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536582,"byte_end":8536588,"line_start":237,"line_end":237,"column_start":12,"column_end":18},"name":"parent","qualname":"<Path>::parent","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Path` without its final component, if there is one.","sig":null,"attributes":[{"value":"/ Returns the `Path` without its final component, if there is one.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8535936,"byte_end":8536004,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536009,"byte_end":8536012,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in a root or prefix.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536017,"byte_end":8536081,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536086,"byte_end":8536089,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536094,"byte_end":8536174,"line_start":222,"line_end":222,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536179,"byte_end":8536182,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536187,"byte_end":8536201,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536206,"byte_end":8536209,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536214,"byte_end":8536221,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536226,"byte_end":8536256,"line_start":227,"line_end":227,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536261,"byte_end":8536264,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/bar\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536269,"byte_end":8536306,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ let parent = path.parent().unwrap();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536311,"byte_end":8536351,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(parent, Path::new(\"/foo\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536356,"byte_end":8536398,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536403,"byte_end":8536406,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let grand_parent = parent.parent().unwrap();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536411,"byte_end":8536459,"line_start":233,"line_end":233,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(grand_parent, Path::new(\"/\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536464,"byte_end":8536509,"line_start":234,"line_end":234,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(grand_parent.parent(), None);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536514,"byte_end":8536558,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536563,"byte_end":8536570,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5301},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537711,"byte_end":8537720,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"ancestors","qualname":"<Path>::ancestors","value":"fn (&self) -> Ancestors<'_>","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over `Path` and its ancestors.","sig":null,"attributes":[{"value":"/ Produces an iterator over `Path` and its ancestors.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536672,"byte_end":8536727,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536732,"byte_end":8536735,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The iterator will yield the `Path` that is returned if the [`parent`] method is used zero","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536740,"byte_end":8536833,"line_start":243,"line_end":243,"column_start":5,"column_end":98}},{"value":"/ or more times. That means, the iterator will yield `&self`, `&self.parent().unwrap()`,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536838,"byte_end":8536928,"line_start":244,"line_end":244,"column_start":5,"column_end":95}},{"value":"/ `&self.parent().unwrap().parent().unwrap()` and so on. If the [`parent`] method returns","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8536933,"byte_end":8537024,"line_start":245,"line_end":245,"column_start":5,"column_end":96}},{"value":"/ [`None`], the iterator will do likewise. The iterator will always yield at least one value,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537029,"byte_end":8537124,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/ namely `&self`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537129,"byte_end":8537148,"line_start":247,"line_end":247,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537153,"byte_end":8537156,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537161,"byte_end":8537228,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/ [`parent`]: struct.Path.html#method.parent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537233,"byte_end":8537279,"line_start":250,"line_end":250,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537284,"byte_end":8537287,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537292,"byte_end":8537306,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537311,"byte_end":8537314,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537319,"byte_end":8537326,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537331,"byte_end":8537361,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537366,"byte_end":8537369,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let mut ancestors = Path::new(\"/foo/bar\").ancestors();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537374,"byte_end":8537432,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo/bar\").into()));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537437,"byte_end":8537506,"line_start":258,"line_end":258,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/foo\").into()));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537511,"byte_end":8537576,"line_start":259,"line_end":259,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(ancestors.next(), Some(Path::new(\"/\").into()));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537581,"byte_end":8537643,"line_start":260,"line_end":260,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(ancestors.next(), None);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537648,"byte_end":8537687,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537692,"byte_end":8537699,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5302},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538765,"byte_end":8538774,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"file_name","qualname":"<Path>::file_name","value":"fn (&self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the final component of the `Path`, if there is one.","sig":null,"attributes":[{"value":"/ Returns the final component of the `Path`, if there is one.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537798,"byte_end":8537861,"line_start":267,"line_end":267,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537866,"byte_end":8537869,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ If the path is a normal file, this is the file name. If it's the path of a directory, this","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537874,"byte_end":8537968,"line_start":269,"line_end":269,"column_start":5,"column_end":99}},{"value":"/ is the directory name.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8537973,"byte_end":8537999,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538004,"byte_end":8538007,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the path terminates in `..`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538012,"byte_end":8538064,"line_start":272,"line_end":272,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538069,"byte_end":8538072,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538077,"byte_end":8538157,"line_start":274,"line_end":274,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538162,"byte_end":8538165,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538170,"byte_end":8538184,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538189,"byte_end":8538192,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538197,"byte_end":8538204,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538209,"byte_end":8538233,"line_start":279,"line_end":279,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538238,"byte_end":8538241,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538246,"byte_end":8538276,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538281,"byte_end":8538284,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(OsStr::new(\"bin\")), Path::new(\"/usr/bin/\").file_name());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538289,"byte_end":8538365,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"tmp/foo.txt\").file_name());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538370,"byte_end":8538452,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.\").file_name());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538457,"byte_end":8538537,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(Some(OsStr::new(\"foo.txt\")), Path::new(\"foo.txt/.//\").file_name());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538542,"byte_end":8538624,"line_start":286,"line_end":286,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(None, Path::new(\"foo.txt/..\").file_name());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538629,"byte_end":8538687,"line_start":287,"line_end":287,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(None, Path::new(\"/\").file_name());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538692,"byte_end":8538741,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538746,"byte_end":8538753,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5303},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540028,"byte_end":8540040,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"strip_prefix","qualname":"<Path>::strip_prefix","value":"fn <P> (&self, base: P) -> Result<&Path, StripPrefixError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a path that becomes `self` when joined onto `base`.","sig":null,"attributes":[{"value":"/ Returns a path that becomes `self` when joined onto `base`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538844,"byte_end":8538907,"line_start":294,"line_end":294,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538912,"byte_end":8538915,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538920,"byte_end":8538932,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538937,"byte_end":8538940,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ If `base` is not a prefix of `self` (i.e., [`starts_with`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8538945,"byte_end":8539007,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/ returns `false`), returns [`Err`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539012,"byte_end":8539050,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539055,"byte_end":8539058,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`starts_with`]: #method.starts_with","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539063,"byte_end":8539103,"line_start":301,"line_end":301,"column_start":5,"column_end":45}},{"value":"/ [`Err`]: https://doc.rust-lang.org/std/result/enum.Result.html#variant.Err","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539108,"byte_end":8539186,"line_start":302,"line_end":302,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539191,"byte_end":8539194,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539199,"byte_end":8539213,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539218,"byte_end":8539221,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539226,"byte_end":8539233,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539238,"byte_end":8539279,"line_start":307,"line_end":307,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539284,"byte_end":8539287,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/test/haha/foo.txt\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539292,"byte_end":8539339,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539344,"byte_end":8539347,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(path.strip_prefix(\"/\"), Ok(Path::new(\"test/haha/foo.txt\")));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539352,"byte_end":8539427,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539432,"byte_end":8539506,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/\"), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539511,"byte_end":8539586,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt\"), Ok(Path::new(\"\")));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539591,"byte_end":8539666,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(path.strip_prefix(\"/test/haha/foo.txt/\"), Ok(Path::new(\"\")));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539671,"byte_end":8539747,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(path.strip_prefix(\"test\").is_ok(), false);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539752,"byte_end":8539809,"line_start":316,"line_end":316,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(path.strip_prefix(\"/haha\").is_ok(), false);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539814,"byte_end":8539872,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539877,"byte_end":8539880,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let prefix = PathBuf::from(\"/test/\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539885,"byte_end":8539926,"line_start":319,"line_end":319,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.strip_prefix(prefix), Ok(Path::new(\"haha/foo.txt\")));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8539931,"byte_end":8540004,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540009,"byte_end":8540016,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5305},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540725,"byte_end":8540736,"line_start":347,"line_end":347,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Path>::starts_with","value":"fn <P> (&self, base: P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `base` is a prefix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `base` is a prefix of `self`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540205,"byte_end":8540257,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540262,"byte_end":8540265,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540270,"byte_end":8540320,"line_start":331,"line_end":331,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540325,"byte_end":8540328,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540333,"byte_end":8540347,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540352,"byte_end":8540355,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540360,"byte_end":8540367,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540372,"byte_end":8540402,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540407,"byte_end":8540410,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540415,"byte_end":8540455,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540460,"byte_end":8540463,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert!(path.starts_with(\"/etc\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540468,"byte_end":8540506,"line_start":340,"line_end":340,"column_start":5,"column_end":43}},{"value":"/ assert!(path.starts_with(\"/etc/\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540511,"byte_end":8540550,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/ assert!(path.starts_with(\"/etc/passwd\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540555,"byte_end":8540600,"line_start":342,"line_end":342,"column_start":5,"column_end":50}},{"value":"/ assert!(path.starts_with(\"/etc/passwd/\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540605,"byte_end":8540651,"line_start":343,"line_end":343,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540656,"byte_end":8540659,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ assert!(!path.starts_with(\"/e\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540664,"byte_end":8540701,"line_start":345,"line_end":345,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540706,"byte_end":8540713,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5307},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541162,"byte_end":8541171,"line_start":364,"line_end":364,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<Path>::ends_with","value":"fn <P> (&self, child: P) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether `child` is a suffix of `self`.","sig":null,"attributes":[{"value":"/ Determines whether `child` is a suffix of `self`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540836,"byte_end":8540889,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540894,"byte_end":8540897,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Only considers whole path components to match.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540902,"byte_end":8540952,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540957,"byte_end":8540960,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540965,"byte_end":8540979,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540984,"byte_end":8540987,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8540992,"byte_end":8540999,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541004,"byte_end":8541034,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541039,"byte_end":8541042,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/etc/passwd\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541047,"byte_end":8541087,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541092,"byte_end":8541095,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ assert!(path.ends_with(\"passwd\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541100,"byte_end":8541138,"line_start":362,"line_end":362,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541143,"byte_end":8541150,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5309},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542013,"byte_end":8542022,"line_start":390,"line_end":390,"column_start":12,"column_end":21},"name":"file_stem","qualname":"<Path>::file_stem","value":"fn (&self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the stem (non-extension) portion of [`file_name`].","sig":null,"attributes":[{"value":"/ Extracts the stem (non-extension) portion of [`file_name`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541271,"byte_end":8541334,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541339,"byte_end":8541342,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541347,"byte_end":8541399,"line_start":370,"line_end":370,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541404,"byte_end":8541407,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The stem is:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541412,"byte_end":8541428,"line_start":372,"line_end":372,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541433,"byte_end":8541436,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541441,"byte_end":8541481,"line_start":374,"line_end":374,"column_start":5,"column_end":45}},{"value":"/ * The entire file name if there is no embedded `.`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541486,"byte_end":8541540,"line_start":375,"line_end":375,"column_start":5,"column_end":59}},{"value":"/ * The entire file name if the file name begins with `.` and has no other `.`s within","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541545,"byte_end":8541633,"line_start":376,"line_end":376,"column_start":5,"column_end":93}},{"value":"/ * Otherwise, the portion of the file name before the final `.`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541638,"byte_end":8541704,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541709,"byte_end":8541712,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541717,"byte_end":8541797,"line_start":379,"line_end":379,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541802,"byte_end":8541805,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541810,"byte_end":8541824,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541829,"byte_end":8541832,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541837,"byte_end":8541844,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541849,"byte_end":8541879,"line_start":384,"line_end":384,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541884,"byte_end":8541887,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541892,"byte_end":8541927,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541932,"byte_end":8541935,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foo\", path.file_stem().unwrap());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541940,"byte_end":8541989,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8541994,"byte_end":8542001,"line_start":389,"line_end":389,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5310},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542801,"byte_end":8542810,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"extension","qualname":"<Path>::extension","value":"fn (&self) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the extension of [`file_name`], if possible.","sig":null,"attributes":[{"value":"/ Extracts the extension of [`file_name`], if possible.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542092,"byte_end":8542149,"line_start":394,"line_end":394,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542154,"byte_end":8542157,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The extension is:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542162,"byte_end":8542183,"line_start":396,"line_end":396,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542188,"byte_end":8542191,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ * [`None`], if there is no file name","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542196,"byte_end":8542236,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/ * [`None`], if there is no embedded `.`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542241,"byte_end":8542284,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/ * [`None`], if the file name begins with `.` and has no other `.`s within","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542289,"byte_end":8542366,"line_start":400,"line_end":400,"column_start":5,"column_end":82}},{"value":"/ * Otherwise, the portion of the file name after the final `.`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542371,"byte_end":8542436,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542441,"byte_end":8542444,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`file_name`]: struct.Path.html#method.file_name","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542449,"byte_end":8542501,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542506,"byte_end":8542586,"line_start":404,"line_end":404,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542591,"byte_end":8542594,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542599,"byte_end":8542613,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542618,"byte_end":8542621,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542626,"byte_end":8542633,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542638,"byte_end":8542668,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542673,"byte_end":8542676,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542681,"byte_end":8542716,"line_start":411,"line_end":411,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542721,"byte_end":8542724,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"rs\", path.extension().unwrap());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542729,"byte_end":8542777,"line_start":413,"line_end":413,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542782,"byte_end":8542789,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5311},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543351,"byte_end":8543355,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"join","qualname":"<Path>::join","value":"fn <P> (&self, path: P) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] with `path` adjoined to `self`.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] with `path` adjoined to `self`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542880,"byte_end":8542944,"line_start":419,"line_end":419,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542949,"byte_end":8542952,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::push`] for more details on what it means to adjoin a path.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8542957,"byte_end":8543034,"line_start":421,"line_end":421,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543039,"byte_end":8543042,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543047,"byte_end":8543083,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::push`]: struct.PathBuf.html#method.push","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543088,"byte_end":8543142,"line_start":424,"line_end":424,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543147,"byte_end":8543150,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543155,"byte_end":8543169,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543174,"byte_end":8543177,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543182,"byte_end":8543189,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543194,"byte_end":8543235,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543240,"byte_end":8543243,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"/etc\").join(\"passwd\"), PathBuf::from(\"/etc/passwd\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543248,"byte_end":8543327,"line_start":431,"line_end":431,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543332,"byte_end":8543339,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5313},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544094,"byte_end":8544108,"line_start":455,"line_end":455,"column_start":12,"column_end":26},"name":"with_file_name","qualname":"<Path>::with_file_name","value":"fn <S> (&self, file_name: S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given file name.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given file name.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543458,"byte_end":8543532,"line_start":437,"line_end":437,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543537,"byte_end":8543540,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_file_name`] for more details.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543545,"byte_end":8543597,"line_start":439,"line_end":439,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543602,"byte_end":8543605,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543610,"byte_end":8543646,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_file_name`]: struct.PathBuf.html#method.set_file_name","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543651,"byte_end":8543723,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543728,"byte_end":8543731,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543736,"byte_end":8543750,"line_start":444,"line_end":444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543755,"byte_end":8543758,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543763,"byte_end":8543770,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543775,"byte_end":8543816,"line_start":447,"line_end":447,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543821,"byte_end":8543824,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.txt\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543829,"byte_end":8543870,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(path.with_file_name(\"bar.txt\"), PathBuf::from(\"/tmp/bar.txt\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543875,"byte_end":8543953,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543958,"byte_end":8543961,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8543966,"byte_end":8543999,"line_start":452,"line_end":452,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(path.with_file_name(\"var\"), PathBuf::from(\"/var\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544004,"byte_end":8544070,"line_start":453,"line_end":453,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544075,"byte_end":8544082,"line_start":454,"line_end":454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5315},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544727,"byte_end":8544741,"line_start":474,"line_end":474,"column_start":12,"column_end":26},"name":"with_extension","qualname":"<Path>::with_extension","value":"fn <S> (&self, extension: S) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates an owned [`PathBuf`] like `self` but with the given extension.","sig":null,"attributes":[{"value":"/ Creates an owned [`PathBuf`] like `self` but with the given extension.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544223,"byte_end":8544297,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544302,"byte_end":8544305,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ See [`PathBuf::set_extension`] for more details.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544310,"byte_end":8544362,"line_start":461,"line_end":461,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544367,"byte_end":8544370,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544375,"byte_end":8544411,"line_start":463,"line_end":463,"column_start":5,"column_end":41}},{"value":"/ [`PathBuf::set_extension`]: struct.PathBuf.html#method.set_extension","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544416,"byte_end":8544488,"line_start":464,"line_end":464,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544493,"byte_end":8544496,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544501,"byte_end":8544515,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544520,"byte_end":8544523,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544528,"byte_end":8544535,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544540,"byte_end":8544581,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544586,"byte_end":8544589,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"foo.rs\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544594,"byte_end":8544629,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(path.with_extension(\"txt\"), PathBuf::from(\"foo.txt\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544634,"byte_end":8544703,"line_start":472,"line_end":472,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544708,"byte_end":8544715,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5317},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546328,"byte_end":8546338,"line_start":513,"line_end":513,"column_start":12,"column_end":22},"name":"components","qualname":"<Path>::components","value":"fn (&self) -> Components<'_>","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the [`Component`]s of the path.","sig":null,"attributes":[{"value":"/ Produces an iterator over the [`Component`]s of the path.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544856,"byte_end":8544917,"line_start":478,"line_end":478,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544922,"byte_end":8544925,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ When parsing the path, there is a small amount of normalization:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8544930,"byte_end":8544998,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545003,"byte_end":8545006,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ * Repeated separators are ignored, so `a/b` and `a//b` both have","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545011,"byte_end":8545079,"line_start":482,"line_end":482,"column_start":5,"column_end":73}},{"value":"/   `a` and `b` as components.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545084,"byte_end":8545116,"line_start":483,"line_end":483,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545121,"byte_end":8545124,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ * Occurrences of `.` are normalized away, except if they are at the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545129,"byte_end":8545200,"line_start":485,"line_end":485,"column_start":5,"column_end":76}},{"value":"/   beginning of the path. For example, `a/./b`, `a/b/`, `a/b/.` and","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545205,"byte_end":8545275,"line_start":486,"line_end":486,"column_start":5,"column_end":75}},{"value":"/   `a/b` all have `a` and `b` as components, but `./a/b` starts with","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545280,"byte_end":8545351,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/   an additional [`CurDir`] component.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545356,"byte_end":8545397,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545402,"byte_end":8545405,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ * A trailing slash is normalized away, `/a/b` and `/a/b/` are equivalent.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545410,"byte_end":8545487,"line_start":490,"line_end":490,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545492,"byte_end":8545495,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Note that no other normalization takes place; in particular, `a/c`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545500,"byte_end":8545570,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ and `a/b/../c` are distinct, to account for the possibility that `b`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545575,"byte_end":8545647,"line_start":493,"line_end":493,"column_start":5,"column_end":77}},{"value":"/ is a symbolic link (so its parent isn't `a`).","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545652,"byte_end":8545701,"line_start":494,"line_end":494,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545706,"byte_end":8545709,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ [`Component`]: enum.Component.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545714,"byte_end":8545752,"line_start":496,"line_end":496,"column_start":5,"column_end":43}},{"value":"/ [`CurDir`]: enum.Component.html#variant.CurDir","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545757,"byte_end":8545807,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545812,"byte_end":8545815,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545820,"byte_end":8545834,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545839,"byte_end":8545842,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545847,"byte_end":8545854,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545859,"byte_end":8545883,"line_start":502,"line_end":502,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545888,"byte_end":8545891,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{Path, Component};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545896,"byte_end":8545939,"line_start":504,"line_end":504,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545944,"byte_end":8545947,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut components = Path::new(\"/tmp/foo.txt\").components();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8545952,"byte_end":8546016,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546021,"byte_end":8546024,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(components.next(), Some(Component::RootDir));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546029,"byte_end":8546089,"line_start":508,"line_end":508,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"tmp\"))));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546094,"byte_end":8546172,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(components.next(), Some(Component::Normal(OsStr::new(\"foo.txt\"))));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546177,"byte_end":8546259,"line_start":510,"line_end":510,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(components.next(), None);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546264,"byte_end":8546304,"line_start":511,"line_end":511,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546309,"byte_end":8546316,"line_start":512,"line_end":512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5318},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547244,"byte_end":8547248,"line_start":541,"line_end":541,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path>::iter","value":"fn (&self) -> Iter<'_>","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the path's components viewed as [`OsStr`]\n slices.","sig":null,"attributes":[{"value":"/ Produces an iterator over the path's components viewed as [`OsStr`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546452,"byte_end":8546523,"line_start":519,"line_end":519,"column_start":5,"column_end":76}},{"value":"/ slices.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546528,"byte_end":8546539,"line_start":520,"line_end":520,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546544,"byte_end":8546547,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For more information about the particulars of how the path is separated","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546552,"byte_end":8546627,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ into components, see [`components`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546632,"byte_end":8546672,"line_start":523,"line_end":523,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546677,"byte_end":8546680,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`components`]: #method.components","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546685,"byte_end":8546723,"line_start":525,"line_end":525,"column_start":5,"column_end":43}},{"value":"/ [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546728,"byte_end":8546794,"line_start":526,"line_end":526,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546799,"byte_end":8546802,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546807,"byte_end":8546821,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546826,"byte_end":8546829,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546834,"byte_end":8546841,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546846,"byte_end":8546870,"line_start":531,"line_end":531,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546875,"byte_end":8546878,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ use async_std::path::{self, Path};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546883,"byte_end":8546921,"line_start":533,"line_end":533,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546926,"byte_end":8546929,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut it = Path::new(\"/tmp/foo.txt\").iter();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546934,"byte_end":8546984,"line_start":535,"line_end":535,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(&path::MAIN_SEPARATOR.to_string())));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8546989,"byte_end":8547068,"line_start":536,"line_end":536,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"tmp\")));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547073,"byte_end":8547124,"line_start":537,"line_end":537,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(it.next(), Some(OsStr::new(\"foo.txt\")));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547129,"byte_end":8547184,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(it.next(), None)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547189,"byte_end":8547220,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547225,"byte_end":8547232,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5319},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547751,"byte_end":8547758,"line_start":561,"line_end":561,"column_start":12,"column_end":19},"name":"display","qualname":"<Path>::display","value":"fn (&self) -> Display<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns an object that implements [`Display`] for safely printing paths\n that may contain non-Unicode data.","sig":null,"attributes":[{"value":"/ Returns an object that implements [`Display`] for safely printing paths","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547344,"byte_end":8547419,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ that may contain non-Unicode data.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547424,"byte_end":8547462,"line_start":548,"line_end":548,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547467,"byte_end":8547470,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ [`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547475,"byte_end":8547544,"line_start":550,"line_end":550,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547549,"byte_end":8547552,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547557,"byte_end":8547571,"line_start":552,"line_end":552,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547576,"byte_end":8547579,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547584,"byte_end":8547591,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547596,"byte_end":8547626,"line_start":555,"line_end":555,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547631,"byte_end":8547634,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/tmp/foo.rs\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547639,"byte_end":8547679,"line_start":557,"line_end":557,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547684,"byte_end":8547687,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ println!(\"{}\", path.display());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547692,"byte_end":8547727,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547732,"byte_end":8547739,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5320},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548524,"byte_end":8548532,"line_start":588,"line_end":588,"column_start":18,"column_end":26},"name":"metadata","qualname":"<Path>::metadata","value":"fn (&self) -> io::Result<fs::Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547823,"byte_end":8547869,"line_start":565,"line_end":565,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547874,"byte_end":8547877,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547882,"byte_end":8547959,"line_start":567,"line_end":567,"column_start":5,"column_end":82}},{"value":"/ destination file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547964,"byte_end":8547985,"line_start":568,"line_end":568,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547990,"byte_end":8547993,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::metadata`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8547998,"byte_end":8548039,"line_start":570,"line_end":570,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548044,"byte_end":8548047,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ [`fs::metadata`]: ../fs/fn.metadata.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548052,"byte_end":8548096,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548101,"byte_end":8548104,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548109,"byte_end":8548123,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548128,"byte_end":8548131,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548136,"byte_end":8548149,"line_start":576,"line_end":576,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548154,"byte_end":8548228,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548233,"byte_end":8548238,"line_start":578,"line_end":578,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548243,"byte_end":8548273,"line_start":579,"line_end":579,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548278,"byte_end":8548281,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548286,"byte_end":8548328,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.metadata().await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548333,"byte_end":8548375,"line_start":582,"line_end":582,"column_start":5,"column_end":47}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548380,"byte_end":8548423,"line_start":583,"line_end":583,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548428,"byte_end":8548433,"line_start":584,"line_end":584,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548438,"byte_end":8548455,"line_start":585,"line_end":585,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548460,"byte_end":8548467,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548472,"byte_end":8548506,"line_start":587,"line_end":587,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5323},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549264,"byte_end":8549280,"line_start":612,"line_end":612,"column_start":18,"column_end":34},"name":"symlink_metadata","qualname":"<Path>::symlink_metadata","value":"fn (&self) -> io::Result<fs::Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Reads the metadata of a file or directory without following symbolic links.","sig":null,"attributes":[{"value":"/ Reads the metadata of a file or directory without following symbolic links.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548614,"byte_end":8548693,"line_start":592,"line_end":592,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548698,"byte_end":8548701,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::symlink_metadata`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548706,"byte_end":8548755,"line_start":594,"line_end":594,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548760,"byte_end":8548763,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ [`fs::symlink_metadata`]: ../fs/fn.symlink_metadata.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548768,"byte_end":8548828,"line_start":596,"line_end":596,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548833,"byte_end":8548836,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548841,"byte_end":8548855,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548860,"byte_end":8548863,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548868,"byte_end":8548881,"line_start":600,"line_end":600,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548886,"byte_end":8548960,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548965,"byte_end":8548970,"line_start":602,"line_end":602,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8548975,"byte_end":8549005,"line_start":603,"line_end":603,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549010,"byte_end":8549013,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/Minas/tirith\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549018,"byte_end":8549060,"line_start":605,"line_end":605,"column_start":5,"column_end":47}},{"value":"/ let metadata = path.symlink_metadata().await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549065,"byte_end":8549115,"line_start":606,"line_end":606,"column_start":5,"column_end":55}},{"value":"/ println!(\"{:?}\", metadata.file_type());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549120,"byte_end":8549163,"line_start":607,"line_end":607,"column_start":5,"column_end":48}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549168,"byte_end":8549173,"line_start":608,"line_end":608,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549178,"byte_end":8549195,"line_start":609,"line_end":609,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549200,"byte_end":8549207,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549212,"byte_end":8549246,"line_start":611,"line_end":611,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5326},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550107,"byte_end":8550119,"line_start":638,"line_end":638,"column_start":18,"column_end":30},"name":"canonicalize","qualname":"<Path>::canonicalize","value":"fn (&self) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Returns the canonical form of a path.","sig":null,"attributes":[{"value":"/ Returns the canonical form of a path.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549370,"byte_end":8549411,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549416,"byte_end":8549419,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ The returned path is in absolute form with all intermediate components normalized and","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549424,"byte_end":8549513,"line_start":618,"line_end":618,"column_start":5,"column_end":94}},{"value":"/ symbolic links resolved.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549518,"byte_end":8549546,"line_start":619,"line_end":619,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549551,"byte_end":8549554,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::canonicalize`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549559,"byte_end":8549604,"line_start":621,"line_end":621,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549609,"byte_end":8549612,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ [`fs::canonicalize`]: ../fs/fn.canonicalize.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549617,"byte_end":8549669,"line_start":623,"line_end":623,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549674,"byte_end":8549677,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549682,"byte_end":8549696,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549701,"byte_end":8549704,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549709,"byte_end":8549722,"line_start":627,"line_end":627,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549727,"byte_end":8549801,"line_start":628,"line_end":628,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549806,"byte_end":8549811,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549816,"byte_end":8549857,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549862,"byte_end":8549865,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/foo/test/../test/bar.rs\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549870,"byte_end":8549923,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(path.canonicalize().await?, PathBuf::from(\"/foo/test/bar.rs\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8549928,"byte_end":8550006,"line_start":633,"line_end":633,"column_start":5,"column_end":83}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550011,"byte_end":8550016,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550021,"byte_end":8550038,"line_start":635,"line_end":635,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550043,"byte_end":8550050,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550055,"byte_end":8550089,"line_start":637,"line_end":637,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5329},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550774,"byte_end":8550783,"line_start":661,"line_end":661,"column_start":18,"column_end":27},"name":"read_link","qualname":"<Path>::read_link","value":"fn (&self) -> io::Result<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Reads a symbolic link, returning the file that the link points to.","sig":null,"attributes":[{"value":"/ Reads a symbolic link, returning the file that the link points to.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550200,"byte_end":8550270,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550275,"byte_end":8550278,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_link`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550283,"byte_end":8550325,"line_start":644,"line_end":644,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550330,"byte_end":8550333,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ [`fs::read_link`]: ../fs/fn.read_link.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550338,"byte_end":8550384,"line_start":646,"line_end":646,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550389,"byte_end":8550392,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550397,"byte_end":8550411,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550416,"byte_end":8550419,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550424,"byte_end":8550437,"line_start":650,"line_end":650,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550442,"byte_end":8550516,"line_start":651,"line_end":651,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550521,"byte_end":8550526,"line_start":652,"line_end":652,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550531,"byte_end":8550561,"line_start":653,"line_end":653,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550566,"byte_end":8550569,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa/sky_castle.rs\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550574,"byte_end":8550624,"line_start":655,"line_end":655,"column_start":5,"column_end":55}},{"value":"/ let path_link = path.read_link().await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550629,"byte_end":8550673,"line_start":656,"line_end":656,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550678,"byte_end":8550683,"line_start":657,"line_end":657,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550688,"byte_end":8550705,"line_start":658,"line_end":658,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550710,"byte_end":8550717,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550722,"byte_end":8550756,"line_start":660,"line_end":660,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5332},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551893,"byte_end":8551901,"line_start":696,"line_end":696,"column_start":18,"column_end":26},"name":"read_dir","qualname":"<Path>::read_dir","value":"fn (&self) -> io::Result<fs::ReadDir>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the entries within a directory.","sig":null,"attributes":[{"value":"/ Returns a stream over the entries within a directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550861,"byte_end":8550918,"line_start":665,"line_end":665,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550923,"byte_end":8550926,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ The stream will yield instances of [`io::Result`]`<`[`DirEntry`]`>`. New","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8550931,"byte_end":8551007,"line_start":667,"line_end":667,"column_start":5,"column_end":81}},{"value":"/ errors may be encountered after an iterator is initially constructed.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551012,"byte_end":8551085,"line_start":668,"line_end":668,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551090,"byte_end":8551093,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ This is an alias to [`fs::read_dir`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551098,"byte_end":8551139,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551144,"byte_end":8551147,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: ../io/type.Result.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551152,"byte_end":8551194,"line_start":672,"line_end":672,"column_start":5,"column_end":47}},{"value":"/ [`DirEntry`]: ../fs/struct.DirEntry.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551199,"byte_end":8551243,"line_start":673,"line_end":673,"column_start":5,"column_end":49}},{"value":"/ [`fs::read_dir`]: ../fs/fn.read_dir.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551248,"byte_end":8551292,"line_start":674,"line_end":674,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551297,"byte_end":8551300,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551305,"byte_end":8551319,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551324,"byte_end":8551327,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551332,"byte_end":8551345,"line_start":678,"line_end":678,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551350,"byte_end":8551424,"line_start":679,"line_end":679,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551429,"byte_end":8551434,"line_start":680,"line_end":680,"column_start":5,"column_end":10}},{"value":"/ use async_std::fs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551439,"byte_end":8551461,"line_start":681,"line_end":681,"column_start":5,"column_end":27}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551466,"byte_end":8551496,"line_start":682,"line_end":682,"column_start":5,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551501,"byte_end":8551531,"line_start":683,"line_end":683,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551536,"byte_end":8551539,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ let path = Path::new(\"/laputa\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551544,"byte_end":8551580,"line_start":685,"line_end":685,"column_start":5,"column_end":41}},{"value":"/ let mut dir = fs::read_dir(&path).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551585,"byte_end":8551630,"line_start":686,"line_end":686,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551635,"byte_end":8551638,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ while let Some(res) = dir.next().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551643,"byte_end":8551687,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/     let entry = res?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551692,"byte_end":8551717,"line_start":689,"line_end":689,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", entry.file_name().to_string_lossy());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551722,"byte_end":8551782,"line_start":690,"line_end":690,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551787,"byte_end":8551792,"line_start":691,"line_end":691,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551797,"byte_end":8551802,"line_start":692,"line_end":692,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551807,"byte_end":8551824,"line_start":693,"line_end":693,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551829,"byte_end":8551836,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551841,"byte_end":8551875,"line_start":695,"line_end":695,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5335},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552930,"byte_end":8552936,"line_start":726,"line_end":726,"column_start":18,"column_end":24},"name":"exists","qualname":"<Path>::exists","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path points at an existing entity.","sig":null,"attributes":[{"value":"/ Returns `true` if the path points at an existing entity.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8551982,"byte_end":8552042,"line_start":700,"line_end":700,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552047,"byte_end":8552050,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552055,"byte_end":8552132,"line_start":702,"line_end":702,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552137,"byte_end":8552217,"line_start":703,"line_end":703,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552222,"byte_end":8552225,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552230,"byte_end":8552308,"line_start":705,"line_end":705,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552313,"byte_end":8552360,"line_start":706,"line_end":706,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552365,"byte_end":8552368,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552373,"byte_end":8552387,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552392,"byte_end":8552395,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552400,"byte_end":8552413,"line_start":710,"line_end":710,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552418,"byte_end":8552492,"line_start":711,"line_end":711,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552497,"byte_end":8552502,"line_start":712,"line_end":712,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552507,"byte_end":8552537,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"does_not_exist.txt\").exists().await, false);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552542,"byte_end":8552612,"line_start":714,"line_end":714,"column_start":5,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552617,"byte_end":8552622,"line_start":715,"line_end":715,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552627,"byte_end":8552644,"line_start":716,"line_end":716,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552649,"byte_end":8552656,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552661,"byte_end":8552664,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552669,"byte_end":8552683,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552688,"byte_end":8552691,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552696,"byte_end":8552775,"line_start":721,"line_end":721,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552780,"byte_end":8552818,"line_start":722,"line_end":722,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552823,"byte_end":8552826,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552831,"byte_end":8552873,"line_start":724,"line_end":724,"column_start":5,"column_end":47}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8552878,"byte_end":8552912,"line_start":725,"line_end":725,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5338},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554194,"byte_end":8554201,"line_start":759,"line_end":759,"column_start":18,"column_end":25},"name":"is_file","qualname":"<Path>::is_file","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a regular file.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a regular file.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553006,"byte_end":8553086,"line_start":730,"line_end":730,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553091,"byte_end":8553094,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553099,"byte_end":8553176,"line_start":732,"line_end":732,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553181,"byte_end":8553261,"line_start":733,"line_end":733,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553266,"byte_end":8553269,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553274,"byte_end":8553352,"line_start":735,"line_end":735,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553357,"byte_end":8553404,"line_start":736,"line_end":736,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553409,"byte_end":8553412,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553417,"byte_end":8553431,"line_start":738,"line_end":738,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553436,"byte_end":8553439,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553444,"byte_end":8553457,"line_start":740,"line_end":740,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553462,"byte_end":8553536,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553541,"byte_end":8553546,"line_start":742,"line_end":742,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553551,"byte_end":8553581,"line_start":743,"line_end":743,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_file().await, false);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553586,"byte_end":8553656,"line_start":744,"line_end":744,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_file().await, true);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553661,"byte_end":8553723,"line_start":745,"line_end":745,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553728,"byte_end":8553733,"line_start":746,"line_end":746,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553738,"byte_end":8553755,"line_start":747,"line_end":747,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553760,"byte_end":8553767,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553772,"byte_end":8553775,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553780,"byte_end":8553794,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553799,"byte_end":8553802,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553807,"byte_end":8553886,"line_start":752,"line_end":752,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553891,"byte_end":8553961,"line_start":753,"line_end":753,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_file] if it was Ok.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8553966,"byte_end":8554007,"line_start":754,"line_end":754,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554012,"byte_end":8554015,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554020,"byte_end":8554062,"line_start":756,"line_end":756,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_file]: ../fs/struct.Metadata.html#method.is_file","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554067,"byte_end":8554137,"line_start":757,"line_end":757,"column_start":5,"column_end":75}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554142,"byte_end":8554176,"line_start":758,"line_end":758,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5342},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555528,"byte_end":8555534,"line_start":796,"line_end":796,"column_start":18,"column_end":24},"name":"is_dir","qualname":"<Path>::is_dir","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path exists on disk and is pointing at a directory.","sig":null,"attributes":[{"value":"/ Returns `true` if the path exists on disk and is pointing at a directory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554340,"byte_end":8554417,"line_start":766,"line_end":766,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554422,"byte_end":8554425,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ This function will traverse symbolic links to query information about the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554430,"byte_end":8554507,"line_start":768,"line_end":768,"column_start":5,"column_end":82}},{"value":"/ destination file. In case of broken symbolic links this will return `false`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554512,"byte_end":8554592,"line_start":769,"line_end":769,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554597,"byte_end":8554600,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ If you cannot access the directory containing the file, e.g., because of a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554605,"byte_end":8554683,"line_start":771,"line_end":771,"column_start":5,"column_end":83}},{"value":"/ permission error, this will return `false`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554688,"byte_end":8554735,"line_start":772,"line_end":772,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554740,"byte_end":8554743,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554748,"byte_end":8554762,"line_start":774,"line_end":774,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554767,"byte_end":8554770,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554775,"byte_end":8554788,"line_start":776,"line_end":776,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554793,"byte_end":8554867,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554872,"byte_end":8554877,"line_start":778,"line_end":778,"column_start":5,"column_end":10}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554882,"byte_end":8554912,"line_start":779,"line_end":779,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554917,"byte_end":8554920,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Path::new(\"./is_a_directory/\").is_dir().await, true);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554925,"byte_end":8554993,"line_start":781,"line_end":781,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Path::new(\"a_file.txt\").is_dir().await, false);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8554998,"byte_end":8555060,"line_start":782,"line_end":782,"column_start":5,"column_end":67}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555065,"byte_end":8555070,"line_start":783,"line_end":783,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555075,"byte_end":8555092,"line_start":784,"line_end":784,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555097,"byte_end":8555104,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555109,"byte_end":8555112,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # See Also","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555117,"byte_end":8555131,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555136,"byte_end":8555139,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that coerces errors to false. If you want to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555144,"byte_end":8555223,"line_start":789,"line_end":789,"column_start":5,"column_end":84}},{"value":"/ check errors, call [fs::metadata] and handle its Result. Then call","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555228,"byte_end":8555298,"line_start":790,"line_end":790,"column_start":5,"column_end":75}},{"value":"/ [fs::Metadata::is_dir] if it was Ok.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555303,"byte_end":8555343,"line_start":791,"line_end":791,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555348,"byte_end":8555351,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ [fs::metadata]: ../fs/fn.metadata.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555356,"byte_end":8555398,"line_start":793,"line_end":793,"column_start":5,"column_end":47}},{"value":"/ [fs::Metadata::is_dir]: ../fs/struct.Metadata.html#method.is_dir","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555403,"byte_end":8555471,"line_start":794,"line_end":794,"column_start":5,"column_end":73}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555476,"byte_end":8555510,"line_start":795,"line_end":795,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5346},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8556101,"byte_end":8556114,"line_start":817,"line_end":817,"column_start":12,"column_end":25},"name":"into_path_buf","qualname":"<Path>::into_path_buf","value":"fn (self: Box<Path>) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or\n allocating.","sig":null,"attributes":[{"value":"/ Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without copying or","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555672,"byte_end":8555745,"line_start":803,"line_end":803,"column_start":5,"column_end":78}},{"value":"/ allocating.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555750,"byte_end":8555765,"line_start":804,"line_end":804,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555770,"byte_end":8555773,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555778,"byte_end":8555842,"line_start":806,"line_end":806,"column_start":5,"column_end":69}},{"value":"/ [`PathBuf`]: struct.PathBuf.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555847,"byte_end":8555883,"line_start":807,"line_end":807,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555888,"byte_end":8555891,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555896,"byte_end":8555910,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555915,"byte_end":8555918,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555923,"byte_end":8555930,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::Path;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555935,"byte_end":8555965,"line_start":812,"line_end":812,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555970,"byte_end":8555973,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ let path: Box<Path> = Path::new(\"foo.txt\").into();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8555978,"byte_end":8556032,"line_start":814,"line_end":814,"column_start":5,"column_end":59}},{"value":"/ let path_buf = path.into_path_buf();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8556037,"byte_end":8556077,"line_start":815,"line_end":815,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8556082,"byte_end":8556089,"line_start":816,"line_end":816,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6136},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562084,"byte_end":8562091,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"PathBuf","qualname":"::path::pathbuf::PathBuf","value":"PathBuf {  }","parent":null,"children":[{"krate":0,"index":6137}],"decl_id":null,"docs":" This struct is an async version of [`std::path::PathBuf`].","sig":null,"attributes":[{"value":"/ This struct is an async version of [`std::path::PathBuf`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8561855,"byte_end":8561917,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8561918,"byte_end":8561921,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::path::Path`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8561922,"byte_end":8562001,"line_start":19,"line_end":19,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":5421},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562332,"byte_end":8562335,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<PathBuf>::new","value":"fn () -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Allocates an empty `PathBuf`.","sig":null,"attributes":[{"value":"/ Allocates an empty `PathBuf`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562147,"byte_end":8562180,"line_start":26,"line_end":26,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562185,"byte_end":8562188,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562193,"byte_end":8562207,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562212,"byte_end":8562215,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562220,"byte_end":8562227,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562232,"byte_end":8562265,"line_start":31,"line_end":31,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562270,"byte_end":8562273,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ let path = PathBuf::new();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562278,"byte_end":8562308,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562313,"byte_end":8562320,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5422},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562696,"byte_end":8562703,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"as_path","qualname":"<PathBuf>::as_path","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Coerces to a [`Path`] slice.","sig":null,"attributes":[{"value":"/ Coerces to a [`Path`] slice.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562403,"byte_end":8562435,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562440,"byte_end":8562443,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562448,"byte_end":8562478,"line_start":41,"line_end":41,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562483,"byte_end":8562486,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562491,"byte_end":8562505,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562510,"byte_end":8562513,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562518,"byte_end":8562525,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562530,"byte_end":8562571,"line_start":46,"line_end":46,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562576,"byte_end":8562579,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/test\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562584,"byte_end":8562619,"line_start":48,"line_end":48,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Path::new(\"/test\"), p.as_path());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562624,"byte_end":8562672,"line_start":49,"line_end":49,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562677,"byte_end":8562684,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5423},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563697,"byte_end":8563701,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"push","qualname":"<PathBuf>::push","value":"fn <P> (&mut self, path: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Extends `self` with `path`.","sig":null,"attributes":[{"value":"/ Extends `self` with `path`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562769,"byte_end":8562800,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562805,"byte_end":8562808,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ If `path` is absolute, it replaces the current path.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562813,"byte_end":8562869,"line_start":57,"line_end":57,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562874,"byte_end":8562877,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ On Windows:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562882,"byte_end":8562897,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562902,"byte_end":8562905,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * if `path` has a root but no prefix (e.g., `\\windows`), it","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562910,"byte_end":8562973,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/   replaces everything except for the prefix (if any) of `self`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562978,"byte_end":8563045,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ * if `path` has a prefix but no root, it replaces `self`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563050,"byte_end":8563111,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563116,"byte_end":8563119,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563124,"byte_end":8563138,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563143,"byte_end":8563146,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Pushing a relative path extends the existing path:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563151,"byte_end":8563205,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563210,"byte_end":8563213,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563218,"byte_end":8563225,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563230,"byte_end":8563263,"line_start":70,"line_end":70,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563268,"byte_end":8563271,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563276,"byte_end":8563317,"line_start":72,"line_end":72,"column_start":5,"column_end":46}},{"value":"/ path.push(\"file.bk\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563322,"byte_end":8563347,"line_start":73,"line_end":73,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(path, PathBuf::from(\"/tmp/file.bk\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563352,"byte_end":8563404,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563409,"byte_end":8563416,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563421,"byte_end":8563424,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Pushing an absolute path replaces the existing path:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563429,"byte_end":8563485,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563490,"byte_end":8563493,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563498,"byte_end":8563505,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563510,"byte_end":8563543,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563548,"byte_end":8563551,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let mut path = PathBuf::from(\"/tmp\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563556,"byte_end":8563597,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ path.push(\"/etc\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563602,"byte_end":8563624,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(path, PathBuf::from(\"/etc\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563629,"byte_end":8563673,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563678,"byte_end":8563685,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5425},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564399,"byte_end":8564402,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"pop","qualname":"<PathBuf>::pop","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Truncates `self` to [`self.parent`].","sig":null,"attributes":[{"value":"/ Truncates `self` to [`self.parent`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563790,"byte_end":8563830,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563835,"byte_end":8563838,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.parent`] is [`None`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563843,"byte_end":8563911,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/ Otherwise, returns `true`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563916,"byte_end":8563946,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563951,"byte_end":8563954,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8563959,"byte_end":8564039,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ [`self.parent`]: struct.PathBuf.html#method.parent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564044,"byte_end":8564098,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564103,"byte_end":8564106,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564111,"byte_end":8564125,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564130,"byte_end":8564133,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564138,"byte_end":8564145,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564150,"byte_end":8564191,"line_start":101,"line_end":101,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564196,"byte_end":8564199,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/test/test.rs\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564204,"byte_end":8564251,"line_start":103,"line_end":103,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564256,"byte_end":8564259,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ p.pop();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564264,"byte_end":8564276,"line_start":105,"line_end":105,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/test\"), p);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564281,"byte_end":8564319,"line_start":106,"line_end":106,"column_start":5,"column_end":43}},{"value":"/ p.pop();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564324,"byte_end":8564336,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/ assert_eq!(Path::new(\"/\"), p);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564341,"byte_end":8564375,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564380,"byte_end":8564387,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5426},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565432,"byte_end":8565445,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"set_file_name","qualname":"<PathBuf>::set_file_name","value":"fn <S> (&mut self, file_name: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.file_name`] to `file_name`.","sig":null,"attributes":[{"value":"/ Updates [`self.file_name`] to `file_name`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564460,"byte_end":8564506,"line_start":114,"line_end":114,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564511,"byte_end":8564514,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If [`self.file_name`] was [`None`], this is equivalent to pushing","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564519,"byte_end":8564588,"line_start":116,"line_end":116,"column_start":5,"column_end":74}},{"value":"/ `file_name`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564593,"byte_end":8564609,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564614,"byte_end":8564617,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Otherwise it is equivalent to calling [`pop`] and then pushing","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564622,"byte_end":8564688,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/ `file_name`. The new path will be a sibling of the original path.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564693,"byte_end":8564762,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/ (That is, it will have the same parent.)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564767,"byte_end":8564811,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564816,"byte_end":8564819,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564824,"byte_end":8564884,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564889,"byte_end":8564969,"line_start":124,"line_end":124,"column_start":5,"column_end":85}},{"value":"/ [`pop`]: struct.PathBuf.html#method.pop","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8564974,"byte_end":8565017,"line_start":125,"line_end":125,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565022,"byte_end":8565025,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565030,"byte_end":8565044,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565049,"byte_end":8565052,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565057,"byte_end":8565064,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565069,"byte_end":8565102,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565107,"byte_end":8565110,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let mut buf = PathBuf::from(\"/\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565115,"byte_end":8565152,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ assert!(buf.file_name() == None);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565157,"byte_end":8565194,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/ buf.set_file_name(\"bar\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565199,"byte_end":8565228,"line_start":134,"line_end":134,"column_start":5,"column_end":34}},{"value":"/ assert!(buf == PathBuf::from(\"/bar\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565233,"byte_end":8565275,"line_start":135,"line_end":135,"column_start":5,"column_end":47}},{"value":"/ assert!(buf.file_name().is_some());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565280,"byte_end":8565319,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ buf.set_file_name(\"baz.txt\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565324,"byte_end":8565357,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"/ assert!(buf == PathBuf::from(\"/baz.txt\"));","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565362,"byte_end":8565408,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565413,"byte_end":8565420,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5428},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566458,"byte_end":8566471,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"set_extension","qualname":"<PathBuf>::set_extension","value":"fn <S> (&mut self, extension: S) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Updates [`self.extension`] to `extension`.","sig":null,"attributes":[{"value":"/ Updates [`self.extension`] to `extension`.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565545,"byte_end":8565591,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565596,"byte_end":8565599,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Returns `false` and does nothing if [`self.file_name`] is [`None`],","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565604,"byte_end":8565675,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ returns `true` and updates the extension otherwise.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565680,"byte_end":8565735,"line_start":147,"line_end":147,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565740,"byte_end":8565743,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ If [`self.extension`] is [`None`], the extension is added; otherwise","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565748,"byte_end":8565820,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ it is replaced.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565825,"byte_end":8565844,"line_start":150,"line_end":150,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565849,"byte_end":8565852,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ [`self.file_name`]: struct.PathBuf.html#method.file_name","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565857,"byte_end":8565917,"line_start":152,"line_end":152,"column_start":5,"column_end":65}},{"value":"/ [`self.extension`]: struct.PathBuf.html#method.extension","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565922,"byte_end":8565982,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8565987,"byte_end":8566067,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566072,"byte_end":8566075,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566080,"byte_end":8566094,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566099,"byte_end":8566102,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566107,"byte_end":8566114,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::{Path, PathBuf};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566119,"byte_end":8566160,"line_start":159,"line_end":159,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566165,"byte_end":8566168,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let mut p = PathBuf::from(\"/feel/the\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566173,"byte_end":8566216,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566221,"byte_end":8566224,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"force\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566229,"byte_end":8566258,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Path::new(\"/feel/the.force\"), p.as_path());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566263,"byte_end":8566321,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566326,"byte_end":8566329,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ p.set_extension(\"dark_side\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566334,"byte_end":8566367,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Path::new(\"/feel/the.dark_side\"), p.as_path());","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566372,"byte_end":8566434,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566439,"byte_end":8566446,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5430},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566938,"byte_end":8566952,"line_start":185,"line_end":185,"column_start":12,"column_end":26},"name":"into_os_string","qualname":"<PathBuf>::into_os_string","value":"fn (self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `PathBuf`, returning its internal [`OsString`] storage.","sig":null,"attributes":[{"value":"/ Consumes the `PathBuf`, returning its internal [`OsString`] storage.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566579,"byte_end":8566651,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566656,"byte_end":8566659,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`OsString`]: https://doc.rust-lang.org/std/ffi/struct.OsString.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566664,"byte_end":8566736,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566741,"byte_end":8566744,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566749,"byte_end":8566763,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566768,"byte_end":8566771,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566776,"byte_end":8566783,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use async_std::path::PathBuf;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566788,"byte_end":8566821,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566826,"byte_end":8566829,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let p = PathBuf::from(\"/the/head\");","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566834,"byte_end":8566873,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ let os_str = p.into_os_string();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566878,"byte_end":8566914,"line_start":183,"line_end":183,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8566919,"byte_end":8566926,"line_start":184,"line_end":184,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5431},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567203,"byte_end":8567218,"line_start":193,"line_end":193,"column_start":12,"column_end":27},"name":"into_boxed_path","qualname":"<PathBuf>::into_boxed_path","value":"fn (self) -> Box<Path>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","sig":null,"attributes":[{"value":"/ Converts this `PathBuf` into a [boxed][`Box`] [`Path`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567020,"byte_end":8567079,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567084,"byte_end":8567087,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`Box`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567092,"byte_end":8567156,"line_start":191,"line_end":191,"column_start":5,"column_end":69}},{"value":"/ [`Path`]: struct.Path.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567161,"byte_end":8567191,"line_start":192,"line_end":192,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":5511},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":5512},{"krate":0,"index":5513},{"krate":0,"index":5514},{"krate":0,"index":5518},{"krate":0,"index":5522},{"krate":0,"index":5523},{"krate":0,"index":5527},{"krate":0,"index":5528},{"krate":0,"index":5609},{"krate":0,"index":5693}],"decl_id":null,"docs":" Networking primitives for TCP/UDP communication.","sig":null,"attributes":[{"value":"cfg(feature = \"default\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":16457,"byte_end":16484,"line_start":232,"line_end":232,"column_start":13,"column_end":40}},{"value":"! Networking primitives for TCP/UDP communication.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571208,"byte_end":8571260,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571261,"byte_end":8571264,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides networking functionality for the Transmission Control and User","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571265,"byte_end":8571352,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"! Datagram Protocols, as well as types for IP and socket addresses.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571353,"byte_end":8571422,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571423,"byte_end":8571426,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! This module is an async version of [`std::net`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571427,"byte_end":8571479,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571480,"byte_end":8571483,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571484,"byte_end":8571502,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571503,"byte_end":8571506,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571507,"byte_end":8571595,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"! * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571596,"byte_end":8571665,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"! * [`IpAddr`] represents IP addresses of either IPv4 or IPv6; [`Ipv4Addr`] and","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571666,"byte_end":8571747,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"!   [`Ipv6Addr`] are respectively IPv4 and IPv6 addresses","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571748,"byte_end":8571807,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"! * [`SocketAddr`] represents socket addresses of either IPv4 or IPv6; [`SocketAddrV4`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571808,"byte_end":8571897,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"!   and [`SocketAddrV6`] are respectively IPv4 and IPv6 socket addresses","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571898,"byte_end":8571972,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"! * [`ToSocketAddrs`] is a trait that used for generic address resolution when interacting","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8571973,"byte_end":8572065,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"!   with networking objects like [`TcpListener`], [`TcpStream`] or [`UdpSocket`]","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572066,"byte_end":8572148,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"! * Other types are return or parameter types for various methods in this module","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572149,"byte_end":8572231,"line_start":18,"line_end":18,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572232,"byte_end":8572235,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! [`IpAddr`]: enum.IpAddr.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572236,"byte_end":8572268,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"! [`Ipv4Addr`]: struct.Ipv4Addr.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572269,"byte_end":8572307,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"! [`Ipv6Addr`]: struct.Ipv6Addr.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572308,"byte_end":8572346,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"! [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572347,"byte_end":8572387,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"! [`SocketAddrV4`]: struct.SocketAddrV4.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572388,"byte_end":8572434,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"! [`SocketAddrV6`]: struct.SocketAddrV6.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572435,"byte_end":8572481,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"! [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572482,"byte_end":8572526,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"! [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572527,"byte_end":8572567,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"! [`ToSocketAddrs`]: trait.ToSocketAddrs.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572568,"byte_end":8572615,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"! [`UdpSocket`]: struct.UdpSocket.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572616,"byte_end":8572656,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572657,"byte_end":8572660,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! # Platform-specific extensions","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572661,"byte_end":8572695,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572696,"byte_end":8572699,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! APIs such as Unix domain sockets are available on certain platforms only. You can find","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572700,"byte_end":8572790,"line_start":33,"line_end":33,"column_start":1,"column_end":91}},{"value":"! platform-specific extensions in the [`async_std::os`] module.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572791,"byte_end":8572856,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572857,"byte_end":8572860,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! [`async_std::os`]: ../os/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572861,"byte_end":8572900,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"! [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572901,"byte_end":8572963,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572964,"byte_end":8572967,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572968,"byte_end":8572982,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572983,"byte_end":8572986,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! A simple UDP echo server:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8572987,"byte_end":8573016,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573017,"byte_end":8573020,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573021,"byte_end":8573034,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"! # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573035,"byte_end":8573109,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573110,"byte_end":8573115,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"! use async_std::net::UdpSocket;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573116,"byte_end":8573150,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573151,"byte_end":8573154,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573155,"byte_end":8573213,"line_start":48,"line_end":48,"column_start":1,"column_end":59}},{"value":"! let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573214,"byte_end":8573248,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573249,"byte_end":8573252,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! loop {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573253,"byte_end":8573263,"line_start":51,"line_end":51,"column_start":1,"column_end":11}},{"value":"!     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573264,"byte_end":8573322,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"!     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573323,"byte_end":8573371,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"! }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573372,"byte_end":8573377,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573378,"byte_end":8573383,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"! # }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573384,"byte_end":8573394,"line_start":56,"line_end":56,"column_start":1,"column_end":11}},{"value":"! ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/mod.rs","byte_start":8573395,"byte_end":8573402,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":5547},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575078,"byte_end":8575091,"line_start":45,"line_end":45,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs","parent":null,"children":[{"krate":0,"index":5548},{"krate":0,"index":5549}],"decl_id":null,"docs":" Converts or resolves addresses to [`SocketAddr`] values.","sig":null,"attributes":[{"value":"/ Converts or resolves addresses to [`SocketAddr`] values.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574500,"byte_end":8574560,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574561,"byte_end":8574564,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is an async version of [`std::net::ToSocketAddrs`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574565,"byte_end":8574631,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574632,"byte_end":8574635,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`std::net::ToSocketAddrs`]: https://doc.rust-lang.org/std/net/trait.ToSocketAddrs.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574636,"byte_end":8574727,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ [`SocketAddr`]: enum.SocketAddr.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574728,"byte_end":8574768,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574769,"byte_end":8574772,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574773,"byte_end":8574787,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574788,"byte_end":8574791,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574792,"byte_end":8574799,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574800,"byte_end":8574874,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574875,"byte_end":8574880,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::ToSocketAddrs;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574881,"byte_end":8574919,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574920,"byte_end":8574923,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let addr = \"localhost:8080\".to_socket_addrs().await?.next().unwrap();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574924,"byte_end":8574997,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ println!(\"resolved: {:?}\", addr);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8574998,"byte_end":8575035,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575036,"byte_end":8575041,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575042,"byte_end":8575059,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575060,"byte_end":8575067,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":5548},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575186,"byte_end":8575190,"line_start":47,"line_end":47,"column_start":10,"column_end":14},"name":"Iter","qualname":"::net::addr::ToSocketAddrs::Iter","value":"type Iter: Iterator<Item = SocketAddr>;","parent":{"krate":0,"index":5547},"children":[],"decl_id":null,"docs":" Returned iterator over socket addresses which this type may correspond to.\n","sig":null,"attributes":[{"value":"/ Returned iterator over socket addresses which this type may correspond to.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575098,"byte_end":8575176,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5549},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575532,"byte_end":8575547,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"to_socket_addrs","qualname":"::net::addr::ToSocketAddrs::to_socket_addrs","value":"fn (&self) -> ToSocketAddrsFuture<Self::Iter>","parent":{"krate":0,"index":5547},"children":[],"decl_id":null,"docs":" Converts this object to an iterator of resolved `SocketAddr`s.","sig":null,"attributes":[{"value":"/ Converts this object to an iterator of resolved `SocketAddr`s.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575226,"byte_end":8575292,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575297,"byte_end":8575300,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The returned iterator may not actually yield any values depending on the outcome of any","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575305,"byte_end":8575396,"line_start":51,"line_end":51,"column_start":5,"column_end":96}},{"value":"/ resolution performed.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575401,"byte_end":8575426,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575431,"byte_end":8575434,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this function may block a backend thread while resolution is performed.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575439,"byte_end":8575524,"line_start":54,"line_end":54,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5552},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575764,"byte_end":8575773,"line_start":66,"line_end":66,"column_start":5,"column_end":14},"name":"Resolving","qualname":"::net::addr::ToSocketAddrsFuture::Resolving","value":"ToSocketAddrsFuture::Resolving(JoinHandle<io::Result<I>>)","parent":{"krate":0,"index":5550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5555},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575806,"byte_end":8575811,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Ready","qualname":"::net::addr::ToSocketAddrsFuture::Ready","value":"ToSocketAddrsFuture::Ready(io::Result<I>)","parent":{"krate":0,"index":5550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5558},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575832,"byte_end":8575836,"line_start":68,"line_end":68,"column_start":5,"column_end":9},"name":"Done","qualname":"::net::addr::ToSocketAddrsFuture::Done","value":"ToSocketAddrsFuture::Done","parent":{"krate":0,"index":5550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5550},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575735,"byte_end":8575754,"line_start":65,"line_end":65,"column_start":10,"column_end":29},"name":"ToSocketAddrsFuture","qualname":"::net::addr::ToSocketAddrsFuture","value":"ToSocketAddrsFuture::{Resolving, Ready, Done}","parent":null,"children":[{"krate":0,"index":5552},{"krate":0,"index":5555},{"krate":0,"index":5558}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8575686,"byte_end":8575725,"line_start":64,"line_end":64,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":6163},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583281,"byte_end":8583292,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":6164}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"/ A TCP socket server, listening for connections.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582025,"byte_end":8582076,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582077,"byte_end":8582080,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ After creating a `TcpListener` by [`bind`]ing it to a socket address, it listens for incoming","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582081,"byte_end":8582178,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ TCP connections. These can be accepted by awaiting elements from the async stream of","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582179,"byte_end":8582267,"line_start":16,"line_end":16,"column_start":1,"column_end":89}},{"value":"/ [`incoming`] connections.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582268,"byte_end":8582297,"line_start":17,"line_end":17,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582298,"byte_end":8582301,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The socket will be closed when the value is dropped.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582302,"byte_end":8582358,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582359,"byte_end":8582362,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The Transmission Control Protocol is specified in [IETF RFC 793].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582363,"byte_end":8582432,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582433,"byte_end":8582436,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpListener`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582437,"byte_end":8582500,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582501,"byte_end":8582504,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582505,"byte_end":8582531,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ [`incoming`]: #method.incoming","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582532,"byte_end":8582566,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ [IETF RFC 793]: https://tools.ietf.org/html/rfc793","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582567,"byte_end":8582621,"line_start":27,"line_end":27,"column_start":1,"column_end":55}},{"value":"/ [`std::net::TcpListener`]: https://doc.rust-lang.org/std/net/struct.TcpListener.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582622,"byte_end":8582710,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582711,"byte_end":8582714,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582715,"byte_end":8582729,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582730,"byte_end":8582733,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582734,"byte_end":8582747,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582748,"byte_end":8582822,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582823,"byte_end":8582828,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ use async_std::io;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582829,"byte_end":8582851,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582852,"byte_end":8582888,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582889,"byte_end":8582919,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582920,"byte_end":8582923,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582924,"byte_end":8582986,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8582987,"byte_end":8583030,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583031,"byte_end":8583034,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583035,"byte_end":8583087,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     let stream = stream?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583088,"byte_end":8583117,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/     let (reader, writer) = &mut (&stream, &stream);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583118,"byte_end":8583173,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/     io::copy(reader, writer).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583174,"byte_end":8583214,"line_start":45,"line_end":45,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583215,"byte_end":8583220,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583221,"byte_end":8583226,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583227,"byte_end":8583244,"line_start":48,"line_end":48,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583245,"byte_end":8583252,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5629},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8584114,"byte_end":8584118,"line_start":77,"line_end":77,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"fn <A> (addrs: A) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TcpListener` which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new `TcpListener` which will be bound to the specified address.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583364,"byte_end":8583441,"line_start":56,"line_end":56,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583446,"byte_end":8583449,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583454,"byte_end":8583515,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583520,"byte_end":8583523,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this listener.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583528,"byte_end":8583621,"line_start":60,"line_end":60,"column_start":5,"column_end":98}},{"value":"/ The port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583626,"byte_end":8583694,"line_start":61,"line_end":61,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583699,"byte_end":8583702,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583707,"byte_end":8583721,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/ Create a TCP listener bound to 127.0.0.1:0:","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583726,"byte_end":8583773,"line_start":64,"line_end":64,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583778,"byte_end":8583781,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583786,"byte_end":8583799,"line_start":66,"line_end":66,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583804,"byte_end":8583878,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583883,"byte_end":8583888,"line_start":68,"line_end":68,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583893,"byte_end":8583929,"line_start":69,"line_end":69,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583934,"byte_end":8583937,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583942,"byte_end":8584001,"line_start":71,"line_end":71,"column_start":5,"column_end":64}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8584006,"byte_end":8584011,"line_start":72,"line_end":72,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8584016,"byte_end":8584033,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8584038,"byte_end":8584045,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8584050,"byte_end":8584053,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8584058,"byte_end":8584096,"line_start":76,"line_end":76,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5634},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585345,"byte_end":8585351,"line_start":116,"line_end":116,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"fn (&self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8584812,"byte_end":8584867,"line_start":100,"line_end":100,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8584872,"byte_end":8584875,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ When a connection is established, the corresponding stream and address will be returned.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8584880,"byte_end":8584972,"line_start":102,"line_end":102,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8584977,"byte_end":8584980,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8584985,"byte_end":8585000,"line_start":104,"line_end":104,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585005,"byte_end":8585008,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585013,"byte_end":8585026,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585031,"byte_end":8585105,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585110,"byte_end":8585115,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585120,"byte_end":8585156,"line_start":109,"line_end":109,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585161,"byte_end":8585164,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585169,"byte_end":8585228,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ let (stream, addr) = listener.accept().await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585233,"byte_end":8585283,"line_start":112,"line_end":112,"column_start":5,"column_end":55}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585288,"byte_end":8585293,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585298,"byte_end":8585315,"line_start":114,"line_end":114,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585320,"byte_end":8585327,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5637},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586515,"byte_end":8586523,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"fn (&self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of incoming connections.","sig":null,"attributes":[{"value":"/ Returns a stream of incoming connections.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585580,"byte_end":8585625,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585630,"byte_end":8585633,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Iterating over this stream is equivalent to calling [`accept`] in a loop. The stream of","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585638,"byte_end":8585729,"line_start":126,"line_end":126,"column_start":5,"column_end":96}},{"value":"/ connections is infinite, i.e awaiting the next connection will never result in [`None`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585734,"byte_end":8585826,"line_start":127,"line_end":127,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585831,"byte_end":8585834,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ [`accept`]: #method.accept","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585839,"byte_end":8585869,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585874,"byte_end":8585954,"line_start":130,"line_end":130,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585959,"byte_end":8585962,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585967,"byte_end":8585982,"line_start":132,"line_end":132,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585987,"byte_end":8585990,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8585995,"byte_end":8586008,"line_start":134,"line_end":134,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586013,"byte_end":8586087,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586092,"byte_end":8586097,"line_start":136,"line_end":136,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586102,"byte_end":8586138,"line_start":137,"line_end":137,"column_start":5,"column_end":41}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586143,"byte_end":8586173,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586178,"byte_end":8586181,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586186,"byte_end":8586245,"line_start":140,"line_end":140,"column_start":5,"column_end":64}},{"value":"/ let mut incoming = listener.incoming();","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586250,"byte_end":8586293,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586298,"byte_end":8586301,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586306,"byte_end":8586358,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/     let mut stream = stream?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586363,"byte_end":8586396,"line_start":144,"line_end":144,"column_start":5,"column_end":38}},{"value":"/     stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586401,"byte_end":8586449,"line_start":145,"line_end":145,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586454,"byte_end":8586459,"line_start":146,"line_end":146,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586464,"byte_end":8586469,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586474,"byte_end":8586491,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586496,"byte_end":8586503,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5638},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587128,"byte_end":8587138,"line_start":171,"line_end":171,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586583,"byte_end":8586644,"line_start":154,"line_end":154,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586649,"byte_end":8586652,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, to identify when binding to port 0 which port was assigned","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586657,"byte_end":8586752,"line_start":156,"line_end":156,"column_start":5,"column_end":100}},{"value":"/ by the OS.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586757,"byte_end":8586771,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586776,"byte_end":8586779,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586784,"byte_end":8586798,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586803,"byte_end":8586806,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586811,"byte_end":8586824,"line_start":161,"line_end":161,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586829,"byte_end":8586903,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586908,"byte_end":8586913,"line_start":163,"line_end":163,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpListener;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586918,"byte_end":8586954,"line_start":164,"line_end":164,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586959,"byte_end":8586962,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8586967,"byte_end":8587029,"line_start":166,"line_end":166,"column_start":5,"column_end":67}},{"value":"/ let addr = listener.local_addr()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587034,"byte_end":8587072,"line_start":167,"line_end":167,"column_start":5,"column_end":43}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587077,"byte_end":8587082,"line_start":168,"line_end":168,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587087,"byte_end":8587104,"line_start":169,"line_end":169,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587109,"byte_end":8587116,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6167},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587795,"byte_end":8587803,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::listener::Incoming","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of incoming TCP connections.","sig":null,"attributes":[{"value":"/ A stream of incoming TCP connections.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587227,"byte_end":8587268,"line_start":176,"line_end":176,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587269,"byte_end":8587272,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ This stream is infinite, i.e awaiting the next connection will never result in [`None`]. It is","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587273,"byte_end":8587371,"line_start":178,"line_end":178,"column_start":1,"column_end":99}},{"value":"/ created by the [`incoming`] method on [`TcpListener`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587372,"byte_end":8587430,"line_start":179,"line_end":179,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587431,"byte_end":8587434,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::Incoming`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587435,"byte_end":8587495,"line_start":181,"line_end":181,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587496,"byte_end":8587499,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587500,"byte_end":8587580,"line_start":183,"line_end":183,"column_start":1,"column_end":81}},{"value":"/ [`incoming`]: struct.TcpListener.html#method.incoming","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587581,"byte_end":8587638,"line_start":184,"line_end":184,"column_start":1,"column_end":58}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587639,"byte_end":8587683,"line_start":185,"line_end":185,"column_start":1,"column_end":45}},{"value":"/ [`std::net::Incoming`]: https://doc.rust-lang.org/std/net/struct.Incoming.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587684,"byte_end":8587766,"line_start":186,"line_end":186,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":6185},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591473,"byte_end":8591482,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":6186}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"/ A TCP stream between a local and a remote socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8589915,"byte_end":8589968,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8589969,"byte_end":8589972,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A `TcpStream` can either be created by connecting to an endpoint, via the [`connect`] method,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8589973,"byte_end":8590070,"line_start":14,"line_end":14,"column_start":1,"column_end":98}},{"value":"/ or by [accepting] a connection from a [listener].  It can be read or written to using the","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590071,"byte_end":8590164,"line_start":15,"line_end":15,"column_start":1,"column_end":94}},{"value":"/ [`AsyncRead`], [`AsyncWrite`], and related extension traits in [`futures::io`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590165,"byte_end":8590248,"line_start":16,"line_end":16,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590249,"byte_end":8590252,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The connection will be closed when the value is dropped. The reading and writing portions of","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590253,"byte_end":8590349,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ the connection can also be shut down individually with the [`shutdown`] method.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590350,"byte_end":8590433,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590434,"byte_end":8590437,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::TcpStream`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590438,"byte_end":8590499,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590500,"byte_end":8590503,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [`connect`]: struct.TcpStream.html#method.connect","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590504,"byte_end":8590557,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/ [accepting]: struct.TcpListener.html#method.accept","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590558,"byte_end":8590612,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/ [listener]: struct.TcpListener.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590613,"byte_end":8590652,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncRead.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590653,"byte_end":8590731,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ [`AsyncWrite`]: https://docs.rs/futures/0.3/futures/io/trait.AsyncWrite.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590732,"byte_end":8590812,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ [`futures::io`]: https://docs.rs/futures/0.3/futures/io/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590813,"byte_end":8590883,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ [`shutdown`]: struct.TcpStream.html#method.shutdown","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590884,"byte_end":8590939,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/ [`std::net::TcpStream`]: https://doc.rust-lang.org/std/net/struct.TcpStream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8590940,"byte_end":8591024,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591025,"byte_end":8591028,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591029,"byte_end":8591044,"line_start":32,"line_end":32,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591045,"byte_end":8591048,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591049,"byte_end":8591062,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591063,"byte_end":8591137,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591138,"byte_end":8591143,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591144,"byte_end":8591178,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ use async_std::prelude::*;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591179,"byte_end":8591209,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591210,"byte_end":8591213,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591214,"byte_end":8591279,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ stream.write_all(b\"hello world\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591280,"byte_end":8591324,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591325,"byte_end":8591328,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591329,"byte_end":8591363,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/ let n = stream.read(&mut buf).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591364,"byte_end":8591405,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591406,"byte_end":8591411,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591412,"byte_end":8591429,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591430,"byte_end":8591437,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5662},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8592247,"byte_end":8592254,"line_start":73,"line_end":73,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"fn <A> (addrs: A) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP stream connected to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TCP stream connected to the specified address.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591566,"byte_end":8591630,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591635,"byte_end":8591638,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This method will create a new TCP socket and attempt to connect it to the `addr`","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591643,"byte_end":8591727,"line_start":56,"line_end":56,"column_start":5,"column_end":89}},{"value":"/ provided. The [returned future] will be resolved once the stream has successfully","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591732,"byte_end":8591817,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/ connected, or it will return an error if one occurs.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591822,"byte_end":8591878,"line_start":58,"line_end":58,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591883,"byte_end":8591886,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [returned future]: struct.Connect.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591891,"byte_end":8591933,"line_start":60,"line_end":60,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591938,"byte_end":8591941,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591946,"byte_end":8591960,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591965,"byte_end":8591968,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591973,"byte_end":8591986,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591991,"byte_end":8592065,"line_start":65,"line_end":65,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8592070,"byte_end":8592075,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8592080,"byte_end":8592114,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8592119,"byte_end":8592122,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8592127,"byte_end":8592185,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8592190,"byte_end":8592195,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8592200,"byte_end":8592217,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8592222,"byte_end":8592229,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5667},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593484,"byte_end":8593494,"line_start":115,"line_end":115,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is connected to.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593068,"byte_end":8593131,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593136,"byte_end":8593139,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593144,"byte_end":8593159,"line_start":103,"line_end":103,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593164,"byte_end":8593167,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593172,"byte_end":8593185,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593190,"byte_end":8593264,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593269,"byte_end":8593274,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593279,"byte_end":8593313,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593318,"byte_end":8593321,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593326,"byte_end":8593387,"line_start":110,"line_end":110,"column_start":5,"column_end":66}},{"value":"/ let addr = stream.local_addr()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593392,"byte_end":8593428,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593433,"byte_end":8593438,"line_start":112,"line_end":112,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593443,"byte_end":8593460,"line_start":113,"line_end":113,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593465,"byte_end":8593472,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5668},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594001,"byte_end":8594010,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593585,"byte_end":8593649,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593654,"byte_end":8593657,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593662,"byte_end":8593677,"line_start":121,"line_end":121,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593682,"byte_end":8593685,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593690,"byte_end":8593703,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593708,"byte_end":8593782,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593787,"byte_end":8593792,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593797,"byte_end":8593831,"line_start":126,"line_end":126,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593836,"byte_end":8593839,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593844,"byte_end":8593905,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/ let peer = stream.peer_addr()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593910,"byte_end":8593945,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593950,"byte_end":8593955,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593960,"byte_end":8593977,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8593982,"byte_end":8593989,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5669},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594665,"byte_end":8594668,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594100,"byte_end":8594158,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594163,"byte_end":8594166,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594171,"byte_end":8594231,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594236,"byte_end":8594239,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594244,"byte_end":8594276,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594281,"byte_end":8594284,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594289,"byte_end":8594303,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594308,"byte_end":8594311,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594316,"byte_end":8594329,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594334,"byte_end":8594408,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594413,"byte_end":8594418,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594423,"byte_end":8594457,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594462,"byte_end":8594465,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594470,"byte_end":8594531,"line_start":150,"line_end":150,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594536,"byte_end":8594539,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594544,"byte_end":8594569,"line_start":152,"line_end":152,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594574,"byte_end":8594609,"line_start":153,"line_end":153,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594614,"byte_end":8594619,"line_start":154,"line_end":154,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594624,"byte_end":8594641,"line_start":155,"line_end":155,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594646,"byte_end":8594653,"line_start":156,"line_end":156,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5670},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595307,"byte_end":8595314,"line_start":180,"line_end":180,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594745,"byte_end":8594803,"line_start":161,"line_end":161,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594808,"byte_end":8594811,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594816,"byte_end":8594892,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594897,"byte_end":8594918,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594923,"byte_end":8594926,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594931,"byte_end":8594945,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594950,"byte_end":8594953,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594958,"byte_end":8594971,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8594976,"byte_end":8595050,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595055,"byte_end":8595060,"line_start":170,"line_end":170,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595065,"byte_end":8595099,"line_start":171,"line_end":171,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595104,"byte_end":8595107,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595112,"byte_end":8595173,"line_start":173,"line_end":173,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595178,"byte_end":8595181,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(100)?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595186,"byte_end":8595211,"line_start":175,"line_end":175,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.ttl()?, 100);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595216,"byte_end":8595251,"line_start":176,"line_end":176,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595256,"byte_end":8595261,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595266,"byte_end":8595283,"line_start":178,"line_end":178,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595288,"byte_end":8595295,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5671},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596165,"byte_end":8596169,"line_start":206,"line_end":206,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is connected, without\n removing that data from the queue.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is connected, without","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595407,"byte_end":8595496,"line_start":184,"line_end":184,"column_start":5,"column_end":94}},{"value":"/ removing that data from the queue.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595501,"byte_end":8595539,"line_start":185,"line_end":185,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595544,"byte_end":8595547,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes peeked.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595552,"byte_end":8595603,"line_start":187,"line_end":187,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595608,"byte_end":8595611,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing `MSG_PEEK` as a flag","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595616,"byte_end":8595711,"line_start":189,"line_end":189,"column_start":5,"column_end":100}},{"value":"/ to the underlying `recv` system call.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595716,"byte_end":8595757,"line_start":190,"line_end":190,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595762,"byte_end":8595765,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595770,"byte_end":8595784,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595789,"byte_end":8595792,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595797,"byte_end":8595810,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595815,"byte_end":8595889,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595894,"byte_end":8595899,"line_start":196,"line_end":196,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595904,"byte_end":8595938,"line_start":197,"line_end":197,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595943,"byte_end":8595946,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8595951,"byte_end":8596012,"line_start":199,"line_end":199,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596017,"byte_end":8596020,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596025,"byte_end":8596057,"line_start":201,"line_end":201,"column_start":5,"column_end":37}},{"value":"/ let n = stream.peek(&mut buf).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596062,"byte_end":8596103,"line_start":202,"line_end":202,"column_start":5,"column_end":46}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596108,"byte_end":8596113,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596118,"byte_end":8596135,"line_start":204,"line_end":204,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596140,"byte_end":8596147,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5674},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596855,"byte_end":8596862,"line_start":230,"line_end":230,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596264,"byte_end":8596326,"line_start":210,"line_end":210,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596331,"byte_end":8596334,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596339,"byte_end":8596403,"line_start":212,"line_end":212,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596408,"byte_end":8596411,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: #method.set_nodelay","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596416,"byte_end":8596456,"line_start":214,"line_end":214,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596461,"byte_end":8596464,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596469,"byte_end":8596483,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596488,"byte_end":8596491,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596496,"byte_end":8596509,"line_start":218,"line_end":218,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596514,"byte_end":8596588,"line_start":219,"line_end":219,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596593,"byte_end":8596598,"line_start":220,"line_end":220,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596603,"byte_end":8596637,"line_start":221,"line_end":221,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596642,"byte_end":8596645,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596650,"byte_end":8596711,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596716,"byte_end":8596719,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596724,"byte_end":8596754,"line_start":225,"line_end":225,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596759,"byte_end":8596799,"line_start":226,"line_end":226,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596804,"byte_end":8596809,"line_start":227,"line_end":227,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596814,"byte_end":8596831,"line_start":228,"line_end":228,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596836,"byte_end":8596843,"line_start":229,"line_end":229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5675},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597746,"byte_end":8597757,"line_start":256,"line_end":256,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"fn (&self, nodelay: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8596944,"byte_end":8597006,"line_start":234,"line_end":234,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597011,"byte_end":8597014,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597019,"byte_end":8597088,"line_start":236,"line_end":236,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597093,"byte_end":8597166,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597171,"byte_end":8597244,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597249,"byte_end":8597324,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597329,"byte_end":8597347,"line_start":240,"line_end":240,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597352,"byte_end":8597355,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597360,"byte_end":8597374,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597379,"byte_end":8597382,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597387,"byte_end":8597400,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597405,"byte_end":8597479,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597484,"byte_end":8597489,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597494,"byte_end":8597528,"line_start":247,"line_end":247,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597533,"byte_end":8597536,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597541,"byte_end":8597602,"line_start":249,"line_end":249,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597607,"byte_end":8597610,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597615,"byte_end":8597645,"line_start":251,"line_end":251,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(stream.nodelay()?, true);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597650,"byte_end":8597690,"line_start":252,"line_end":252,"column_start":5,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597695,"byte_end":8597700,"line_start":253,"line_end":253,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597705,"byte_end":8597722,"line_start":254,"line_end":254,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597727,"byte_end":8597734,"line_start":255,"line_end":255,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5676},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598594,"byte_end":8598602,"line_start":281,"line_end":281,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"fn (&self, how: std::net::Shutdown) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597863,"byte_end":8597929,"line_start":260,"line_end":260,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597934,"byte_end":8597937,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This method will cause all pending and future I/O on the specified portions to return","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8597942,"byte_end":8598031,"line_start":262,"line_end":262,"column_start":5,"column_end":94}},{"value":"/ immediately with an appropriate value (see the documentation of [`Shutdown`]).","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598036,"byte_end":8598118,"line_start":263,"line_end":263,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598123,"byte_end":8598126,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ [`Shutdown`]: https://doc.rust-lang.org/std/net/enum.Shutdown.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598131,"byte_end":8598201,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598206,"byte_end":8598209,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598214,"byte_end":8598228,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598233,"byte_end":8598236,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598241,"byte_end":8598254,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598259,"byte_end":8598333,"line_start":270,"line_end":270,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598338,"byte_end":8598343,"line_start":271,"line_end":271,"column_start":5,"column_end":10}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598348,"byte_end":8598375,"line_start":272,"line_end":272,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598380,"byte_end":8598383,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::TcpStream;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598388,"byte_end":8598422,"line_start":274,"line_end":274,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598427,"byte_end":8598430,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598435,"byte_end":8598496,"line_start":276,"line_end":276,"column_start":5,"column_end":66}},{"value":"/ stream.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598501,"byte_end":8598538,"line_start":277,"line_end":277,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598543,"byte_end":8598548,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598553,"byte_end":8598570,"line_start":279,"line_end":279,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598575,"byte_end":8598582,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6202},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604063,"byte_end":8604072,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":6203}],"decl_id":null,"docs":" A UDP socket.","sig":null,"attributes":[{"value":"/ A UDP socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8602809,"byte_end":8602826,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8602827,"byte_end":8602830,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ After creating a `UdpSocket` by [`bind`]ing it to a socket address, data can be [sent to] and","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8602831,"byte_end":8602928,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ [received from] any other socket address.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8602929,"byte_end":8602974,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8602975,"byte_end":8602978,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ As stated in the User Datagram Protocol's specification in [IETF RFC 768], UDP is an unordered,","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8602979,"byte_end":8603078,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ unreliable protocol. Refer to [`TcpListener`] and [`TcpStream`] for async TCP primitives.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603079,"byte_end":8603172,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603173,"byte_end":8603176,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This type is an async version of [`std::net::UdpSocket`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603177,"byte_end":8603238,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603239,"byte_end":8603242,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`bind`]: #method.bind","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603243,"byte_end":8603269,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/ [received from]: #method.recv_from","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603270,"byte_end":8603308,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/ [sent to]: #method.send_to","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603309,"byte_end":8603339,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`TcpListener`]: struct.TcpListener.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603340,"byte_end":8603384,"line_start":23,"line_end":23,"column_start":1,"column_end":45}},{"value":"/ [`TcpStream`]: struct.TcpStream.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603385,"byte_end":8603425,"line_start":24,"line_end":24,"column_start":1,"column_end":41}},{"value":"/ [`std::net`]: https://doc.rust-lang.org/std/net/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603426,"byte_end":8603488,"line_start":25,"line_end":25,"column_start":1,"column_end":63}},{"value":"/ [IETF RFC 768]: https://tools.ietf.org/html/rfc768","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603489,"byte_end":8603543,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/ [`std::net::UdpSocket`]: https://doc.rust-lang.org/std/net/struct.UdpSocket.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603544,"byte_end":8603628,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603629,"byte_end":8603632,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603633,"byte_end":8603648,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603649,"byte_end":8603652,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603653,"byte_end":8603666,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603667,"byte_end":8603741,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603742,"byte_end":8603747,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603748,"byte_end":8603782,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603783,"byte_end":8603786,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603787,"byte_end":8603845,"line_start":36,"line_end":36,"column_start":1,"column_end":59}},{"value":"/ let mut buf = vec![0u8; 1024];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603846,"byte_end":8603880,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603881,"byte_end":8603884,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603885,"byte_end":8603895,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603896,"byte_end":8603954,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/     socket.send_to(&buf[..n], &peer).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8603955,"byte_end":8604003,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604004,"byte_end":8604009,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604010,"byte_end":8604015,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/ # }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604016,"byte_end":8604026,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604027,"byte_end":8604034,"line_start":45,"line_end":45,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5703},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604727,"byte_end":8604731,"line_start":70,"line_end":70,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"fn <A> (addrs: A) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a UDP socket from the given address.","sig":null,"attributes":[{"value":"/ Creates a UDP socket from the given address.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604140,"byte_end":8604188,"line_start":52,"line_end":52,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604193,"byte_end":8604196,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port to this socket. The","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604201,"byte_end":8604296,"line_start":54,"line_end":54,"column_start":5,"column_end":100}},{"value":"/ port allocated can be queried via the [`local_addr`] method.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604301,"byte_end":8604365,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604370,"byte_end":8604373,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ [`local_addr`]: #method.local_addr","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604378,"byte_end":8604416,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604421,"byte_end":8604424,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604429,"byte_end":8604443,"line_start":59,"line_end":59,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604448,"byte_end":8604451,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604456,"byte_end":8604469,"line_start":61,"line_end":61,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604474,"byte_end":8604548,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604553,"byte_end":8604558,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604563,"byte_end":8604597,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604602,"byte_end":8604605,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604610,"byte_end":8604665,"line_start":66,"line_end":66,"column_start":5,"column_end":60}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604670,"byte_end":8604675,"line_start":67,"line_end":67,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604680,"byte_end":8604697,"line_start":68,"line_end":68,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604702,"byte_end":8604709,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5708},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606071,"byte_end":8606080,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UdpSocket>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer address that this listener is connected to.","sig":null,"attributes":[{"value":"/ Returns the peer address that this listener is connected to.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605415,"byte_end":8605479,"line_start":93,"line_end":93,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605484,"byte_end":8605487,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when connect to port 0 to figure out which port was","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605492,"byte_end":8605580,"line_start":95,"line_end":95,"column_start":5,"column_end":93}},{"value":"/ actually connected.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605585,"byte_end":8605608,"line_start":96,"line_end":96,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605613,"byte_end":8605616,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605621,"byte_end":8605635,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605640,"byte_end":8605643,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605648,"byte_end":8605661,"line_start":100,"line_end":100,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605666,"byte_end":8605740,"line_start":101,"line_end":101,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605745,"byte_end":8605750,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605755,"byte_end":8605789,"line_start":103,"line_end":103,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605794,"byte_end":8605797,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let socket1 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605802,"byte_end":8605858,"line_start":105,"line_end":105,"column_start":5,"column_end":61}},{"value":"/ let socket2 = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605863,"byte_end":8605919,"line_start":106,"line_end":106,"column_start":5,"column_end":61}},{"value":"/ socket1.connect(socket2.local_addr()?).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605924,"byte_end":8605974,"line_start":107,"line_end":107,"column_start":5,"column_end":55}},{"value":"/ let addr = socket1.peer_addr()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8605979,"byte_end":8606015,"line_start":108,"line_end":108,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606020,"byte_end":8606025,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606030,"byte_end":8606047,"line_start":110,"line_end":110,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606052,"byte_end":8606059,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5710},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606796,"byte_end":8606806,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606264,"byte_end":8606325,"line_start":119,"line_end":119,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606330,"byte_end":8606333,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out which port was","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606338,"byte_end":8606426,"line_start":121,"line_end":121,"column_start":5,"column_end":93}},{"value":"/ actually bound.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606431,"byte_end":8606450,"line_start":122,"line_end":122,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606455,"byte_end":8606458,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606463,"byte_end":8606477,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606482,"byte_end":8606485,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606490,"byte_end":8606503,"line_start":126,"line_end":126,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606508,"byte_end":8606582,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606587,"byte_end":8606592,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606597,"byte_end":8606631,"line_start":129,"line_end":129,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606636,"byte_end":8606639,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606644,"byte_end":8606699,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/ let addr = socket.local_addr()?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606704,"byte_end":8606740,"line_start":132,"line_end":132,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606745,"byte_end":8606750,"line_start":133,"line_end":133,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606755,"byte_end":8606772,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606777,"byte_end":8606784,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5712},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607850,"byte_end":8607857,"line_start":169,"line_end":169,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"fn <A> (&self, buf: &[u8], addrs: A) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8606992,"byte_end":8607042,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607047,"byte_end":8607050,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes written.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607055,"byte_end":8607107,"line_start":145,"line_end":145,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607112,"byte_end":8607115,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607120,"byte_end":8607134,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607139,"byte_end":8607142,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607147,"byte_end":8607160,"line_start":149,"line_end":149,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607165,"byte_end":8607239,"line_start":150,"line_end":150,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607244,"byte_end":8607249,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607254,"byte_end":8607288,"line_start":152,"line_end":152,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607293,"byte_end":8607296,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ const THE_MERCHANT_OF_VENICE: &[u8] = b\"","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607301,"byte_end":8607345,"line_start":154,"line_end":154,"column_start":5,"column_end":49}},{"value":"/     If you prick us, do we not bleed?","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607350,"byte_end":8607391,"line_start":155,"line_end":155,"column_start":5,"column_end":46}},{"value":"/     If you tickle us, do we not laugh?","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607396,"byte_end":8607438,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/     If you poison us, do we not die?","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607443,"byte_end":8607483,"line_start":157,"line_end":157,"column_start":5,"column_end":45}},{"value":"/     And if you wrong us, shall we not revenge?","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607488,"byte_end":8607538,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/ \";","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607543,"byte_end":8607549,"line_start":159,"line_end":159,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607554,"byte_end":8607557,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607562,"byte_end":8607617,"line_start":161,"line_end":161,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607622,"byte_end":8607625,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let addr = \"127.0.0.1:7878\";","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607630,"byte_end":8607662,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/ let sent = socket.send_to(THE_MERCHANT_OF_VENICE, &addr).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607667,"byte_end":8607735,"line_start":164,"line_end":164,"column_start":5,"column_end":73}},{"value":"/ println!(\"Sent {} bytes to {}\", sent, addr);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607740,"byte_end":8607788,"line_start":165,"line_end":165,"column_start":5,"column_end":53}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607793,"byte_end":8607798,"line_start":166,"line_end":166,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607803,"byte_end":8607820,"line_start":167,"line_end":167,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8607825,"byte_end":8607832,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5717},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608972,"byte_end":8608981,"line_start":205,"line_end":205,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"fn (&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608390,"byte_end":8608424,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608429,"byte_end":8608432,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read and the origin.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608437,"byte_end":8608501,"line_start":188,"line_end":188,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608506,"byte_end":8608509,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608514,"byte_end":8608528,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608533,"byte_end":8608536,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608541,"byte_end":8608554,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608559,"byte_end":8608633,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608638,"byte_end":8608643,"line_start":194,"line_end":194,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608648,"byte_end":8608682,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608687,"byte_end":8608690,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608695,"byte_end":8608750,"line_start":197,"line_end":197,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608755,"byte_end":8608758,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608763,"byte_end":8608795,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/ let (n, peer) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608800,"byte_end":8608854,"line_start":200,"line_end":200,"column_start":5,"column_end":59}},{"value":"/ println!(\"Received {} bytes from {}\", n, peer);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608859,"byte_end":8608910,"line_start":201,"line_end":201,"column_start":5,"column_end":56}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608915,"byte_end":8608920,"line_start":202,"line_end":202,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608925,"byte_end":8608942,"line_start":203,"line_end":203,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8608947,"byte_end":8608954,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5720},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609873,"byte_end":8609880,"line_start":231,"line_end":231,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"fn <A> (&self, addrs: A) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket to a remote address.","sig":null,"attributes":[{"value":"/ Connects the UDP socket to a remote address.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609095,"byte_end":8609143,"line_start":209,"line_end":209,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609148,"byte_end":8609151,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ When connected, methods [`send`] and [`recv`] will use the specified address for sending","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609156,"byte_end":8609248,"line_start":211,"line_end":211,"column_start":5,"column_end":97}},{"value":"/ and receiving messages. Additionally, a filter will be applied to [`recv_from`] so that it","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609253,"byte_end":8609347,"line_start":212,"line_end":212,"column_start":5,"column_end":99}},{"value":"/ only receives messages from that same address.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609352,"byte_end":8609402,"line_start":213,"line_end":213,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609407,"byte_end":8609410,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`send`]: #method.send","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609415,"byte_end":8609441,"line_start":215,"line_end":215,"column_start":5,"column_end":31}},{"value":"/ [`recv`]: #method.recv","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609446,"byte_end":8609472,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/ [`recv_from`]: #method.recv_from","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609477,"byte_end":8609513,"line_start":217,"line_end":217,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609518,"byte_end":8609521,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609526,"byte_end":8609540,"line_start":219,"line_end":219,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609545,"byte_end":8609548,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609553,"byte_end":8609566,"line_start":221,"line_end":221,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609571,"byte_end":8609645,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609650,"byte_end":8609655,"line_start":223,"line_end":223,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609660,"byte_end":8609694,"line_start":224,"line_end":224,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609699,"byte_end":8609702,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609707,"byte_end":8609762,"line_start":226,"line_end":226,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609767,"byte_end":8609811,"line_start":227,"line_end":227,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609816,"byte_end":8609821,"line_start":228,"line_end":228,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609826,"byte_end":8609843,"line_start":229,"line_end":229,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8609848,"byte_end":8609855,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5726},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611319,"byte_end":8611323,"line_start":276,"line_end":276,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"fn (&self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address to which it is connected.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8610583,"byte_end":8610659,"line_start":254,"line_end":254,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8610664,"byte_end":8610667,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8610672,"byte_end":8610744,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8610749,"byte_end":8610806,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8610811,"byte_end":8610814,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8610819,"byte_end":8610851,"line_start":259,"line_end":259,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8610856,"byte_end":8610859,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8610864,"byte_end":8610878,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8610883,"byte_end":8610886,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8610891,"byte_end":8610904,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8610909,"byte_end":8610983,"line_start":264,"line_end":264,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8610988,"byte_end":8610993,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8610998,"byte_end":8611032,"line_start":266,"line_end":266,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611037,"byte_end":8611040,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611045,"byte_end":8611104,"line_start":268,"line_end":268,"column_start":5,"column_end":64}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611109,"byte_end":8611153,"line_start":269,"line_end":269,"column_start":5,"column_end":49}},{"value":"/ let bytes = socket.send(b\"Hi there!\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611158,"byte_end":8611207,"line_start":270,"line_end":270,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611212,"byte_end":8611215,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ println!(\"Sent {} bytes\", bytes);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611220,"byte_end":8611257,"line_start":272,"line_end":272,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611262,"byte_end":8611267,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611272,"byte_end":8611289,"line_start":274,"line_end":274,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611294,"byte_end":8611301,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5729},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612003,"byte_end":8612007,"line_start":300,"line_end":300,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611414,"byte_end":8611448,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611453,"byte_end":8611456,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611461,"byte_end":8611510,"line_start":282,"line_end":282,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611515,"byte_end":8611518,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611523,"byte_end":8611537,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611542,"byte_end":8611545,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611550,"byte_end":8611563,"line_start":286,"line_end":286,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611568,"byte_end":8611642,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611647,"byte_end":8611652,"line_start":288,"line_end":288,"column_start":5,"column_end":10}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611657,"byte_end":8611691,"line_start":289,"line_end":289,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611696,"byte_end":8611699,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611704,"byte_end":8611759,"line_start":291,"line_end":291,"column_start":5,"column_end":60}},{"value":"/ socket.connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611764,"byte_end":8611808,"line_start":292,"line_end":292,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611813,"byte_end":8611816,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0; 1024];","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611821,"byte_end":8611853,"line_start":294,"line_end":294,"column_start":5,"column_end":37}},{"value":"/ let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611858,"byte_end":8611899,"line_start":295,"line_end":295,"column_start":5,"column_end":46}},{"value":"/ println!(\"Received {} bytes\", n);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611904,"byte_end":8611941,"line_start":296,"line_end":296,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611946,"byte_end":8611951,"line_start":297,"line_end":297,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611956,"byte_end":8611973,"line_start":298,"line_end":298,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8611978,"byte_end":8611985,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5732},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612314,"byte_end":8612323,"line_start":309,"line_end":309,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612102,"byte_end":8612166,"line_start":304,"line_end":304,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612171,"byte_end":8612174,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612179,"byte_end":8612245,"line_start":306,"line_end":306,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612250,"byte_end":8612253,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: #method.set_broadcast","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612258,"byte_end":8612302,"line_start":308,"line_end":308,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5733},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612576,"byte_end":8612589,"line_start":316,"line_end":316,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612407,"byte_end":8612471,"line_start":313,"line_end":313,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612476,"byte_end":8612479,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast address.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612484,"byte_end":8612564,"line_start":315,"line_end":315,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5734},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612928,"byte_end":8612945,"line_start":325,"line_end":325,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612687,"byte_end":8612756,"line_start":320,"line_end":320,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612761,"byte_end":8612764,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612769,"byte_end":8612843,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612848,"byte_end":8612851,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: #method.set_multicast_loop_v4","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8612856,"byte_end":8612916,"line_start":324,"line_end":324,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":5735},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613290,"byte_end":8613311,"line_start":336,"line_end":336,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613037,"byte_end":8613106,"line_start":329,"line_end":329,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613111,"byte_end":8613114,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613119,"byte_end":8613193,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613198,"byte_end":8613201,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613206,"byte_end":8613216,"line_start":333,"line_end":333,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613221,"byte_end":8613224,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613229,"byte_end":8613278,"line_start":335,"line_end":335,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5736},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613654,"byte_end":8613670,"line_start":345,"line_end":345,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613417,"byte_end":8613485,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613490,"byte_end":8613493,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613498,"byte_end":8613571,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613576,"byte_end":8613579,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: #method.set_multicast_ttl_v4","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613584,"byte_end":8613642,"line_start":344,"line_end":344,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5737},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614154,"byte_end":8614174,"line_start":358,"line_end":358,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613760,"byte_end":8613828,"line_start":349,"line_end":349,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613833,"byte_end":8613836,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for this socket. The default","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613841,"byte_end":8613936,"line_start":351,"line_end":351,"column_start":5,"column_end":100}},{"value":"/ value is 1 which means that multicast packets don't leave the local network unless","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8613941,"byte_end":8614027,"line_start":352,"line_end":352,"column_start":5,"column_end":91}},{"value":"/ explicitly requested.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614032,"byte_end":8614057,"line_start":353,"line_end":353,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614062,"byte_end":8614065,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614070,"byte_end":8614080,"line_start":355,"line_end":355,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614085,"byte_end":8614088,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614093,"byte_end":8614142,"line_start":357,"line_end":357,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5738},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614523,"byte_end":8614540,"line_start":367,"line_end":367,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614280,"byte_end":8614351,"line_start":362,"line_end":362,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614356,"byte_end":8614359,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614364,"byte_end":8614438,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614443,"byte_end":8614446,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: #method.set_multicast_loop_v6","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614451,"byte_end":8614511,"line_start":366,"line_end":366,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":5739},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614889,"byte_end":8614910,"line_start":378,"line_end":378,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614632,"byte_end":8614703,"line_start":371,"line_end":371,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614708,"byte_end":8614711,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614716,"byte_end":8614792,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614797,"byte_end":8614800,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614805,"byte_end":8614815,"line_start":375,"line_end":375,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614820,"byte_end":8614823,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8614828,"byte_end":8614877,"line_start":377,"line_end":377,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5740},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615204,"byte_end":8615207,"line_start":387,"line_end":387,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615016,"byte_end":8615074,"line_start":382,"line_end":382,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615079,"byte_end":8615082,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615087,"byte_end":8615147,"line_start":384,"line_end":384,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615152,"byte_end":8615155,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615160,"byte_end":8615192,"line_start":386,"line_end":386,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5741},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615469,"byte_end":8615476,"line_start":395,"line_end":395,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615284,"byte_end":8615342,"line_start":391,"line_end":391,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615347,"byte_end":8615350,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615355,"byte_end":8615431,"line_start":393,"line_end":393,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615436,"byte_end":8615457,"line_start":394,"line_end":394,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5742},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616493,"byte_end":8616510,"line_start":423,"line_end":423,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615569,"byte_end":8615627,"line_start":399,"line_end":399,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615632,"byte_end":8615635,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615640,"byte_end":8615732,"line_start":401,"line_end":401,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the address of the local interface with which","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615737,"byte_end":8615832,"line_start":402,"line_end":402,"column_start":5,"column_end":100}},{"value":"/ the system should join the multicast group. If it's equal to `INADDR_ANY` then an","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615837,"byte_end":8615922,"line_start":403,"line_end":403,"column_start":5,"column_end":90}},{"value":"/ appropriate interface is chosen by the system.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615927,"byte_end":8615977,"line_start":404,"line_end":404,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615982,"byte_end":8615985,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8615990,"byte_end":8616004,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616009,"byte_end":8616012,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616017,"byte_end":8616030,"line_start":408,"line_end":408,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616035,"byte_end":8616109,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616114,"byte_end":8616119,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616124,"byte_end":8616151,"line_start":411,"line_end":411,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616156,"byte_end":8616159,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616164,"byte_end":8616198,"line_start":413,"line_end":413,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616203,"byte_end":8616206,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let interface = Ipv4Addr::new(0, 0, 0, 0);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616211,"byte_end":8616257,"line_start":415,"line_end":415,"column_start":5,"column_end":51}},{"value":"/ let mdns_addr = Ipv4Addr::new(224, 0, 0, 123);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616262,"byte_end":8616312,"line_start":416,"line_end":416,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616317,"byte_end":8616320,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ let socket = UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616325,"byte_end":8616380,"line_start":418,"line_end":418,"column_start":5,"column_end":60}},{"value":"/ socket.join_multicast_v4(mdns_addr, interface)?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616385,"byte_end":8616437,"line_start":419,"line_end":419,"column_start":5,"column_end":57}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616442,"byte_end":8616447,"line_start":420,"line_end":420,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616452,"byte_end":8616469,"line_start":421,"line_end":421,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616474,"byte_end":8616481,"line_start":422,"line_end":422,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5743},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617573,"byte_end":8617590,"line_start":452,"line_end":452,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616690,"byte_end":8616750,"line_start":429,"line_end":429,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616755,"byte_end":8616758,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ This method specifies a new multicast group for this socket to join. The address must be","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616763,"byte_end":8616855,"line_start":431,"line_end":431,"column_start":5,"column_end":97}},{"value":"/ a valid multicast address, and `interface` is the index of the interface to join/leave (or","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616860,"byte_end":8616954,"line_start":432,"line_end":432,"column_start":5,"column_end":99}},{"value":"/ 0 to indicate any interface).","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616959,"byte_end":8616992,"line_start":433,"line_end":433,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8616997,"byte_end":8617000,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617005,"byte_end":8617019,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617024,"byte_end":8617027,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617032,"byte_end":8617045,"line_start":437,"line_end":437,"column_start":5,"column_end":18}},{"value":"/ # fn main() -> std::io::Result<()> { async_std::task::block_on(async {","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617050,"byte_end":8617124,"line_start":438,"line_end":438,"column_start":5,"column_end":79}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617129,"byte_end":8617134,"line_start":439,"line_end":439,"column_start":5,"column_end":10}},{"value":"/ use std::net::{Ipv6Addr, SocketAddr};","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617139,"byte_end":8617180,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617185,"byte_end":8617188,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ use async_std::net::UdpSocket;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617193,"byte_end":8617227,"line_start":442,"line_end":442,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617232,"byte_end":8617235,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let socket_addr = SocketAddr::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0).into(), 0);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617240,"byte_end":8617327,"line_start":444,"line_end":444,"column_start":5,"column_end":92}},{"value":"/ let mdns_addr = Ipv6Addr::new(0xFF02, 0, 0, 0, 0, 0, 0, 0x0123);","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617332,"byte_end":8617400,"line_start":445,"line_end":445,"column_start":5,"column_end":73}},{"value":"/ let socket = UdpSocket::bind(&socket_addr).await?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617405,"byte_end":8617459,"line_start":446,"line_end":446,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617464,"byte_end":8617467,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ socket.join_multicast_v6(&mdns_addr, 0)?;","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617472,"byte_end":8617517,"line_start":448,"line_end":448,"column_start":5,"column_end":50}},{"value":"/ #","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617522,"byte_end":8617527,"line_start":449,"line_end":449,"column_start":5,"column_end":10}},{"value":"/ # Ok(()) }) }","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617532,"byte_end":8617549,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617554,"byte_end":8617561,"line_start":451,"line_end":451,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5744},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617983,"byte_end":8618001,"line_start":463,"line_end":463,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617764,"byte_end":8617823,"line_start":458,"line_end":458,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617828,"byte_end":8617831,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617836,"byte_end":8617906,"line_start":460,"line_end":460,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617911,"byte_end":8617914,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: #method.join_multicast_v4","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8617919,"byte_end":8617971,"line_start":462,"line_end":462,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5745},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8618403,"byte_end":8618421,"line_start":474,"line_end":474,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8618182,"byte_end":8618243,"line_start":469,"line_end":469,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8618248,"byte_end":8618251,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8618256,"byte_end":8618326,"line_start":471,"line_end":471,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8618331,"byte_end":8618334,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: #method.join_multicast_v6","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8618339,"byte_end":8618391,"line_start":473,"line_end":473,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":6217},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/pin/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pin","qualname":"::pin","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/pin/mod.rs","parent":null,"children":[{"krate":0,"index":6218}],"decl_id":null,"docs":" Types that pin data to its location in memory.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":14455,"byte_end":14483,"line_start":133,"line_end":133,"column_start":13,"column_end":41}},{"value":"! Types that pin data to its location in memory.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/pin/mod.rs","byte_start":8620932,"byte_end":8620982,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/pin/mod.rs","byte_start":8620983,"byte_end":8620986,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! For more documentation see [`std::pin`](https://doc.rust-lang.org/std/pin/index.html).","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/pin/mod.rs","byte_start":8620987,"byte_end":8621077,"line_start":3,"line_end":3,"column_start":1,"column_end":91}}]},{"kind":"Mod","id":{"krate":0,"index":6219},"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/process/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"process","qualname":"::process","value":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/process/mod.rs","parent":null,"children":[{"krate":0,"index":6220},{"krate":0,"index":6223}],"decl_id":null,"docs":" A module for working with processes.","sig":null,"attributes":[{"value":"cfg(feature = \"unstable\")","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":14455,"byte_end":14483,"line_start":133,"line_end":133,"column_start":13,"column_end":41}},{"value":"cfg(not(target_os = \"unknown\"))","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":10858,"byte_end":10892,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"! A module for working with processes.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/process/mod.rs","byte_start":8621118,"byte_end":8621158,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/process/mod.rs","byte_start":8621159,"byte_end":8621162,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is mostly concerned with spawning and interacting with child processes, but it also","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/process/mod.rs","byte_start":8621163,"byte_end":8621262,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"! provides abort and exit for terminating the current process.","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/process/mod.rs","byte_start":8621263,"byte_end":8621327,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/process/mod.rs","byte_start":8621328,"byte_end":8621331,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! This is an async version of [`std::process`].","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/process/mod.rs","byte_start":8621332,"byte_end":8621381,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/process/mod.rs","byte_start":8621382,"byte_end":8621385,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! [`std::process`]: https://doc.rust-lang.org/std/process/index.html","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/process/mod.rs","byte_start":8621386,"byte_end":8621456,"line_start":8,"line_end":8,"column_start":1,"column_end":71}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":11372,"byte_end":11376,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932942,"byte_end":7932950,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7934870,"byte_end":7934877,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1163},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7940164,"byte_end":7940181,"line_start":191,"line_end":191,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7941853,"byte_end":7941863,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942919,"byte_end":7942929,"line_start":70,"line_end":70,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task.rs","byte_start":7946022,"byte_end":7946026,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task.rs","byte_start":7946636,"byte_end":7946640,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7947194,"byte_end":7947200,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7947611,"byte_end":7947617,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948207,"byte_end":7948215,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7952067,"byte_end":7952078,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7952222,"byte_end":7952233,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7952398,"byte_end":7952409,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7952777,"byte_end":7952786,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_locals_wrapper.rs","byte_start":7954638,"byte_end":7954655,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_locals_wrapper.rs","byte_start":7956068,"byte_end":7956085,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/delay.rs","byte_start":8079805,"byte_end":8079816,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/delay.rs","byte_start":8079996,"byte_end":8080007,"line_start":29,"line_end":29,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/flatten.rs","byte_start":8080783,"byte_end":8080796,"line_start":20,"line_end":20,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/flatten.rs","byte_start":8080984,"byte_end":8080997,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1433},{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/race.rs","byte_start":8082300,"byte_end":8082304,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/race.rs","byte_start":8082558,"byte_end":8082562,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/try_race.rs","byte_start":8083555,"byte_end":8083562,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/try_race.rs","byte_start":8083822,"byte_end":8083829,"line_start":35,"line_end":35,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1469},{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/join.rs","byte_start":8085301,"byte_end":8085305,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/join.rs","byte_start":8085539,"byte_end":8085543,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/try_join.rs","byte_start":8086721,"byte_end":8086728,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/try_join.rs","byte_start":8086971,"byte_end":8086978,"line_start":35,"line_end":35,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088908,"byte_end":8088915,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089808,"byte_end":8089814,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089844,"byte_end":8089850,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7785034,"byte_end":7785047,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7785274,"byte_end":7785287,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7785923,"byte_end":7785935,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7785962,"byte_end":7785974,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091501,"byte_end":8091502,"line_start":46,"line_end":46,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/maybe_done.rs","byte_start":8092315,"byte_end":8092324,"line_start":27,"line_end":27,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/maybe_done.rs","byte_start":8093577,"byte_end":8093586,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/all.rs","byte_start":7868370,"byte_end":7868379,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/all.rs","byte_start":7868586,"byte_end":7868595,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/all.rs","byte_start":7868635,"byte_end":7868644,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/any.rs","byte_start":7869725,"byte_end":7869734,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/any.rs","byte_start":7869941,"byte_end":7869950,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/any.rs","byte_start":7869990,"byte_end":7869999,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/chain.rs","byte_start":7871369,"byte_end":7871374,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/chain.rs","byte_start":7871592,"byte_end":7871597,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cloned.rs","byte_start":7872635,"byte_end":7872641,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cloned.rs","byte_start":7872753,"byte_end":7872759,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cmp.rs","byte_start":7873710,"byte_end":7873719,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cmp.rs","byte_start":7873948,"byte_end":7873957,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/copied.rs","byte_start":7876256,"byte_end":7876262,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/copied.rs","byte_start":7876374,"byte_end":7876380,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cycle.rs","byte_start":7876963,"byte_end":7876968,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cycle.rs","byte_start":7877178,"byte_end":7877183,"line_start":26,"line_end":26,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cycle.rs","byte_start":7877319,"byte_end":7877324,"line_start":34,"line_end":34,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/enumerate.rs","byte_start":7878225,"byte_end":7878234,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/enumerate.rs","byte_start":7878341,"byte_end":7878350,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/eq.rs","byte_start":7879366,"byte_end":7879374,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/eq.rs","byte_start":7879588,"byte_end":7879596,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/filter.rs","byte_start":7880865,"byte_end":7880871,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/filter.rs","byte_start":7881036,"byte_end":7881042,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/filter_map.rs","byte_start":7881839,"byte_end":7881848,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/filter_map.rs","byte_start":7881967,"byte_end":7881976,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find.rs","byte_start":7882815,"byte_end":7882825,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find.rs","byte_start":7882959,"byte_end":7882969,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find.rs","byte_start":7883010,"byte_end":7883020,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find_map.rs","byte_start":7883814,"byte_end":7883827,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find_map.rs","byte_start":7883961,"byte_end":7883974,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find_map.rs","byte_start":7884018,"byte_end":7884031,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/fold.rs","byte_start":7884944,"byte_end":7884954,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/fold.rs","byte_start":7885147,"byte_end":7885157,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/for_each.rs","byte_start":7886117,"byte_end":7886130,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/for_each.rs","byte_start":7886279,"byte_end":7886292,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/fuse.rs","byte_start":7887323,"byte_end":7887327,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/fuse.rs","byte_start":7887482,"byte_end":7887486,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/ge.rs","byte_start":7888509,"byte_end":7888517,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/ge.rs","byte_start":7888725,"byte_end":7888733,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/gt.rs","byte_start":7889742,"byte_end":7889750,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/gt.rs","byte_start":7889958,"byte_end":7889966,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/inspect.rs","byte_start":7890934,"byte_end":7890941,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/inspect.rs","byte_start":7891090,"byte_end":7891097,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/last.rs","byte_start":7891828,"byte_end":7891838,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/last.rs","byte_start":7891954,"byte_end":7891964,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/le.rs","byte_start":7893082,"byte_end":7893090,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/le.rs","byte_start":7893298,"byte_end":7893306,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/lt.rs","byte_start":7894325,"byte_end":7894333,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/lt.rs","byte_start":7894541,"byte_end":7894549,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/map.rs","byte_start":7895282,"byte_end":7895285,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/map.rs","byte_start":7895437,"byte_end":7895440,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/max.rs","byte_start":7896125,"byte_end":7896134,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/max.rs","byte_start":7896249,"byte_end":7896258,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/max_by.rs","byte_start":7897430,"byte_end":7897441,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/max_by.rs","byte_start":7897628,"byte_end":7897639,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/max_by_key.rs","byte_start":7898861,"byte_end":7898875,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/max_by_key.rs","byte_start":7899060,"byte_end":7899074,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/min.rs","byte_start":7900480,"byte_end":7900489,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/min.rs","byte_start":7900604,"byte_end":7900613,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/min_by.rs","byte_start":7901782,"byte_end":7901793,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/min_by.rs","byte_start":7901980,"byte_end":7901991,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/min_by_key.rs","byte_start":7903239,"byte_end":7903253,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/min_by_key.rs","byte_start":7903438,"byte_end":7903452,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/ne.rs","byte_start":7905021,"byte_end":7905029,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/ne.rs","byte_start":7905243,"byte_end":7905251,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/next.rs","byte_start":7906307,"byte_end":7906317,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/nth.rs","byte_start":7906764,"byte_end":7906773,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/nth.rs","byte_start":7906797,"byte_end":7906806,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/nth.rs","byte_start":7906936,"byte_end":7906945,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/partial_cmp.rs","byte_start":7908158,"byte_end":7908174,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/partial_cmp.rs","byte_start":7908403,"byte_end":7908419,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/position.rs","byte_start":7910802,"byte_end":7910816,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/position.rs","byte_start":7910846,"byte_end":7910860,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/position.rs","byte_start":7911063,"byte_end":7911077,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/scan.rs","byte_start":7912275,"byte_end":7912279,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/scan.rs","byte_start":7912484,"byte_end":7912488,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/skip.rs","byte_start":7913473,"byte_end":7913477,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/skip.rs","byte_start":7913591,"byte_end":7913595,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/skip_while.rs","byte_start":7914715,"byte_end":7914724,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/skip_while.rs","byte_start":7914906,"byte_end":7914915,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/step_by.rs","byte_start":7916258,"byte_end":7916264,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/step_by.rs","byte_start":7916465,"byte_end":7916471,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/take.rs","byte_start":7917674,"byte_end":7917678,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/take.rs","byte_start":7917849,"byte_end":7917853,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/take_while.rs","byte_start":7918898,"byte_end":7918907,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/take_while.rs","byte_start":7919072,"byte_end":7919081,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_fold.rs","byte_start":7919935,"byte_end":7919948,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_fold.rs","byte_start":7919984,"byte_end":7919997,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_fold.rs","byte_start":7920209,"byte_end":7920222,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_for_each.rs","byte_start":7921252,"byte_end":7921268,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_for_each.rs","byte_start":7921298,"byte_end":7921314,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_for_each.rs","byte_start":7921449,"byte_end":7921465,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/zip.rs","byte_start":7922727,"byte_end":7922730,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/zip.rs","byte_start":7922970,"byte_end":7922973,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/zip.rs","byte_start":7923175,"byte_end":7923178,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/count.rs","byte_start":8124218,"byte_end":8124229,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/count.rs","byte_start":8124340,"byte_end":8124351,"line_start":27,"line_end":27,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/merge.rs","byte_start":8125568,"byte_end":8125573,"line_start":30,"line_end":30,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/merge.rs","byte_start":8125756,"byte_end":8125761,"line_start":39,"line_end":39,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1727},{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/flatten.rs","byte_start":8127390,"byte_end":8127397,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/flatten.rs","byte_start":8127600,"byte_end":8127607,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1749},{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/flatten.rs","byte_start":8128452,"byte_end":8128459,"line_start":69,"line_end":69,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/flat_map.rs","byte_start":8129459,"byte_end":8129466,"line_start":27,"line_end":27,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1770}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/flat_map.rs","byte_start":8129721,"byte_end":8129728,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1775},{"krate":0,"index":1776}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/partition.rs","byte_start":8130970,"byte_end":8130985,"line_start":21,"line_end":21,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/partition.rs","byte_start":8131193,"byte_end":8131208,"line_start":31,"line_end":31,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1795},{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/timeout.rs","byte_start":8132426,"byte_end":8132433,"line_start":24,"line_end":24,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1813}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/timeout.rs","byte_start":8132603,"byte_end":8132610,"line_start":32,"line_end":32,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1816},{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/timeout.rs","byte_start":8133431,"byte_end":8133443,"line_start":57,"line_end":57,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/timeout.rs","byte_start":8133470,"byte_end":8133482,"line_start":59,"line_end":59,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/throttle.rs","byte_start":8134366,"byte_end":8134374,"line_start":32,"line_end":32,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/throttle.rs","byte_start":8134627,"byte_end":8134635,"line_start":43,"line_end":43,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/delay.rs","byte_start":8135827,"byte_end":8135832,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/delay.rs","byte_start":8136038,"byte_end":8136043,"line_start":33,"line_end":33,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1857},{"krate":0,"index":1858}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/unzip.rs","byte_start":8136831,"byte_end":8136842,"line_start":20,"line_end":20,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/unzip.rs","byte_start":8137112,"byte_end":8137123,"line_start":33,"line_end":33,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1878},{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924716,"byte_end":7924721,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925222,"byte_end":7925228,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7926157,"byte_end":7926163,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927517,"byte_end":7927525,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927780,"byte_end":7927788,"line_start":58,"line_end":58,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928832,"byte_end":7928836,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7929061,"byte_end":7929065,"line_start":54,"line_end":54,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7930005,"byte_end":7930011,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930580,"byte_end":7930590,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931782,"byte_end":7931792,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/next_back.rs","byte_start":8145151,"byte_end":8145165,"line_start":13,"line_end":13,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2078},{"krate":0,"index":2079}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/nth_back.rs","byte_start":8145619,"byte_end":8145632,"line_start":14,"line_end":14,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/nth_back.rs","byte_start":8145771,"byte_end":8145784,"line_start":20,"line_end":20,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2099},{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/rfind.rs","byte_start":8146641,"byte_end":8146652,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2118}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/rfind.rs","byte_start":8146793,"byte_end":8146804,"line_start":20,"line_end":20,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/rfind.rs","byte_start":8146845,"byte_end":8146856,"line_start":22,"line_end":22,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2126},{"krate":0,"index":2127}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/rfold.rs","byte_start":8147781,"byte_end":8147792,"line_start":20,"line_end":20,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2140}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/rfold.rs","byte_start":8147992,"byte_end":8148003,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2145},{"krate":0,"index":2146}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/try_rfold.rs","byte_start":8149022,"byte_end":8149036,"line_start":20,"line_end":20,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2159}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/try_rfold.rs","byte_start":8149242,"byte_end":8149256,"line_start":30,"line_end":30,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2165},{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8162478,"byte_end":8162486,"line_start":67,"line_end":67,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163706,"byte_end":8163707,"line_start":29,"line_end":29,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164867,"byte_end":8164874,"line_start":48,"line_end":48,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2263},{"krate":0,"index":2264}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8165042,"byte_end":8165049,"line_start":56,"line_end":56,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8165196,"byte_end":8165203,"line_start":62,"line_end":62,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8165239,"byte_end":8165246,"line_start":64,"line_end":64,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2272}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8169398,"byte_end":8169408,"line_start":58,"line_end":58,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2301},{"krate":0,"index":2302}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/lines.rs","byte_start":8233167,"byte_end":8233172,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3261},{"krate":0,"index":3262}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/read_line.rs","byte_start":8235094,"byte_end":8235108,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3287},{"krate":0,"index":3288}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/read_until.rs","byte_start":8236567,"byte_end":8236582,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3309},{"krate":0,"index":3310}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/split.rs","byte_start":8237782,"byte_end":8237787,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3325},{"krate":0,"index":3326}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/bytes.rs","byte_start":8254704,"byte_end":8254709,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3351},{"krate":0,"index":3352}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256524,"byte_end":8256529,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3370}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258688,"byte_end":8258693,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3374}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258935,"byte_end":8258940,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3378},{"krate":0,"index":3379}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8260085,"byte_end":8260090,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3383},{"krate":0,"index":3384}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read.rs","byte_start":8261791,"byte_end":8261801,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3401},{"krate":0,"index":3402}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_exact.rs","byte_start":8262376,"byte_end":8262391,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3420},{"krate":0,"index":3421}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_to_end.rs","byte_start":8263313,"byte_end":8263328,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3439},{"krate":0,"index":3440}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_to_end.rs","byte_start":8264478,"byte_end":8264483,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3448}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_to_string.rs","byte_start":8265800,"byte_end":8265818,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3470},{"krate":0,"index":3471}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_vectored.rs","byte_start":8267172,"byte_end":8267190,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3490},{"krate":0,"index":3491}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268010,"byte_end":8268014,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3509}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271686,"byte_end":8271690,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3512}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8272608,"byte_end":8272612,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3517},{"krate":0,"index":3518}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/seek/seek.rs","byte_start":8277733,"byte_end":8277743,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3551},{"krate":0,"index":3552}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/flush.rs","byte_start":8289039,"byte_end":8289050,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3571},{"krate":0,"index":3572}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write.rs","byte_start":8289562,"byte_end":8289573,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3589},{"krate":0,"index":3590}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write_all.rs","byte_start":8290138,"byte_end":8290152,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3608},{"krate":0,"index":3609}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write_fmt.rs","byte_start":8291121,"byte_end":8291135,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3628},{"krate":0,"index":3629}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write_vectored.rs","byte_start":8292625,"byte_end":8292644,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3647},{"krate":0,"index":3648}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/utils.rs","byte_start":8293111,"byte_end":8293117,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3665}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/utils.rs","byte_start":8293370,"byte_end":8293382,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3669}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/utils.rs","byte_start":8293669,"byte_end":8293681,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3672}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/utils.rs","byte_start":8293812,"byte_end":8293824,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3674}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8295805,"byte_end":8295814,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3696},{"krate":0,"index":3697}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297042,"byte_end":8297051,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3700},{"krate":0,"index":3701},{"krate":0,"index":3702},{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3705}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299791,"byte_end":8299800,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3708},{"krate":0,"index":3709}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8301254,"byte_end":8301263,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3713},{"krate":0,"index":3715}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8302185,"byte_end":8302194,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3718}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8302532,"byte_end":8302541,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3721}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309255,"byte_end":8309264,"line_start":118,"line_end":118,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3739},{"krate":0,"index":3740},{"krate":0,"index":3741},{"krate":0,"index":3742},{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3747},{"krate":0,"index":3748}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8315096,"byte_end":8315105,"line_start":302,"line_end":302,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3751},{"krate":0,"index":3752},{"krate":0,"index":3753}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8316003,"byte_end":8316012,"line_start":329,"line_end":329,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3756}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8316258,"byte_end":8316267,"line_start":338,"line_end":338,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3759}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8321063,"byte_end":8321073,"line_start":150,"line_end":150,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3782},{"krate":0,"index":3783}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323136,"byte_end":8323142,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803},{"krate":0,"index":3804},{"krate":0,"index":3805},{"krate":0,"index":3806}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326443,"byte_end":8326449,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3809}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326715,"byte_end":8326721,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3812},{"krate":0,"index":3813}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8327237,"byte_end":8327243,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3816},{"krate":0,"index":3817}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8327593,"byte_end":8327599,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3819},{"krate":0,"index":3820},{"krate":0,"index":3821},{"krate":0,"index":3822}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8328358,"byte_end":8328364,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3824},{"krate":0,"index":3825},{"krate":0,"index":3826}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8328888,"byte_end":8328894,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3830}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8330172,"byte_end":8330177,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3845}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8330296,"byte_end":8330301,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3847}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8330505,"byte_end":8330510,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3849},{"krate":0,"index":3851}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331695,"byte_end":8331701,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3865}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331820,"byte_end":8331826,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3867}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332811,"byte_end":8332815,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3881}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332934,"byte_end":8332938,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8334686,"byte_end":8334693,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4043},{"krate":0,"index":4044}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8337684,"byte_end":8337690,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4059},{"krate":0,"index":4061},{"krate":0,"index":4063}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8341093,"byte_end":8341099,"line_start":176,"line_end":176,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4153}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8343954,"byte_end":8343959,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4080}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8345975,"byte_end":8345980,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4087}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8348079,"byte_end":8348084,"line_start":203,"line_end":203,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4188}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8351415,"byte_end":8351421,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4115},{"krate":0,"index":4117},{"krate":0,"index":4119}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8354824,"byte_end":8354830,"line_start":176,"line_end":176,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4222}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363945,"byte_end":8363957,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4267},{"krate":0,"index":4268},{"krate":0,"index":4269},{"krate":0,"index":4273},{"krate":0,"index":4274},{"krate":0,"index":4275},{"krate":0,"index":4278},{"krate":0,"index":4281},{"krate":0,"index":4285},{"krate":0,"index":4288}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8371429,"byte_end":8371441,"line_start":292,"line_end":292,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4290}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8371877,"byte_end":8371889,"line_start":309,"line_end":309,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4292}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8372242,"byte_end":8372254,"line_start":320,"line_end":320,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4294}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8372353,"byte_end":8372365,"line_start":326,"line_end":326,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4296}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8372699,"byte_end":8372711,"line_start":336,"line_end":336,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4298}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374355,"byte_end":8374367,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4322},{"krate":0,"index":4326},{"krate":0,"index":4329},{"krate":0,"index":4330}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377399,"byte_end":8377411,"line_start":155,"line_end":155,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4332}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8378382,"byte_end":8378390,"line_start":182,"line_end":182,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4334},{"krate":0,"index":4335}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8378749,"byte_end":8378761,"line_start":194,"line_end":194,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4337}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8379114,"byte_end":8379126,"line_start":205,"line_end":205,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4339}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8379225,"byte_end":8379237,"line_start":211,"line_end":211,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4341}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8379421,"byte_end":8379433,"line_start":218,"line_end":218,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4343}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380632,"byte_end":8380642,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4366},{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4372},{"krate":0,"index":4373}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383974,"byte_end":8383984,"line_start":155,"line_end":155,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4375}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8384428,"byte_end":8384438,"line_start":175,"line_end":175,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4379},{"krate":0,"index":4380},{"krate":0,"index":4381}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8385460,"byte_end":8385470,"line_start":211,"line_end":211,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4387}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8385902,"byte_end":8385912,"line_start":228,"line_end":228,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4389}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8386290,"byte_end":8386300,"line_start":240,"line_end":240,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4391}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8386399,"byte_end":8386409,"line_start":246,"line_end":246,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4393}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8386585,"byte_end":8386595,"line_start":253,"line_end":253,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4395}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192309,"byte_end":8192314,"line_start":48,"line_end":48,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192360,"byte_end":8192365,"line_start":49,"line_end":49,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192381,"byte_end":8192386,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2969}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192765,"byte_end":8192770,"line_start":70,"line_end":70,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2972},{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2990}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193531,"byte_end":8193541,"line_start":101,"line_end":101,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2984}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8194607,"byte_end":8194617,"line_start":128,"line_end":128,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2987}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8197066,"byte_end":8197071,"line_start":221,"line_end":221,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8197191,"byte_end":8197197,"line_start":224,"line_end":224,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2997}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8197569,"byte_end":8197574,"line_start":237,"line_end":237,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3000}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8197685,"byte_end":8197690,"line_start":243,"line_end":243,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3003}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8197916,"byte_end":8197926,"line_start":252,"line_end":252,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8197976,"byte_end":8197986,"line_start":253,"line_end":253,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8198023,"byte_end":8198033,"line_start":255,"line_end":255,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3015}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8198389,"byte_end":8198399,"line_start":265,"line_end":265,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3018}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8198565,"byte_end":8198575,"line_start":271,"line_end":271,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3021}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8198707,"byte_end":8198717,"line_start":277,"line_end":277,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3024},{"krate":0,"index":3025}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8198855,"byte_end":8198865,"line_start":285,"line_end":285,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3028}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200505,"byte_end":8200511,"line_start":59,"line_end":59,"column_start":40,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200564,"byte_end":8200570,"line_start":60,"line_end":60,"column_start":47,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200586,"byte_end":8200592,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3064}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201031,"byte_end":8201037,"line_start":82,"line_end":82,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3067},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3102}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201703,"byte_end":8201713,"line_start":109,"line_end":109,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3078},{"krate":0,"index":3079}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8202823,"byte_end":8202833,"line_start":136,"line_end":136,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3082}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205674,"byte_end":8205685,"line_start":234,"line_end":234,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3095},{"krate":0,"index":3096}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8206798,"byte_end":8206809,"line_start":261,"line_end":261,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3099}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8209238,"byte_end":8209244,"line_start":348,"line_end":348,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3105}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8209364,"byte_end":8209370,"line_start":351,"line_end":351,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3109}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8209744,"byte_end":8209750,"line_start":364,"line_end":364,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3112}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8209863,"byte_end":8209869,"line_start":370,"line_end":370,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3115}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8210108,"byte_end":8210123,"line_start":379,"line_end":379,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8210173,"byte_end":8210188,"line_start":380,"line_end":380,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8210225,"byte_end":8210240,"line_start":382,"line_end":382,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3127}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8210601,"byte_end":8210616,"line_start":393,"line_end":393,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3130}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8210782,"byte_end":8210797,"line_start":399,"line_end":399,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8210929,"byte_end":8210944,"line_start":405,"line_end":405,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3136},{"krate":0,"index":3137}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8211207,"byte_end":8211223,"line_start":416,"line_end":416,"column_start":40,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8211273,"byte_end":8211289,"line_start":417,"line_end":417,"column_start":40,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8211326,"byte_end":8211342,"line_start":419,"line_end":419,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8211740,"byte_end":8211756,"line_start":432,"line_end":432,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8211922,"byte_end":8211938,"line_start":438,"line_end":438,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3155}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8212070,"byte_end":8212086,"line_start":444,"line_end":444,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3158},{"krate":0,"index":3159}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8212224,"byte_end":8212240,"line_start":452,"line_end":452,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3162}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391909,"byte_end":8391916,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4443},{"krate":0,"index":4444}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394566,"byte_end":8394583,"line_start":151,"line_end":151,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4448}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397347,"byte_end":8397364,"line_start":15,"line_end":15,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4464}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398525,"byte_end":8398532,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398557,"byte_end":8398564,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398586,"byte_end":8398593,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4470}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398660,"byte_end":8398667,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4472},{"krate":0,"index":4473},{"krate":0,"index":4478},{"krate":0,"index":4481},{"krate":0,"index":4487},{"krate":0,"index":4492},{"krate":0,"index":4498},{"krate":0,"index":4499}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8407417,"byte_end":8407424,"line_start":362,"line_end":362,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4501}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8408216,"byte_end":8408227,"line_start":384,"line_end":384,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4513},{"krate":0,"index":4514}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8409135,"byte_end":8409146,"line_start":411,"line_end":411,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4519}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412017,"byte_end":8412023,"line_start":110,"line_end":110,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4552},{"krate":0,"index":4570},{"krate":0,"index":4571},{"krate":0,"index":4572},{"krate":0,"index":4573},{"krate":0,"index":4574}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412950,"byte_end":8412960,"line_start":145,"line_end":145,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412999,"byte_end":8413009,"line_start":147,"line_end":147,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4565},{"krate":0,"index":4566}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8414426,"byte_end":8414436,"line_start":182,"line_end":182,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4569}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8417087,"byte_end":8417093,"line_start":300,"line_end":300,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4577}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8417366,"byte_end":8417372,"line_start":309,"line_end":309,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4580}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8417767,"byte_end":8417773,"line_start":324,"line_end":324,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4583}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419093,"byte_end":8419101,"line_start":374,"line_end":374,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4590},{"krate":0,"index":4605},{"krate":0,"index":4606},{"krate":0,"index":4607},{"krate":0,"index":4608},{"krate":0,"index":4609}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8420157,"byte_end":8420167,"line_start":411,"line_end":411,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4600},{"krate":0,"index":4601}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8420558,"byte_end":8420568,"line_start":424,"line_end":424,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4604}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8423172,"byte_end":8423180,"line_start":543,"line_end":543,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4612}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8423659,"byte_end":8423667,"line_start":557,"line_end":557,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4615}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8424093,"byte_end":8424101,"line_start":573,"line_end":573,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4618},{"krate":0,"index":4619}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8424492,"byte_end":8424500,"line_start":588,"line_end":588,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4622}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8427696,"byte_end":8427703,"line_start":688,"line_end":688,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8427740,"byte_end":8427747,"line_start":689,"line_end":689,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8427772,"byte_end":8427779,"line_start":690,"line_end":690,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8427795,"byte_end":8427802,"line_start":692,"line_end":692,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4651},{"krate":0,"index":4652},{"krate":0,"index":4653},{"krate":0,"index":4654},{"krate":0,"index":4655},{"krate":0,"index":4656},{"krate":0,"index":4657},{"krate":0,"index":4658}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8438121,"byte_end":8438128,"line_start":966,"line_end":966,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4661}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8439189,"byte_end":8439201,"line_start":1004,"line_end":1004,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8439227,"byte_end":8439239,"line_start":1006,"line_end":1006,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4666}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8439494,"byte_end":8439506,"line_start":1015,"line_end":1015,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4669}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8440111,"byte_end":8440123,"line_start":1036,"line_end":1036,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8440145,"byte_end":8440157,"line_start":1038,"line_end":1038,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4672}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8440620,"byte_end":8440629,"line_start":1053,"line_end":1053,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8440651,"byte_end":8440660,"line_start":1055,"line_end":1055,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4675}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/waker_set.rs","byte_start":8213847,"byte_end":8213855,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3195}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/waker_set.rs","byte_start":8218705,"byte_end":8218709,"line_start":215,"line_end":215,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3200}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/waker_set.rs","byte_start":8219275,"byte_end":8219279,"line_start":235,"line_end":235,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3202},{"krate":0,"index":3203}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/waker_set.rs","byte_start":8219433,"byte_end":8219437,"line_start":244,"line_end":244,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3205}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448737,"byte_end":8448747,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4823},{"krate":0,"index":4824},{"krate":0,"index":4825}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8451326,"byte_end":8451336,"line_start":117,"line_end":117,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5768}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8451971,"byte_end":8451979,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4850},{"krate":0,"index":4854}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455942,"byte_end":8455950,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4856}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8456103,"byte_end":8456111,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4858}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8456266,"byte_end":8456274,"line_start":170,"line_end":170,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5771}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458273,"byte_end":8458277,"line_start":69,"line_end":69,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":4899},{"krate":0,"index":4900},{"krate":0,"index":4906},{"krate":0,"index":4912},{"krate":0,"index":4917},{"krate":0,"index":4922},{"krate":0,"index":4927},{"krate":0,"index":4931}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8466123,"byte_end":8466127,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4936}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8466606,"byte_end":8466610,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4938}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8466724,"byte_end":8466728,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4940}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8467209,"byte_end":8467213,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4944},{"krate":0,"index":4945},{"krate":0,"index":4946}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8468377,"byte_end":8468381,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4953}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8468870,"byte_end":8468874,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4957}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8469063,"byte_end":8469067,"line_start":418,"line_end":418,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5778}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8469183,"byte_end":8469187,"line_start":424,"line_end":424,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5780}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8469331,"byte_end":8469335,"line_start":430,"line_end":430,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5782}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8470455,"byte_end":8470459,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8470496,"byte_end":8470500,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8470767,"byte_end":8470771,"line_start":485,"line_end":485,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4973},{"krate":0,"index":4974}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8472006,"byte_end":8472015,"line_start":522,"line_end":522,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8472052,"byte_end":8472061,"line_start":523,"line_end":523,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8472077,"byte_end":8472086,"line_start":525,"line_end":525,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4986}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8472477,"byte_end":8472486,"line_start":538,"line_end":538,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4990}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8472794,"byte_end":8472803,"line_start":550,"line_end":550,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4993},{"krate":0,"index":4994}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8472929,"byte_end":8472938,"line_start":558,"line_end":558,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4997}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8474499,"byte_end":8474508,"line_start":611,"line_end":611,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5014},{"krate":0,"index":5015},{"krate":0,"index":5017},{"krate":0,"index":5018},{"krate":0,"index":5019},{"krate":0,"index":5021},{"krate":0,"index":5023}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497589,"byte_end":8497600,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5053},{"krate":0,"index":5054},{"krate":0,"index":5055},{"krate":0,"index":5056},{"krate":0,"index":5057},{"krate":0,"index":5058},{"krate":0,"index":5059},{"krate":0,"index":5060}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8504389,"byte_end":8504400,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5066}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8504545,"byte_end":8504556,"line_start":303,"line_end":303,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5794},{"krate":0,"index":5795}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8510241,"byte_end":8510248,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5099}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8510447,"byte_end":8510454,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5101},{"krate":0,"index":5102}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525400,"byte_end":8525409,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5212},{"krate":0,"index":5213}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525614,"byte_end":8525623,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526369,"byte_end":8526379,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5223}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526888,"byte_end":8526898,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5225}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526991,"byte_end":8527001,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5227}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8527107,"byte_end":8527117,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5230},{"krate":0,"index":5231}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8527274,"byte_end":8527284,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5234}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8527409,"byte_end":8527419,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8527449,"byte_end":8527458,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5237}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528089,"byte_end":8528093,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5248}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528566,"byte_end":8528570,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5251},{"krate":0,"index":5252}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528732,"byte_end":8528736,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5254}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528877,"byte_end":8528888,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5260}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8529185,"byte_end":8529189,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5262}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8529282,"byte_end":8529286,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5264}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8529403,"byte_end":8529407,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5267}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8529554,"byte_end":8529558,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531158,"byte_end":8531162,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5290},{"krate":0,"index":5292},{"krate":0,"index":5293},{"krate":0,"index":5294},{"krate":0,"index":5295},{"krate":0,"index":5296},{"krate":0,"index":5297},{"krate":0,"index":5298},{"krate":0,"index":5299},{"krate":0,"index":5301},{"krate":0,"index":5302},{"krate":0,"index":5303},{"krate":0,"index":5305},{"krate":0,"index":5307},{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5311},{"krate":0,"index":5313},{"krate":0,"index":5315},{"krate":0,"index":5317},{"krate":0,"index":5318},{"krate":0,"index":5319},{"krate":0,"index":5320},{"krate":0,"index":5323},{"krate":0,"index":5326},{"krate":0,"index":5329},{"krate":0,"index":5332},{"krate":0,"index":5335},{"krate":0,"index":5338},{"krate":0,"index":5342},{"krate":0,"index":5346}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8556324,"byte_end":8556327,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5348}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8556556,"byte_end":8556559,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5350}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8556854,"byte_end":8556856,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5352}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557059,"byte_end":8557063,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5354},{"krate":0,"index":5355}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557187,"byte_end":8557191,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5357}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557285,"byte_end":8557289,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5359}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557367,"byte_end":8557372,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5361}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557468,"byte_end":8557471,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5364}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557597,"byte_end":8557600,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5366}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557700,"byte_end":8557708,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5368}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557889,"byte_end":8557895,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5372}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557984,"byte_end":8557991,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5374}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8561139,"byte_end":8561143,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5394}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8561250,"byte_end":8561254,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5396}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8561350,"byte_end":8561357,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5398}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562133,"byte_end":8562140,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5421},{"krate":0,"index":5422},{"krate":0,"index":5423},{"krate":0,"index":5425},{"krate":0,"index":5426},{"krate":0,"index":5428},{"krate":0,"index":5430},{"krate":0,"index":5431}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567386,"byte_end":8567393,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5433}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567501,"byte_end":8567504,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5435}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567604,"byte_end":8567607,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5437}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567758,"byte_end":8567765,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5440}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567882,"byte_end":8567889,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5442}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567998,"byte_end":8568006,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5444}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8568115,"byte_end":8568122,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5446}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8568228,"byte_end":8568235,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5448},{"krate":0,"index":5449}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8568414,"byte_end":8568421,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5452}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8568616,"byte_end":8568623,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5456}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8568780,"byte_end":8568787,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5460},{"krate":0,"index":5461}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8568908,"byte_end":8568915,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5463}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8569007,"byte_end":8569010,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5466}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8569142,"byte_end":8569145,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5469}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8569296,"byte_end":8569303,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5472}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8569415,"byte_end":8569418,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5474}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8569641,"byte_end":8569643,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5476}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8569858,"byte_end":8569865,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5478}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8570010,"byte_end":8570017,"line_start":322,"line_end":322,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5481}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8570486,"byte_end":8570493,"line_start":340,"line_end":340,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5488}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8570870,"byte_end":8570877,"line_start":355,"line_end":355,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5493}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8571006,"byte_end":8571013,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5495}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8571118,"byte_end":8571125,"line_start":367,"line_end":367,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5497}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8576001,"byte_end":8576020,"line_start":74,"line_end":74,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5562}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8576292,"byte_end":8576311,"line_start":83,"line_end":83,"column_start":49,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":5566},{"krate":0,"index":5567}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8577035,"byte_end":8577045,"line_start":104,"line_end":104,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5569},{"krate":0,"index":5570}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8577340,"byte_end":8577352,"line_start":117,"line_end":117,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5572},{"krate":0,"index":5573}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8577717,"byte_end":8577729,"line_start":132,"line_end":132,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5576},{"krate":0,"index":5577}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8581448,"byte_end":8581454,"line_start":271,"line_end":271,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5607},{"krate":0,"index":5608}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583346,"byte_end":8583357,"line_start":55,"line_end":55,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5629},{"krate":0,"index":5634},{"krate":0,"index":5637},{"krate":0,"index":5638}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587847,"byte_end":8587855,"line_start":190,"line_end":190,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5641},{"krate":0,"index":5642}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8588219,"byte_end":8588230,"line_start":202,"line_end":202,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5644}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8588661,"byte_end":8588672,"line_start":216,"line_end":216,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6180}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8588801,"byte_end":8588812,"line_start":222,"line_end":222,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6182}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8588971,"byte_end":8588982,"line_start":228,"line_end":228,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6184}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591550,"byte_end":8591559,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5662},{"krate":0,"index":5667},{"krate":0,"index":5668},{"krate":0,"index":5669},{"krate":0,"index":5670},{"krate":0,"index":5671},{"krate":0,"index":5674},{"krate":0,"index":5675},{"krate":0,"index":5676}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598728,"byte_end":8598737,"line_start":286,"line_end":286,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5678},{"krate":0,"index":5679}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8599405,"byte_end":8599414,"line_start":314,"line_end":314,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5683},{"krate":0,"index":5684},{"krate":0,"index":5685},{"krate":0,"index":5686}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8600670,"byte_end":8600679,"line_start":358,"line_end":358,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5692}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8601106,"byte_end":8601115,"line_start":372,"line_end":372,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6197}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8601244,"byte_end":8601253,"line_start":378,"line_end":378,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6199}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8601408,"byte_end":8601417,"line_start":384,"line_end":384,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6201}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Inherent","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604124,"byte_end":8604133,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5703},{"krate":0,"index":5708},{"krate":0,"index":5710},{"krate":0,"index":5712},{"krate":0,"index":5717},{"krate":0,"index":5720},{"krate":0,"index":5726},{"krate":0,"index":5729},{"krate":0,"index":5732},{"krate":0,"index":5733},{"krate":0,"index":5734},{"krate":0,"index":5735},{"krate":0,"index":5736},{"krate":0,"index":5737},{"krate":0,"index":5738},{"krate":0,"index":5739},{"krate":0,"index":5740},{"krate":0,"index":5741},{"krate":0,"index":5742},{"krate":0,"index":5743},{"krate":0,"index":5744},{"krate":0,"index":5745}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8618629,"byte_end":8618638,"line_start":481,"line_end":481,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5747}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8619055,"byte_end":8619064,"line_start":495,"line_end":495,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6212}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8619193,"byte_end":8619202,"line_start":501,"line_end":501,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6214}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8619357,"byte_end":8619366,"line_start":507,"line_end":507,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6216}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/vec/extend.rs","byte_start":8622908,"byte_end":8622911,"line_start":6,"line_end":6,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6258}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/vec/from_stream.rs","byte_start":8623398,"byte_end":8623401,"line_start":9,"line_end":9,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6274}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/vec/from_stream.rs","byte_start":8623831,"byte_end":8623834,"line_start":27,"line_end":27,"column_start":38,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6281}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/vec/from_stream.rs","byte_start":8624167,"byte_end":8624170,"line_start":40,"line_end":40,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6287}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/vec/from_stream.rs","byte_start":8624499,"byte_end":8624501,"line_start":53,"line_end":53,"column_start":27,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6293}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/vec/from_stream.rs","byte_start":8624818,"byte_end":8624821,"line_start":66,"line_end":66,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6299}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/result/from_stream.rs","byte_start":8625490,"byte_end":8625496,"line_start":6,"line_end":6,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6315}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/result/product.rs","byte_start":8643722,"byte_end":8643728,"line_start":6,"line_end":6,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6653}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/result/sum.rs","byte_start":8645991,"byte_end":8645997,"line_start":6,"line_end":6,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6669}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/option/from_stream.rs","byte_start":8627852,"byte_end":8627858,"line_start":7,"line_end":7,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6333}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/option/product.rs","byte_start":8648256,"byte_end":8648262,"line_start":7,"line_end":7,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6685}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/option/sum.rs","byte_start":8650063,"byte_end":8650069,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6700}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/extend.rs","byte_start":8629242,"byte_end":8629248,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6348}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/extend.rs","byte_start":8629716,"byte_end":8629722,"line_start":25,"line_end":25,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6354}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/extend.rs","byte_start":8630150,"byte_end":8630156,"line_start":42,"line_end":42,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6360}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/extend.rs","byte_start":8630581,"byte_end":8630587,"line_start":59,"line_end":59,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6365}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/extend.rs","byte_start":8631022,"byte_end":8631028,"line_start":76,"line_end":76,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6371}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/from_stream.rs","byte_start":8631570,"byte_end":8631576,"line_start":7,"line_end":7,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6384}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/from_stream.rs","byte_start":8631958,"byte_end":8631964,"line_start":22,"line_end":22,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6390}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/from_stream.rs","byte_start":8632349,"byte_end":8632355,"line_start":37,"line_end":37,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6396}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/from_stream.rs","byte_start":8632734,"byte_end":8632740,"line_start":52,"line_end":52,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6401}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/from_stream.rs","byte_start":8633128,"byte_end":8633134,"line_start":67,"line_end":67,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6407}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/binary_heap/extend.rs","byte_start":8634289,"byte_end":8634299,"line_start":7,"line_end":7,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6423}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/binary_heap/from_stream.rs","byte_start":8634766,"byte_end":8634776,"line_start":7,"line_end":7,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6437}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/btree_map/extend.rs","byte_start":8635393,"byte_end":8635401,"line_start":7,"line_end":7,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6453}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/btree_map/from_stream.rs","byte_start":8635836,"byte_end":8635844,"line_start":7,"line_end":7,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6468}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/btree_set/extend.rs","byte_start":8636459,"byte_end":8636467,"line_start":7,"line_end":7,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6483}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/btree_set/from_stream.rs","byte_start":8636884,"byte_end":8636892,"line_start":7,"line_end":7,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6497}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/hash_map/extend.rs","byte_start":8637590,"byte_end":8637597,"line_start":8,"line_end":8,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6517}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/hash_map/from_stream.rs","byte_start":8638791,"byte_end":8638798,"line_start":8,"line_end":8,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6536}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/hash_set/extend.rs","byte_start":8639578,"byte_end":8639585,"line_start":8,"line_end":8,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6555}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/hash_set/from_stream.rs","byte_start":8640954,"byte_end":8640961,"line_start":8,"line_end":8,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6573}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/linked_list/extend.rs","byte_start":8641674,"byte_end":8641684,"line_start":7,"line_end":7,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6588}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/linked_list/from_stream.rs","byte_start":8642105,"byte_end":8642115,"line_start":7,"line_end":7,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6602}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/vec_deque/extend.rs","byte_start":8642769,"byte_end":8642777,"line_start":7,"line_end":7,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6617}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/vec_deque/from_stream.rs","byte_start":8643242,"byte_end":8643250,"line_start":7,"line_end":7,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6631}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":10517,"byte_end":10521,"line_start":284,"line_end":284,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":45}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":10535,"byte_end":10541,"line_start":285,"line_end":285,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":46}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":10555,"byte_end":10561,"line_start":286,"line_end":286,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":78}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":10589,"byte_end":10591,"line_start":290,"line_end":290,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":2928}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/mod.rs","byte_start":8181783,"byte_end":8181790,"line_start":290,"line_end":290,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":3236}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":10605,"byte_end":10607,"line_start":291,"line_end":291,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":2930}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/mod.rs","byte_start":8182741,"byte_end":8182745,"line_start":4,"line_end":4,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4223}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/mod.rs","byte_start":8355230,"byte_end":8355232,"line_start":4,"line_end":4,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4224}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/mod.rs","byte_start":8355264,"byte_end":8355266,"line_start":8,"line_end":8,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4230}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/mod.rs","byte_start":8355280,"byte_end":8355283,"line_start":9,"line_end":9,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":4240}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":10621,"byte_end":10628,"line_start":292,"line_end":292,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":2931}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":10642,"byte_end":10646,"line_start":293,"line_end":293,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2932}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":10717,"byte_end":10719,"line_start":298,"line_end":298,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":4744}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":10733,"byte_end":10737,"line_start":299,"line_end":299,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5206}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":10751,"byte_end":10754,"line_start":300,"line_end":300,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":5511}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":10849,"byte_end":10852,"line_start":306,"line_end":306,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":6217}},{"kind":"Mod","span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/lib.rs","byte_start":10905,"byte_end":10912,"line_start":308,"line_end":308,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":6219}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/utils.rs","byte_start":11372,"byte_end":11376,"line_start":11,"line_end":11,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":9},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/yield_now.rs","byte_start":7932942,"byte_end":7932950,"line_start":36,"line_end":36,"column_start":17,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1115},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7934870,"byte_end":7934877,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/builder.rs","byte_start":7940164,"byte_end":7940181,"line_start":191,"line_end":191,"column_start":28,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":9584},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7941853,"byte_end":7941863,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/join_handle.rs","byte_start":7942919,"byte_end":7942929,"line_start":70,"line_end":70,"column_start":20,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1324},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task.rs","byte_start":7946022,"byte_end":7946026,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task.rs","byte_start":7946636,"byte_end":7946640,"line_start":42,"line_end":42,"column_start":21,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1331},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7947194,"byte_end":7947200,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_id.rs","byte_start":7947611,"byte_end":7947617,"line_start":32,"line_end":32,"column_start":23,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1336},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7948207,"byte_end":7948215,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7952067,"byte_end":7952078,"line_start":148,"line_end":148,"column_start":21,"column_end":32},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7952222,"byte_end":7952233,"line_start":154,"line_end":154,"column_start":23,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7952398,"byte_end":7952409,"line_start":160,"line_end":160,"column_start":16,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1361},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_local.rs","byte_start":7952777,"byte_end":7952786,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_locals_wrapper.rs","byte_start":7954638,"byte_end":7954655,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/task/task_locals_wrapper.rs","byte_start":7956068,"byte_end":7956085,"line_start":77,"line_end":77,"column_start":15,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/delay.rs","byte_start":8079805,"byte_end":8079816,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":9547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/delay.rs","byte_start":8079996,"byte_end":8080007,"line_start":29,"line_end":29,"column_start":28,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":9547},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/flatten.rs","byte_start":8080783,"byte_end":8080796,"line_start":20,"line_end":20,"column_start":18,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/flatten.rs","byte_start":8080984,"byte_end":8080997,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1423},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/race.rs","byte_start":8082300,"byte_end":8082304,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":9502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/race.rs","byte_start":8082558,"byte_end":8082562,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":9502},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/try_race.rs","byte_start":8083555,"byte_end":8083562,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":9457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/try_race.rs","byte_start":8083822,"byte_end":8083829,"line_start":35,"line_end":35,"column_start":29,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":9457},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/join.rs","byte_start":8085301,"byte_end":8085305,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":9412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/join.rs","byte_start":8085539,"byte_end":8085543,"line_start":35,"line_end":35,"column_start":23,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":9412},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/try_join.rs","byte_start":8086721,"byte_end":8086728,"line_start":22,"line_end":22,"column_start":12,"column_end":19},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":9367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/try_join.rs","byte_start":8086971,"byte_end":8086978,"line_start":35,"line_end":35,"column_start":32,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":9367},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/future/mod.rs","byte_start":8066042,"byte_end":8066048,"line_start":61,"line_end":61,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":8192},"to":{"krate":0,"index":1544}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/pending.rs","byte_start":8088908,"byte_end":8088915,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1577},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089808,"byte_end":8089814,"line_start":38,"line_end":38,"column_start":19,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1595},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/poll_fn.rs","byte_start":8089844,"byte_end":8089850,"line_start":40,"line_end":40,"column_start":23,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1595},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7785034,"byte_end":7785047,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":9330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7785274,"byte_end":7785287,"line_start":59,"line_end":59,"column_start":28,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":9330},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7785923,"byte_end":7785935,"line_start":80,"line_end":80,"column_start":16,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1610},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/timeout.rs","byte_start":7785962,"byte_end":7785974,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1610},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/into_future.rs","byte_start":8091501,"byte_end":8091502,"line_start":46,"line_end":46,"column_start":32,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1633},"to":{"krate":0,"index":1628}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/maybe_done.rs","byte_start":8092315,"byte_end":8092324,"line_start":27,"line_end":27,"column_start":19,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/future/maybe_done.rs","byte_start":8093577,"byte_end":8093586,"line_start":65,"line_end":65,"column_start":30,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1654},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/all.rs","byte_start":7868370,"byte_end":7868379,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/all.rs","byte_start":7868586,"byte_end":7868595,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/all.rs","byte_start":7868635,"byte_end":7868644,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/any.rs","byte_start":7869725,"byte_end":7869734,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/any.rs","byte_start":7869941,"byte_end":7869950,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/any.rs","byte_start":7869990,"byte_end":7869999,"line_start":28,"line_end":28,"column_start":23,"column_end":32},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":138},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/chain.rs","byte_start":7871369,"byte_end":7871374,"line_start":27,"line_end":27,"column_start":28,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":9309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/chain.rs","byte_start":7871592,"byte_end":7871597,"line_start":36,"line_end":36,"column_start":55,"column_end":60},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":9309},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cloned.rs","byte_start":7872635,"byte_end":7872641,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":9267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cloned.rs","byte_start":7872753,"byte_end":7872759,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":9267},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cmp.rs","byte_start":7873710,"byte_end":7873719,"line_start":27,"line_end":27,"column_start":28,"column_end":37},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":9192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cmp.rs","byte_start":7873948,"byte_end":7873957,"line_start":38,"line_end":38,"column_start":39,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":9192},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/copied.rs","byte_start":7876256,"byte_end":7876262,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":9178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/copied.rs","byte_start":7876374,"byte_end":7876380,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":9178},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cycle.rs","byte_start":7876963,"byte_end":7876968,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cycle.rs","byte_start":7877178,"byte_end":7877183,"line_start":26,"line_end":26,"column_start":18,"column_end":23},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1667},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/cycle.rs","byte_start":7877319,"byte_end":7877324,"line_start":34,"line_end":34,"column_start":20,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1667},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/enumerate.rs","byte_start":7878225,"byte_end":7878234,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":9139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/enumerate.rs","byte_start":7878341,"byte_end":7878350,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":9139},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/eq.rs","byte_start":7879366,"byte_end":7879374,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":9071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/eq.rs","byte_start":7879588,"byte_end":7879596,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":9071},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/filter.rs","byte_start":7880865,"byte_end":7880871,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":9050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/filter.rs","byte_start":7881036,"byte_end":7881042,"line_start":33,"line_end":33,"column_start":23,"column_end":29},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":9050},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/filter_map.rs","byte_start":7881839,"byte_end":7881848,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":9001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/filter_map.rs","byte_start":7881967,"byte_end":7881976,"line_start":23,"line_end":23,"column_start":26,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":9001},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find.rs","byte_start":7882815,"byte_end":7882825,"line_start":14,"line_end":14,"column_start":16,"column_end":26},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find.rs","byte_start":7882959,"byte_end":7882969,"line_start":20,"line_end":20,"column_start":29,"column_end":39},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find.rs","byte_start":7883010,"byte_end":7883020,"line_start":22,"line_end":22,"column_start":27,"column_end":37},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find_map.rs","byte_start":7883814,"byte_end":7883827,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find_map.rs","byte_start":7883961,"byte_end":7883974,"line_start":20,"line_end":20,"column_start":29,"column_end":42},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/find_map.rs","byte_start":7884018,"byte_end":7884031,"line_start":22,"line_end":22,"column_start":30,"column_end":43},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/fold.rs","byte_start":7884944,"byte_end":7884954,"line_start":19,"line_end":19,"column_start":15,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":8945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/fold.rs","byte_start":7885147,"byte_end":7885157,"line_start":29,"line_end":29,"column_start":26,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":8945},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/for_each.rs","byte_start":7886117,"byte_end":7886130,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":8866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/for_each.rs","byte_start":7886279,"byte_end":7886292,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":8866},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/fuse.rs","byte_start":7887323,"byte_end":7887327,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":8846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/fuse.rs","byte_start":7887482,"byte_end":7887486,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":8846},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/ge.rs","byte_start":7888509,"byte_end":7888517,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":8782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/ge.rs","byte_start":7888725,"byte_end":7888733,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":8782},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/gt.rs","byte_start":7889742,"byte_end":7889750,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":8741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/gt.rs","byte_start":7889958,"byte_end":7889966,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":8741},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/inspect.rs","byte_start":7890934,"byte_end":7890941,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":8720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/inspect.rs","byte_start":7891090,"byte_end":7891097,"line_start":33,"line_end":33,"column_start":23,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":8720},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/last.rs","byte_start":7891828,"byte_end":7891838,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":8647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/last.rs","byte_start":7891954,"byte_end":7891964,"line_start":25,"line_end":25,"column_start":20,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":8647},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/le.rs","byte_start":7893082,"byte_end":7893090,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":8606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/le.rs","byte_start":7893298,"byte_end":7893306,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":8606},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/lt.rs","byte_start":7894325,"byte_end":7894333,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":8565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/lt.rs","byte_start":7894541,"byte_end":7894549,"line_start":34,"line_end":34,"column_start":39,"column_end":47},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":8565},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/map.rs","byte_start":7895282,"byte_end":7895285,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":8544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/map.rs","byte_start":7895437,"byte_end":7895440,"line_start":27,"line_end":27,"column_start":26,"column_end":29},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":8544},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/max.rs","byte_start":7896125,"byte_end":7896134,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":8471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/max.rs","byte_start":7896249,"byte_end":7896258,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":8471},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/max_by.rs","byte_start":7897430,"byte_end":7897441,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":8414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/max_by.rs","byte_start":7897628,"byte_end":7897639,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":8414},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/max_by_key.rs","byte_start":7898861,"byte_end":7898875,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":8357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/max_by_key.rs","byte_start":7899060,"byte_end":7899074,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":8357},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/min.rs","byte_start":7900480,"byte_end":7900489,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":8312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/min.rs","byte_start":7900604,"byte_end":7900613,"line_start":26,"line_end":26,"column_start":20,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":8312},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/min_by.rs","byte_start":7901782,"byte_end":7901793,"line_start":21,"line_end":21,"column_start":15,"column_end":26},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":8255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/min_by.rs","byte_start":7901980,"byte_end":7901991,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":8255},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/min_by_key.rs","byte_start":7903239,"byte_end":7903253,"line_start":21,"line_end":21,"column_start":15,"column_end":29},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":8198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/min_by_key.rs","byte_start":7903438,"byte_end":7903452,"line_start":31,"line_end":31,"column_start":23,"column_end":37},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":8198},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/ne.rs","byte_start":7905021,"byte_end":7905029,"line_start":24,"line_end":24,"column_start":28,"column_end":36},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":8153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/ne.rs","byte_start":7905243,"byte_end":7905251,"line_start":36,"line_end":36,"column_start":39,"column_end":47},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":8153},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/next.rs","byte_start":7906307,"byte_end":7906317,"line_start":13,"line_end":13,"column_start":45,"column_end":55},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":703},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/nth.rs","byte_start":7906764,"byte_end":7906773,"line_start":14,"line_end":14,"column_start":26,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":718},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/nth.rs","byte_start":7906797,"byte_end":7906806,"line_start":16,"line_end":16,"column_start":13,"column_end":22},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/nth.rs","byte_start":7906936,"byte_end":7906945,"line_start":22,"line_end":22,"column_start":24,"column_end":33},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":718},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/partial_cmp.rs","byte_start":7908158,"byte_end":7908174,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":8100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/partial_cmp.rs","byte_start":7908403,"byte_end":7908419,"line_start":38,"line_end":38,"column_start":39,"column_end":55},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":8100},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/position.rs","byte_start":7910802,"byte_end":7910816,"line_start":15,"line_end":15,"column_start":26,"column_end":40},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":761},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/position.rs","byte_start":7910846,"byte_end":7910860,"line_start":17,"line_end":17,"column_start":16,"column_end":30},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/position.rs","byte_start":7911063,"byte_end":7911077,"line_start":27,"line_end":27,"column_start":27,"column_end":41},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":761},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/scan.rs","byte_start":7912275,"byte_end":7912279,"line_start":24,"line_end":24,"column_start":16,"column_end":20},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":8075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/scan.rs","byte_start":7912484,"byte_end":7912488,"line_start":33,"line_end":33,"column_start":30,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":8075},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/skip.rs","byte_start":7913473,"byte_end":7913477,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":8025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/skip.rs","byte_start":7913591,"byte_end":7913595,"line_start":30,"line_end":30,"column_start":20,"column_end":24},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":8025},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/skip_while.rs","byte_start":7914715,"byte_end":7914724,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":7981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/skip_while.rs","byte_start":7914906,"byte_end":7914915,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":7981},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/step_by.rs","byte_start":7916258,"byte_end":7916264,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":7933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/step_by.rs","byte_start":7916465,"byte_end":7916471,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":7933},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/take.rs","byte_start":7917674,"byte_end":7917678,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":7889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/take.rs","byte_start":7917849,"byte_end":7917853,"line_start":33,"line_end":33,"column_start":28,"column_end":32},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":7889},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/take_while.rs","byte_start":7918898,"byte_end":7918907,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":7845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/take_while.rs","byte_start":7919072,"byte_end":7919081,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":7845},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_fold.rs","byte_start":7919935,"byte_end":7919948,"line_start":15,"line_end":15,"column_start":29,"column_end":42},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":885},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_fold.rs","byte_start":7919984,"byte_end":7919997,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_fold.rs","byte_start":7920209,"byte_end":7920222,"line_start":27,"line_end":27,"column_start":33,"column_end":46},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":885},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_for_each.rs","byte_start":7921252,"byte_end":7921268,"line_start":14,"line_end":14,"column_start":26,"column_end":42},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":919},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_for_each.rs","byte_start":7921298,"byte_end":7921314,"line_start":16,"line_end":16,"column_start":16,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/try_for_each.rs","byte_start":7921449,"byte_end":7921465,"line_start":22,"line_end":22,"column_start":30,"column_end":46},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":919},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/zip.rs","byte_start":7922727,"byte_end":7922730,"line_start":26,"line_end":26,"column_start":60,"column_end":63},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":7768},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/zip.rs","byte_start":7922970,"byte_end":7922973,"line_start":35,"line_end":35,"column_start":20,"column_end":23},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":7768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/zip.rs","byte_start":7923175,"byte_end":7923178,"line_start":45,"line_end":45,"column_start":39,"column_end":42},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":7768},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/count.rs","byte_start":8124218,"byte_end":8124229,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":7731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/count.rs","byte_start":8124340,"byte_end":8124351,"line_start":27,"line_end":27,"column_start":20,"column_end":31},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":7731},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/merge.rs","byte_start":8125568,"byte_end":8125573,"line_start":30,"line_end":30,"column_start":28,"column_end":33},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":7710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/merge.rs","byte_start":8125756,"byte_end":8125761,"line_start":39,"line_end":39,"column_start":26,"column_end":31},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":7710},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/flatten.rs","byte_start":8127390,"byte_end":8127397,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":7645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/flatten.rs","byte_start":8127600,"byte_end":8127607,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":7645},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/flatten.rs","byte_start":8128452,"byte_end":8128459,"line_start":69,"line_end":69,"column_start":27,"column_end":34},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":7645},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/flat_map.rs","byte_start":8129459,"byte_end":8129466,"line_start":27,"line_end":27,"column_start":15,"column_end":22},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":7592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/flat_map.rs","byte_start":8129721,"byte_end":8129728,"line_start":41,"line_end":41,"column_start":26,"column_end":33},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":7592},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/partition.rs","byte_start":8130970,"byte_end":8130985,"line_start":21,"line_end":21,"column_start":24,"column_end":39},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":7564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/partition.rs","byte_start":8131193,"byte_end":8131208,"line_start":31,"line_end":31,"column_start":26,"column_end":41},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":7564},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/timeout.rs","byte_start":8132426,"byte_end":8132433,"line_start":24,"line_end":24,"column_start":17,"column_end":24},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":7513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/timeout.rs","byte_start":8132603,"byte_end":8132610,"line_start":32,"line_end":32,"column_start":28,"column_end":35},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":7513},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/timeout.rs","byte_start":8133431,"byte_end":8133443,"line_start":57,"line_end":57,"column_start":16,"column_end":28},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1880},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/timeout.rs","byte_start":8133470,"byte_end":8133482,"line_start":59,"line_end":59,"column_start":23,"column_end":35},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1880},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/throttle.rs","byte_start":8134366,"byte_end":8134374,"line_start":32,"line_end":32,"column_start":17,"column_end":25},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":7445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/throttle.rs","byte_start":8134627,"byte_end":8134635,"line_start":43,"line_end":43,"column_start":28,"column_end":36},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":7445},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/delay.rs","byte_start":8135827,"byte_end":8135832,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":7404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/delay.rs","byte_start":8136038,"byte_end":8136043,"line_start":33,"line_end":33,"column_start":20,"column_end":25},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":7404},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/unzip.rs","byte_start":8136831,"byte_end":8136842,"line_start":20,"line_end":20,"column_start":31,"column_end":42},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":7374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/unzip.rs","byte_start":8137112,"byte_end":8137123,"line_start":33,"line_end":33,"column_start":40,"column_end":51},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":7374},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/stream/mod.rs","byte_start":7800928,"byte_end":7800934,"line_start":172,"line_end":172,"column_start":15,"column_end":21},"kind":"SuperTrait","from":{"krate":18,"index":68},"to":{"krate":0,"index":1906}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/empty.rs","byte_start":7924716,"byte_end":7924721,"line_start":44,"line_end":44,"column_start":20,"column_end":25},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2026},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7925222,"byte_end":7925228,"line_start":17,"line_end":17,"column_start":19,"column_end":25},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2032},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_fn.rs","byte_start":7926157,"byte_end":7926163,"line_start":58,"line_end":58,"column_start":23,"column_end":29},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2032},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927517,"byte_end":7927525,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":7324},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/from_iter.rs","byte_start":7927780,"byte_end":7927788,"line_start":58,"line_end":58,"column_start":52,"column_end":60},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":7324},"to":{"krate":0,"index":2172}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7928832,"byte_end":7928836,"line_start":45,"line_end":45,"column_start":20,"column_end":24},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":7285},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/once.rs","byte_start":7929061,"byte_end":7929065,"line_start":54,"line_end":54,"column_start":32,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":7285},"to":{"krate":0,"index":2172}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat.rs","byte_start":7930005,"byte_end":7930011,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2041},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7930580,"byte_end":7930590,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2050},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/repeat_with.rs","byte_start":7931782,"byte_end":7931792,"line_start":74,"line_end":74,"column_start":23,"column_end":33},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2050},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/next_back.rs","byte_start":8145151,"byte_end":8145165,"line_start":13,"line_end":13,"column_start":56,"column_end":70},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2072},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/nth_back.rs","byte_start":8145619,"byte_end":8145632,"line_start":14,"line_end":14,"column_start":13,"column_end":26},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/nth_back.rs","byte_start":8145771,"byte_end":8145784,"line_start":20,"line_end":20,"column_start":24,"column_end":37},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2087},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/rfind.rs","byte_start":8146641,"byte_end":8146652,"line_start":14,"line_end":14,"column_start":16,"column_end":27},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/rfind.rs","byte_start":8146793,"byte_end":8146804,"line_start":20,"line_end":20,"column_start":29,"column_end":40},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2108},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/rfind.rs","byte_start":8146845,"byte_end":8146856,"line_start":22,"line_end":22,"column_start":27,"column_end":38},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2108},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/rfold.rs","byte_start":8147781,"byte_end":8147792,"line_start":20,"line_end":20,"column_start":15,"column_end":26},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":7206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/rfold.rs","byte_start":8147992,"byte_end":8148003,"line_start":30,"line_end":30,"column_start":26,"column_end":37},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":7206},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/try_rfold.rs","byte_start":8149022,"byte_end":8149036,"line_start":20,"line_end":20,"column_start":15,"column_end":29},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":7149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/try_rfold.rs","byte_start":8149242,"byte_end":8149256,"line_start":30,"line_end":30,"column_start":29,"column_end":43},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":7149},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/double_ended_stream/mod.rs","byte_start":8138504,"byte_end":8138510,"line_start":27,"line_end":27,"column_start":30,"column_end":36},"kind":"SuperTrait","from":{"krate":18,"index":68},"to":{"krate":0,"index":2172}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/exact_size_stream.rs","byte_start":8152502,"byte_end":8152508,"line_start":81,"line_end":81,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":18,"index":68},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/fused_stream.rs","byte_start":8160590,"byte_end":8160596,"line_start":19,"line_end":19,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":18,"index":68},"to":{"krate":0,"index":2219}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/interval.rs","byte_start":8162478,"byte_end":8162486,"line_start":67,"line_end":67,"column_start":17,"column_end":25},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2337},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/into_stream.rs","byte_start":8163706,"byte_end":8163707,"line_start":29,"line_end":29,"column_start":32,"column_end":33},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2244},"to":{"krate":0,"index":2239}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8164867,"byte_end":8164874,"line_start":48,"line_end":48,"column_start":20,"column_end":27},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2342},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8165042,"byte_end":8165049,"line_start":56,"line_end":56,"column_start":31,"column_end":38},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2342},"to":{"krate":0,"index":2172}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8165196,"byte_end":8165203,"line_start":62,"line_end":62,"column_start":25,"column_end":32},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2342},"to":{"krate":0,"index":2219}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/pending.rs","byte_start":8165239,"byte_end":8165246,"line_start":64,"line_end":64,"column_start":29,"column_end":36},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2342},"to":{"krate":0,"index":2187}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/product.rs","byte_start":8166014,"byte_end":8166019,"line_start":18,"line_end":18,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1909},"to":{"krate":0,"index":2277}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/successors.rs","byte_start":8169398,"byte_end":8169408,"line_start":58,"line_end":58,"column_start":23,"column_end":33},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":7128},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/stream/sum.rs","byte_start":8170605,"byte_end":8170610,"line_start":18,"line_end":18,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1909},"to":{"krate":0,"index":2307}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/lines.rs","byte_start":8233167,"byte_end":8233172,"line_start":32,"line_end":32,"column_start":29,"column_end":34},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":7077},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/read_line.rs","byte_start":8235094,"byte_end":8235108,"line_start":19,"line_end":19,"column_start":46,"column_end":60},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3278},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/read_until.rs","byte_start":8236567,"byte_end":8236582,"line_start":17,"line_end":17,"column_start":46,"column_end":61},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3300},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/split.rs","byte_start":8237782,"byte_end":8237787,"line_start":31,"line_end":31,"column_start":29,"column_end":34},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":7029},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_read/mod.rs","byte_start":8221549,"byte_end":8221556,"line_start":42,"line_end":42,"column_start":15,"column_end":22},"kind":"SuperTrait","from":{"krate":24,"index":27},"to":{"krate":0,"index":3898}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/bytes.rs","byte_start":8254704,"byte_end":8254709,"line_start":18,"line_end":18,"column_start":34,"column_end":39},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3907},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8256524,"byte_end":8256529,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":6955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258688,"byte_end":8258693,"line_start":97,"line_end":97,"column_start":51,"column_end":56},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":6955},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8258935,"byte_end":8258940,"line_start":106,"line_end":106,"column_start":33,"column_end":38},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":6955},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/chain.rs","byte_start":8260085,"byte_end":8260090,"line_start":142,"line_end":142,"column_start":42,"column_end":47},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":6955},"to":{"krate":24,"index":27}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read.rs","byte_start":8261791,"byte_end":8261801,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3394},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_exact.rs","byte_start":8262376,"byte_end":8262391,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3413},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_to_end.rs","byte_start":8263313,"byte_end":8263328,"line_start":15,"line_end":15,"column_start":43,"column_end":58},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3431},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_to_end.rs","byte_start":8264478,"byte_end":8264483,"line_start":48,"line_end":48,"column_start":19,"column_end":24},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3443},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_to_string.rs","byte_start":8265800,"byte_end":8265818,"line_start":19,"line_end":19,"column_start":43,"column_end":61},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3461},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/read_vectored.rs","byte_start":8267172,"byte_end":8267190,"line_start":14,"line_end":14,"column_start":43,"column_end":61},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3483},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8268010,"byte_end":8268014,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":6938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8271686,"byte_end":8271690,"line_start":160,"line_end":160,"column_start":24,"column_end":28},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":6938},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/take.rs","byte_start":8272608,"byte_end":8272612,"line_start":194,"line_end":194,"column_start":30,"column_end":34},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":6938},"to":{"krate":24,"index":27}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/read/mod.rs","byte_start":8239815,"byte_end":8239819,"line_start":53,"line_end":53,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":24,"index":17},"to":{"krate":0,"index":3925}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/seek/seek.rs","byte_start":8277733,"byte_end":8277743,"line_start":14,"line_end":14,"column_start":43,"column_end":53},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3544},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/seek/mod.rs","byte_start":8275090,"byte_end":8275094,"line_start":35,"line_end":35,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":24,"index":25},"to":{"krate":0,"index":3955}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/flush.rs","byte_start":8289039,"byte_end":8289050,"line_start":13,"line_end":13,"column_start":44,"column_end":55},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3565},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write.rs","byte_start":8289562,"byte_end":8289573,"line_start":14,"line_end":14,"column_start":44,"column_end":55},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3582},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write_all.rs","byte_start":8290138,"byte_end":8290152,"line_start":15,"line_end":15,"column_start":44,"column_end":58},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3601},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write_fmt.rs","byte_start":8291121,"byte_end":8291135,"line_start":17,"line_end":17,"column_start":44,"column_end":58},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3619},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/write_vectored.rs","byte_start":8292625,"byte_end":8292644,"line_start":14,"line_end":14,"column_start":44,"column_end":63},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3640},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/write/mod.rs","byte_start":8279352,"byte_end":8279357,"line_start":46,"line_end":46,"column_start":15,"column_end":20},"kind":"SuperTrait","from":{"krate":24,"index":20},"to":{"krate":0,"index":3971}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/utils.rs","byte_start":8293111,"byte_end":8293117,"line_start":8,"line_end":8,"column_start":21,"column_end":27},"kind":{"Impl":{"id":262}},"from":{"krate":2,"index":29668},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/utils.rs","byte_start":8293370,"byte_end":8293382,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/utils.rs","byte_start":8293669,"byte_end":8293681,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3985},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/utils.rs","byte_start":8293812,"byte_end":8293824,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3985},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8295805,"byte_end":8295814,"line_start":55,"line_end":55,"column_start":19,"column_end":28},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":6870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8297042,"byte_end":8297051,"line_start":100,"line_end":100,"column_start":9,"column_end":18},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":6870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8299791,"byte_end":8299800,"line_start":201,"line_end":201,"column_start":24,"column_end":33},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":6870},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8301254,"byte_end":8301263,"line_start":240,"line_end":240,"column_start":27,"column_end":36},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":6870},"to":{"krate":24,"index":27}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8302185,"byte_end":8302194,"line_start":265,"line_end":265,"column_start":47,"column_end":56},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":6870},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_reader.rs","byte_start":8302532,"byte_end":8302541,"line_start":277,"line_end":277,"column_start":24,"column_end":33},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":6870},"to":{"krate":24,"index":25}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8309255,"byte_end":8309264,"line_start":118,"line_end":118,"column_start":16,"column_end":25},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":6829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8315096,"byte_end":8315105,"line_start":302,"line_end":302,"column_start":26,"column_end":35},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":6829},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8316003,"byte_end":8316012,"line_start":329,"line_end":329,"column_start":44,"column_end":53},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":6829},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/buf_writer.rs","byte_start":8316258,"byte_end":8316267,"line_start":338,"line_end":338,"column_start":32,"column_end":41},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":6829},"to":{"krate":24,"index":25}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/copy.rs","byte_start":8321063,"byte_end":8321073,"line_start":150,"line_end":150,"column_start":27,"column_end":37},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":6780},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8323136,"byte_end":8323142,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326443,"byte_end":8326449,"line_start":154,"line_end":154,"column_start":18,"column_end":24},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3998},"to":{"krate":24,"index":25}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8326715,"byte_end":8326721,"line_start":167,"line_end":167,"column_start":18,"column_end":24},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3998},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8327237,"byte_end":8327243,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3998},"to":{"krate":24,"index":27}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8327593,"byte_end":8327599,"line_start":201,"line_end":201,"column_start":16,"column_end":22},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3998},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8328358,"byte_end":8328364,"line_start":227,"line_end":227,"column_start":16,"column_end":22},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3998},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/cursor.rs","byte_start":8328888,"byte_end":8328894,"line_start":245,"line_end":245,"column_start":16,"column_end":22},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3998},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8330172,"byte_end":8330177,"line_start":39,"line_end":39,"column_start":21,"column_end":26},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3842},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8330296,"byte_end":8330301,"line_start":45,"line_end":45,"column_start":15,"column_end":20},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3842},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/empty.rs","byte_start":8330505,"byte_end":8330510,"line_start":56,"line_end":56,"column_start":18,"column_end":23},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3842},"to":{"krate":24,"index":27}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331695,"byte_end":8331701,"line_start":40,"line_end":40,"column_start":21,"column_end":27},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3862},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/repeat.rs","byte_start":8331820,"byte_end":8331826,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3862},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332811,"byte_end":8332815,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3878},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/sink.rs","byte_start":8332934,"byte_end":8332938,"line_start":42,"line_end":42,"column_start":16,"column_end":20},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3878},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/timeout.rs","byte_start":8334686,"byte_end":8334693,"line_start":60,"line_end":60,"column_start":23,"column_end":30},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6759},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8337684,"byte_end":8337690,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4120},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stderr.rs","byte_start":8341093,"byte_end":8341099,"line_start":176,"line_end":176,"column_start":22,"column_end":28},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4120},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8343954,"byte_end":8343959,"line_start":96,"line_end":96,"column_start":6,"column_end":11},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":4154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8345975,"byte_end":8345980,"line_start":150,"line_end":150,"column_start":15,"column_end":20},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4154},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdin.rs","byte_start":8348079,"byte_end":8348084,"line_start":203,"line_end":203,"column_start":22,"column_end":27},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4154},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8351415,"byte_end":8351421,"line_start":90,"line_end":90,"column_start":16,"column_end":22},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4189},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/io/stdout.rs","byte_start":8354824,"byte_end":8354830,"line_start":176,"line_end":176,"column_start":22,"column_end":28},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4189},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8363945,"byte_end":8363957,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8371429,"byte_end":8371441,"line_start":292,"line_end":292,"column_start":21,"column_end":33},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4259},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8371877,"byte_end":8371889,"line_start":309,"line_end":309,"column_start":32,"column_end":44},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4259},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8372242,"byte_end":8372254,"line_start":320,"line_end":320,"column_start":18,"column_end":30},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4259},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8372353,"byte_end":8372365,"line_start":326,"line_end":326,"column_start":20,"column_end":32},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4259},"to":{"krate":1,"index":8190}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/datagram.rs","byte_start":8372699,"byte_end":8372711,"line_start":336,"line_end":336,"column_start":20,"column_end":32},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4259},"to":{"krate":1,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8374355,"byte_end":8374367,"line_start":56,"line_end":56,"column_start":6,"column_end":18},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8377399,"byte_end":8377411,"line_start":155,"line_end":155,"column_start":21,"column_end":33},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4319},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8378382,"byte_end":8378390,"line_start":182,"line_end":182,"column_start":17,"column_end":25},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4400},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8378749,"byte_end":8378761,"line_start":194,"line_end":194,"column_start":32,"column_end":44},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4319},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8379114,"byte_end":8379126,"line_start":205,"line_end":205,"column_start":18,"column_end":30},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4319},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8379225,"byte_end":8379237,"line_start":211,"line_end":211,"column_start":20,"column_end":32},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4319},"to":{"krate":1,"index":8190}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/listener.rs","byte_start":8379421,"byte_end":8379433,"line_start":218,"line_end":218,"column_start":20,"column_end":32},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4319},"to":{"krate":1,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8380632,"byte_end":8380642,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8383974,"byte_end":8383984,"line_start":155,"line_end":155,"column_start":15,"column_end":25},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4407},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8384428,"byte_end":8384438,"line_start":175,"line_end":175,"column_start":16,"column_end":26},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4407},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8385460,"byte_end":8385470,"line_start":211,"line_end":211,"column_start":21,"column_end":31},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4407},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8385902,"byte_end":8385912,"line_start":228,"line_end":228,"column_start":30,"column_end":40},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4407},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8386290,"byte_end":8386300,"line_start":240,"line_end":240,"column_start":18,"column_end":28},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4407},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8386399,"byte_end":8386409,"line_start":246,"line_end":246,"column_start":20,"column_end":30},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4407},"to":{"krate":1,"index":8190}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/os/unix/net/stream.rs","byte_start":8386585,"byte_end":8386595,"line_start":253,"line_end":253,"column_start":20,"column_end":30},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4407},"to":{"krate":1,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192309,"byte_end":8192314,"line_start":48,"line_end":48,"column_start":40,"column_end":45},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":2958},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192360,"byte_end":8192365,"line_start":49,"line_end":49,"column_start":40,"column_end":45},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":2958},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192381,"byte_end":8192386,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":2958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8192765,"byte_end":8192770,"line_start":70,"line_end":70,"column_start":17,"column_end":22},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":2958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8193531,"byte_end":8193541,"line_start":101,"line_end":101,"column_start":40,"column_end":50},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":2975},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8194607,"byte_end":8194617,"line_start":128,"line_end":128,"column_start":34,"column_end":44},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":2975},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8197066,"byte_end":8197071,"line_start":221,"line_end":221,"column_start":45,"column_end":50},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":2958},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8197191,"byte_end":8197197,"line_start":224,"line_end":224,"column_start":29,"column_end":35},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":2994},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8197569,"byte_end":8197574,"line_start":237,"line_end":237,"column_start":21,"column_end":26},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":2958},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8197685,"byte_end":8197690,"line_start":243,"line_end":243,"column_start":39,"column_end":44},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":2958},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8197916,"byte_end":8197926,"line_start":252,"line_end":252,"column_start":40,"column_end":50},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":3004},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8197976,"byte_end":8197986,"line_start":253,"line_end":253,"column_start":40,"column_end":50},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":3004},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8198023,"byte_end":8198033,"line_start":255,"line_end":255,"column_start":26,"column_end":36},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":3004},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8198389,"byte_end":8198399,"line_start":265,"line_end":265,"column_start":44,"column_end":54},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":3004},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8198565,"byte_end":8198575,"line_start":271,"line_end":271,"column_start":49,"column_end":59},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":3004},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8198707,"byte_end":8198717,"line_start":277,"line_end":277,"column_start":27,"column_end":37},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":3004},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/mutex.rs","byte_start":8198855,"byte_end":8198865,"line_start":285,"line_end":285,"column_start":30,"column_end":40},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":3004},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200505,"byte_end":8200511,"line_start":59,"line_end":59,"column_start":40,"column_end":46},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":3052},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200564,"byte_end":8200570,"line_start":60,"line_end":60,"column_start":47,"column_end":53},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":3052},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8200586,"byte_end":8200592,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":3052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201031,"byte_end":8201037,"line_start":82,"line_end":82,"column_start":17,"column_end":23},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":3052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8201703,"byte_end":8201713,"line_start":109,"line_end":109,"column_start":40,"column_end":50},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":3070},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8202823,"byte_end":8202833,"line_start":136,"line_end":136,"column_start":34,"column_end":44},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":3070},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8205674,"byte_end":8205685,"line_start":234,"line_end":234,"column_start":40,"column_end":51},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":3087},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8206798,"byte_end":8206809,"line_start":261,"line_end":261,"column_start":34,"column_end":45},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":3087},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8209238,"byte_end":8209244,"line_start":348,"line_end":348,"column_start":45,"column_end":51},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":3052},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8209364,"byte_end":8209370,"line_start":351,"line_end":351,"column_start":29,"column_end":35},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":3106},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8209744,"byte_end":8209750,"line_start":364,"line_end":364,"column_start":21,"column_end":27},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":3052},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8209863,"byte_end":8209869,"line_start":370,"line_end":370,"column_start":39,"column_end":45},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":3052},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8210108,"byte_end":8210123,"line_start":379,"line_end":379,"column_start":40,"column_end":55},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":3116},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8210173,"byte_end":8210188,"line_start":380,"line_end":380,"column_start":40,"column_end":55},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":3116},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8210225,"byte_end":8210240,"line_start":382,"line_end":382,"column_start":26,"column_end":41},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":3116},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8210601,"byte_end":8210616,"line_start":393,"line_end":393,"column_start":45,"column_end":60},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":3116},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8210782,"byte_end":8210797,"line_start":399,"line_end":399,"column_start":49,"column_end":64},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":3116},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8210929,"byte_end":8210944,"line_start":405,"line_end":405,"column_start":27,"column_end":42},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":3116},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8211207,"byte_end":8211223,"line_start":416,"line_end":416,"column_start":40,"column_end":56},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":3138},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8211273,"byte_end":8211289,"line_start":417,"line_end":417,"column_start":40,"column_end":56},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":3138},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8211326,"byte_end":8211342,"line_start":419,"line_end":419,"column_start":26,"column_end":42},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":3138},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8211740,"byte_end":8211756,"line_start":432,"line_end":432,"column_start":45,"column_end":61},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":3138},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8211922,"byte_end":8211938,"line_start":438,"line_end":438,"column_start":49,"column_end":65},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":3138},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8212070,"byte_end":8212086,"line_start":444,"line_end":444,"column_start":27,"column_end":43},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":3138},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/rwlock.rs","byte_start":8212224,"byte_end":8212240,"line_start":452,"line_end":452,"column_start":30,"column_end":46},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":3138},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8391909,"byte_end":8391916,"line_start":66,"line_end":66,"column_start":6,"column_end":13},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/barrier.rs","byte_start":8394566,"byte_end":8394583,"line_start":151,"line_end":151,"column_start":6,"column_end":23},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8397347,"byte_end":8397364,"line_start":15,"line_end":15,"column_start":6,"column_end":23},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398525,"byte_end":8398532,"line_start":63,"line_end":63,"column_start":22,"column_end":29},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4465},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398557,"byte_end":8398564,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4465},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398586,"byte_end":8398593,"line_start":66,"line_end":66,"column_start":18,"column_end":25},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4465},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8398660,"byte_end":8398667,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8407417,"byte_end":8407424,"line_start":362,"line_end":362,"column_start":21,"column_end":28},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4465},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8408216,"byte_end":8408227,"line_start":384,"line_end":384,"column_start":28,"column_end":39},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":4502},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/condvar.rs","byte_start":8409135,"byte_end":8409146,"line_start":411,"line_end":411,"column_start":26,"column_end":37},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":4502},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412017,"byte_end":8412023,"line_start":110,"line_end":110,"column_start":9,"column_end":15},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":4547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412950,"byte_end":8412960,"line_start":145,"line_end":145,"column_start":27,"column_end":37},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":4555},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8412999,"byte_end":8413009,"line_start":147,"line_end":147,"column_start":28,"column_end":38},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":4555},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8414426,"byte_end":8414436,"line_start":182,"line_end":182,"column_start":26,"column_end":36},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":4555},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8417087,"byte_end":8417093,"line_start":300,"line_end":300,"column_start":18,"column_end":24},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":4547},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8417366,"byte_end":8417372,"line_start":309,"line_end":309,"column_start":19,"column_end":25},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":4547},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8417767,"byte_end":8417773,"line_start":324,"line_end":324,"column_start":24,"column_end":30},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":4547},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8419093,"byte_end":8419101,"line_start":374,"line_end":374,"column_start":9,"column_end":17},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8420157,"byte_end":8420167,"line_start":411,"line_end":411,"column_start":28,"column_end":38},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":4593},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8420558,"byte_end":8420568,"line_start":424,"line_end":424,"column_start":26,"column_end":36},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":4593},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8423172,"byte_end":8423180,"line_start":543,"line_end":543,"column_start":18,"column_end":26},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":4584},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8423659,"byte_end":8423667,"line_start":557,"line_end":557,"column_start":19,"column_end":27},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":4584},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8424093,"byte_end":8424101,"line_start":573,"line_end":573,"column_start":20,"column_end":28},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":4584},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8424492,"byte_end":8424500,"line_start":588,"line_end":588,"column_start":24,"column_end":32},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":4584},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8427696,"byte_end":8427703,"line_start":688,"line_end":688,"column_start":31,"column_end":38},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":4629},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8427740,"byte_end":8427747,"line_start":689,"line_end":689,"column_start":31,"column_end":38},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":4629},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8427772,"byte_end":8427779,"line_start":690,"line_end":690,"column_start":19,"column_end":26},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":4629},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8427795,"byte_end":8427802,"line_start":692,"line_end":692,"column_start":9,"column_end":16},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":4629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8438121,"byte_end":8438128,"line_start":966,"line_end":966,"column_start":18,"column_end":25},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":4629},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8439189,"byte_end":8439201,"line_start":1004,"line_end":1004,"column_start":19,"column_end":31},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":4709},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8439227,"byte_end":8439239,"line_start":1006,"line_end":1006,"column_start":19,"column_end":31},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8439494,"byte_end":8439506,"line_start":1015,"line_end":1015,"column_start":21,"column_end":33},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8440111,"byte_end":8440123,"line_start":1036,"line_end":1036,"column_start":16,"column_end":28},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":6718},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8440145,"byte_end":8440157,"line_start":1038,"line_end":1038,"column_start":18,"column_end":30},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":6718},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8440620,"byte_end":8440629,"line_start":1053,"line_end":1053,"column_start":16,"column_end":25},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":6708},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/channel.rs","byte_start":8440651,"byte_end":8440660,"line_start":1055,"line_end":1055,"column_start":18,"column_end":27},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":6708},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/waker_set.rs","byte_start":8213847,"byte_end":8213855,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":3182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/waker_set.rs","byte_start":8218705,"byte_end":8218709,"line_start":215,"line_end":215,"column_start":15,"column_end":19},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":3196},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/waker_set.rs","byte_start":8219275,"byte_end":8219279,"line_start":235,"line_end":235,"column_start":16,"column_end":20},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":3196},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/sync/waker_set.rs","byte_start":8219433,"byte_end":8219437,"line_start":244,"line_end":244,"column_start":19,"column_end":23},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":3196},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8448737,"byte_end":8448747,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_builder.rs","byte_start":8451326,"byte_end":8451336,"line_start":117,"line_end":117,"column_start":28,"column_end":38},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5759},"to":{"krate":1,"index":8174}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8451971,"byte_end":8451979,"line_start":20,"line_end":20,"column_start":6,"column_end":14},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":4840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8455942,"byte_end":8455950,"line_start":155,"line_end":155,"column_start":21,"column_end":29},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":4840},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8456103,"byte_end":8456111,"line_start":161,"line_end":161,"column_start":16,"column_end":24},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":4840},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/dir_entry.rs","byte_start":8456266,"byte_end":8456274,"line_start":170,"line_end":170,"column_start":26,"column_end":34},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":4840},"to":{"krate":1,"index":8167}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8458273,"byte_end":8458277,"line_start":69,"line_end":69,"column_start":6,"column_end":10},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":4895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8466123,"byte_end":8466127,"line_start":312,"line_end":312,"column_start":15,"column_end":19},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":4895},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8466606,"byte_end":8466610,"line_start":322,"line_end":322,"column_start":21,"column_end":25},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4895},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8466724,"byte_end":8466728,"line_start":328,"line_end":328,"column_start":15,"column_end":19},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4895},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8467209,"byte_end":8467213,"line_start":349,"line_end":349,"column_start":16,"column_end":20},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4895},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8468377,"byte_end":8468381,"line_start":388,"line_end":388,"column_start":15,"column_end":19},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":4895},"to":{"krate":24,"index":25}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8468870,"byte_end":8468874,"line_start":409,"line_end":409,"column_start":30,"column_end":34},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":4895},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8469063,"byte_end":8469067,"line_start":418,"line_end":418,"column_start":22,"column_end":26},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":4895},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8469183,"byte_end":8469187,"line_start":424,"line_end":424,"column_start":24,"column_end":28},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":4895},"to":{"krate":1,"index":8190}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8469331,"byte_end":8469335,"line_start":430,"line_end":430,"column_start":24,"column_end":28},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":4895},"to":{"krate":1,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8470455,"byte_end":8470459,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":4958},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8470496,"byte_end":8470500,"line_start":471,"line_end":471,"column_start":31,"column_end":35},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":4958},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8470767,"byte_end":8470771,"line_start":485,"line_end":485,"column_start":9,"column_end":13},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":4958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8472006,"byte_end":8472015,"line_start":522,"line_end":522,"column_start":31,"column_end":40},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":4976},"to":{"krate":2,"index":1904}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8472052,"byte_end":8472061,"line_start":523,"line_end":523,"column_start":31,"column_end":40},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":4976},"to":{"krate":2,"index":1916}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8472077,"byte_end":8472086,"line_start":525,"line_end":525,"column_start":9,"column_end":18},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":4976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8472477,"byte_end":8472486,"line_start":538,"line_end":538,"column_start":18,"column_end":27},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":4976},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8472794,"byte_end":8472803,"line_start":550,"line_end":550,"column_start":19,"column_end":28},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":4976},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8472929,"byte_end":8472938,"line_start":558,"line_end":558,"column_start":22,"column_end":31},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":4976},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/file.rs","byte_start":8474499,"byte_end":8474508,"line_start":611,"line_end":611,"column_start":6,"column_end":15},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":4976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8497589,"byte_end":8497600,"line_start":64,"line_end":64,"column_start":6,"column_end":17},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8504389,"byte_end":8504400,"line_start":294,"line_end":294,"column_start":18,"column_end":29},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5785},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/open_options.rs","byte_start":8504545,"byte_end":8504556,"line_start":303,"line_end":303,"column_start":29,"column_end":40},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5785},"to":{"krate":1,"index":8117}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8510241,"byte_end":8510248,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/fs/read_dir.rs","byte_start":8510447,"byte_end":8510454,"line_start":88,"line_end":88,"column_start":17,"column_end":24},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5797},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525400,"byte_end":8525409,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5811},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/ancestors.rs","byte_start":8525614,"byte_end":8525623,"line_start":39,"line_end":39,"column_start":24,"column_end":33},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5811},"to":{"krate":2,"index":5114}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526369,"byte_end":8526379,"line_start":31,"line_end":31,"column_start":10,"column_end":20},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526888,"byte_end":8526898,"line_start":50,"line_end":50,"column_start":22,"column_end":32},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5822},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8526991,"byte_end":8527001,"line_start":56,"line_end":56,"column_start":23,"column_end":33},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5822},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8527107,"byte_end":8527117,"line_start":62,"line_end":62,"column_start":23,"column_end":33},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5822},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8527274,"byte_end":8527284,"line_start":70,"line_end":70,"column_start":34,"column_end":44},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5822},"to":{"krate":2,"index":4778}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8527409,"byte_end":8527419,"line_start":76,"line_end":76,"column_start":24,"column_end":34},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5822},"to":{"krate":2,"index":5114}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/components.rs","byte_start":8527449,"byte_end":8527458,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"kind":{"Impl":{"id":441}},"from":{"krate":1,"index":6984},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528089,"byte_end":8528093,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528566,"byte_end":8528570,"line_start":40,"line_end":40,"column_start":23,"column_end":27},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5852},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528732,"byte_end":8528736,"line_start":48,"line_end":48,"column_start":21,"column_end":25},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5852},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8528877,"byte_end":8528888,"line_start":52,"line_end":52,"column_start":29,"column_end":40},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5255},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8529185,"byte_end":8529189,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5852},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8529282,"byte_end":8529286,"line_start":70,"line_end":70,"column_start":23,"column_end":27},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5852},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8529403,"byte_end":8529407,"line_start":76,"line_end":76,"column_start":34,"column_end":38},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5852},"to":{"krate":2,"index":4778}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/iter.rs","byte_start":8529554,"byte_end":8529558,"line_start":82,"line_end":82,"column_start":24,"column_end":28},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5852},"to":{"krate":2,"index":5114}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8531158,"byte_end":8531162,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":5858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8556324,"byte_end":8556327,"line_start":824,"line_end":824,"column_start":22,"column_end":25},"kind":{"Impl":{"id":451}},"from":{"krate":5,"index":81},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8556556,"byte_end":8556559,"line_start":832,"line_end":832,"column_start":22,"column_end":25},"kind":{"Impl":{"id":452}},"from":{"krate":5,"index":3840},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8556854,"byte_end":8556856,"line_start":841,"line_end":841,"column_start":22,"column_end":24},"kind":{"Impl":{"id":453}},"from":{"krate":5,"index":2993},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557059,"byte_end":8557063,"line_start":849,"line_end":849,"column_start":18,"column_end":22},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5858},"to":{"krate":5,"index":314}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557187,"byte_end":8557191,"line_start":857,"line_end":857,"column_start":23,"column_end":27},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5858},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557285,"byte_end":8557289,"line_start":863,"line_end":863,"column_start":22,"column_end":26},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5858},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557367,"byte_end":8557372,"line_start":869,"line_end":869,"column_start":22,"column_end":27},"kind":{"Impl":{"id":457}},"from":{"krate":1,"index":1938},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557468,"byte_end":8557471,"line_start":875,"line_end":875,"column_start":29,"column_end":32},"kind":{"Impl":{"id":458}},"from":{"krate":5,"index":323},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557597,"byte_end":8557600,"line_start":882,"line_end":882,"column_start":22,"column_end":25},"kind":{"Impl":{"id":459}},"from":{"krate":5,"index":323},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557700,"byte_end":8557708,"line_start":888,"line_end":888,"column_start":22,"column_end":30},"kind":{"Impl":{"id":460}},"from":{"krate":1,"index":6363},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557889,"byte_end":8557895,"line_start":900,"line_end":900,"column_start":22,"column_end":28},"kind":{"Impl":{"id":462}},"from":{"krate":5,"index":4867},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8557984,"byte_end":8557991,"line_start":906,"line_end":906,"column_start":22,"column_end":29},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8561139,"byte_end":8561143,"line_start":1024,"line_end":1024,"column_start":33,"column_end":37},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":5858},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8561250,"byte_end":8561254,"line_start":1030,"line_end":1030,"column_start":33,"column_end":37},"kind":{"Impl":{"id":515}},"from":{"krate":1,"index":4007},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/path.rs","byte_start":8561350,"byte_end":8561357,"line_start":1036,"line_end":1036,"column_start":33,"column_end":40},"kind":{"Impl":{"id":516}},"from":{"krate":1,"index":7058},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8562133,"byte_end":8562140,"line_start":25,"line_end":25,"column_start":6,"column_end":13},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567386,"byte_end":8567393,"line_start":199,"line_end":199,"column_start":26,"column_end":33},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567501,"byte_end":8567504,"line_start":205,"line_end":205,"column_start":24,"column_end":27},"kind":{"Impl":{"id":519}},"from":{"krate":5,"index":81},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567604,"byte_end":8567607,"line_start":211,"line_end":211,"column_start":16,"column_end":19},"kind":{"Impl":{"id":520}},"from":{"krate":5,"index":81},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567758,"byte_end":8567765,"line_start":218,"line_end":218,"column_start":45,"column_end":52},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567882,"byte_end":8567889,"line_start":224,"line_end":224,"column_start":25,"column_end":32},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8567998,"byte_end":8568006,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":523}},"from":{"krate":1,"index":6363},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8568115,"byte_end":8568122,"line_start":236,"line_end":236,"column_start":23,"column_end":30},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8568228,"byte_end":8568235,"line_start":242,"line_end":242,"column_start":18,"column_end":25},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":7596}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8568414,"byte_end":8568421,"line_start":250,"line_end":250,"column_start":42,"column_end":49},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":4755}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8568616,"byte_end":8568623,"line_start":258,"line_end":258,"column_start":42,"column_end":49},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":4768}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8568780,"byte_end":8568787,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8568908,"byte_end":8568915,"line_start":272,"line_end":272,"column_start":23,"column_end":30},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":1584}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8569007,"byte_end":8569010,"line_start":278,"line_end":278,"column_start":28,"column_end":31},"kind":{"Impl":{"id":530}},"from":{"krate":5,"index":323},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8569142,"byte_end":8569145,"line_start":285,"line_end":285,"column_start":32,"column_end":35},"kind":{"Impl":{"id":531}},"from":{"krate":5,"index":323},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8569296,"byte_end":8569303,"line_start":292,"line_end":292,"column_start":34,"column_end":41},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8569415,"byte_end":8569418,"line_start":299,"line_end":299,"column_start":24,"column_end":27},"kind":{"Impl":{"id":533}},"from":{"krate":5,"index":3840},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8569641,"byte_end":8569643,"line_start":307,"line_end":307,"column_start":24,"column_end":26},"kind":{"Impl":{"id":534}},"from":{"krate":5,"index":2993},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8569858,"byte_end":8569865,"line_start":315,"line_end":315,"column_start":23,"column_end":30},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8570010,"byte_end":8570017,"line_start":322,"line_end":322,"column_start":44,"column_end":51},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6136},"to":{"krate":0,"index":2196}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8570486,"byte_end":8570493,"line_start":340,"line_end":340,"column_start":49,"column_end":56},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6136},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8570870,"byte_end":8570877,"line_start":355,"line_end":355,"column_start":35,"column_end":42},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8571006,"byte_end":8571013,"line_start":361,"line_end":361,"column_start":35,"column_end":42},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":1822}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/path/pathbuf.rs","byte_start":8571118,"byte_end":8571125,"line_start":367,"line_end":367,"column_start":33,"column_end":40},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6136},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8576001,"byte_end":8576020,"line_start":74,"line_end":74,"column_start":26,"column_end":45},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":5550},"to":{"krate":0,"index":17}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8576292,"byte_end":8576311,"line_start":83,"line_end":83,"column_start":49,"column_end":68},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":5550},"to":{"krate":2,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8577035,"byte_end":8577045,"line_start":104,"line_end":104,"column_start":24,"column_end":34},"kind":{"Impl":{"id":543}},"from":{"krate":1,"index":6663},"to":{"krate":0,"index":5547}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8577340,"byte_end":8577352,"line_start":117,"line_end":117,"column_start":24,"column_end":36},"kind":{"Impl":{"id":544}},"from":{"krate":1,"index":6685},"to":{"krate":0,"index":5547}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8577717,"byte_end":8577729,"line_start":132,"line_end":132,"column_start":24,"column_end":36},"kind":{"Impl":{"id":545}},"from":{"krate":1,"index":6688},"to":{"krate":0,"index":5547}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/addr.rs","byte_start":8581448,"byte_end":8581454,"line_start":271,"line_end":271,"column_start":24,"column_end":30},"kind":{"Impl":{"id":547}},"from":{"krate":5,"index":4867},"to":{"krate":0,"index":5547}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8583346,"byte_end":8583357,"line_start":55,"line_end":55,"column_start":6,"column_end":17},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8587847,"byte_end":8587855,"line_start":190,"line_end":190,"column_start":21,"column_end":29},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6167},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8588219,"byte_end":8588230,"line_start":202,"line_end":202,"column_start":38,"column_end":49},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6163},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8588661,"byte_end":8588672,"line_start":216,"line_end":216,"column_start":22,"column_end":33},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6163},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8588801,"byte_end":8588812,"line_start":222,"line_end":222,"column_start":24,"column_end":35},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6163},"to":{"krate":1,"index":8190}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/listener.rs","byte_start":8588971,"byte_end":8588982,"line_start":228,"line_end":228,"column_start":24,"column_end":35},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6163},"to":{"krate":1,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8591550,"byte_end":8591559,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8598728,"byte_end":8598737,"line_start":286,"line_end":286,"column_start":15,"column_end":24},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6185},"to":{"krate":24,"index":17}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8599405,"byte_end":8599414,"line_start":314,"line_end":314,"column_start":16,"column_end":25},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6185},"to":{"krate":24,"index":20}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8600670,"byte_end":8600679,"line_start":358,"line_end":358,"column_start":36,"column_end":45},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6185},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8601106,"byte_end":8601115,"line_start":372,"line_end":372,"column_start":22,"column_end":31},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6185},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8601244,"byte_end":8601253,"line_start":378,"line_end":378,"column_start":24,"column_end":33},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6185},"to":{"krate":1,"index":8190}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/tcp/stream.rs","byte_start":8601408,"byte_end":8601417,"line_start":384,"line_end":384,"column_start":24,"column_end":33},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6185},"to":{"krate":1,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8604124,"byte_end":8604133,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":6202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8618629,"byte_end":8618638,"line_start":481,"line_end":481,"column_start":36,"column_end":45},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6202},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8619055,"byte_end":8619064,"line_start":495,"line_end":495,"column_start":22,"column_end":31},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6202},"to":{"krate":1,"index":8188}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8619193,"byte_end":8619202,"line_start":501,"line_end":501,"column_start":24,"column_end":33},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6202},"to":{"krate":1,"index":8190}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/net/udp/mod.rs","byte_start":8619357,"byte_end":8619366,"line_start":507,"line_end":507,"column_start":24,"column_end":33},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6202},"to":{"krate":1,"index":8192}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/vec/extend.rs","byte_start":8622908,"byte_end":8622911,"line_start":6,"line_end":6,"column_start":31,"column_end":34},"kind":{"Impl":{"id":566}},"from":{"krate":5,"index":4166},"to":{"krate":0,"index":2196}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/vec/from_stream.rs","byte_start":8623398,"byte_end":8623401,"line_start":9,"line_end":9,"column_start":27,"column_end":30},"kind":{"Impl":{"id":567}},"from":{"krate":5,"index":4166},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/vec/from_stream.rs","byte_start":8623831,"byte_end":8623834,"line_start":27,"line_end":27,"column_start":38,"column_end":41},"kind":{"Impl":{"id":568}},"from":{"krate":5,"index":323},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/vec/from_stream.rs","byte_start":8624167,"byte_end":8624170,"line_start":40,"line_end":40,"column_start":27,"column_end":30},"kind":{"Impl":{"id":569}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/vec/from_stream.rs","byte_start":8624499,"byte_end":8624501,"line_start":53,"line_end":53,"column_start":27,"column_end":29},"kind":{"Impl":{"id":570}},"from":{"krate":5,"index":2993},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/vec/from_stream.rs","byte_start":8624818,"byte_end":8624821,"line_start":66,"line_end":66,"column_start":27,"column_end":30},"kind":{"Impl":{"id":571}},"from":{"krate":5,"index":3840},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/result/from_stream.rs","byte_start":8625490,"byte_end":8625496,"line_start":6,"line_end":6,"column_start":44,"column_end":50},"kind":{"Impl":{"id":572}},"from":{"krate":2,"index":29668},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/result/product.rs","byte_start":8643722,"byte_end":8643728,"line_start":6,"line_end":6,"column_start":41,"column_end":47},"kind":{"Impl":{"id":573}},"from":{"krate":2,"index":29668},"to":{"krate":0,"index":2277}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/result/sum.rs","byte_start":8645991,"byte_end":8645997,"line_start":6,"line_end":6,"column_start":37,"column_end":43},"kind":{"Impl":{"id":574}},"from":{"krate":2,"index":29668},"to":{"krate":0,"index":2307}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/option/from_stream.rs","byte_start":8627852,"byte_end":8627858,"line_start":7,"line_end":7,"column_start":38,"column_end":44},"kind":{"Impl":{"id":575}},"from":{"krate":2,"index":29547},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/option/product.rs","byte_start":8648256,"byte_end":8648262,"line_start":7,"line_end":7,"column_start":35,"column_end":41},"kind":{"Impl":{"id":576}},"from":{"krate":2,"index":29547},"to":{"krate":0,"index":2277}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/option/sum.rs","byte_start":8650063,"byte_end":8650069,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"kind":{"Impl":{"id":577}},"from":{"krate":2,"index":29547},"to":{"krate":0,"index":2307}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/extend.rs","byte_start":8629242,"byte_end":8629248,"line_start":7,"line_end":7,"column_start":31,"column_end":37},"kind":{"Impl":{"id":578}},"from":{"krate":5,"index":4867},"to":{"krate":0,"index":2196}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/extend.rs","byte_start":8629716,"byte_end":8629722,"line_start":25,"line_end":25,"column_start":39,"column_end":45},"kind":{"Impl":{"id":579}},"from":{"krate":5,"index":4867},"to":{"krate":0,"index":2196}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/extend.rs","byte_start":8630150,"byte_end":8630156,"line_start":42,"line_end":42,"column_start":38,"column_end":44},"kind":{"Impl":{"id":580}},"from":{"krate":5,"index":4867},"to":{"krate":0,"index":2196}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/extend.rs","byte_start":8630581,"byte_end":8630587,"line_start":59,"line_end":59,"column_start":33,"column_end":39},"kind":{"Impl":{"id":581}},"from":{"krate":5,"index":4867},"to":{"krate":0,"index":2196}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/extend.rs","byte_start":8631022,"byte_end":8631028,"line_start":76,"line_end":76,"column_start":43,"column_end":49},"kind":{"Impl":{"id":582}},"from":{"krate":5,"index":4867},"to":{"krate":0,"index":2196}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/from_stream.rs","byte_start":8631570,"byte_end":8631576,"line_start":7,"line_end":7,"column_start":27,"column_end":33},"kind":{"Impl":{"id":583}},"from":{"krate":5,"index":4867},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/from_stream.rs","byte_start":8631958,"byte_end":8631964,"line_start":22,"line_end":22,"column_start":35,"column_end":41},"kind":{"Impl":{"id":584}},"from":{"krate":5,"index":4867},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/from_stream.rs","byte_start":8632349,"byte_end":8632355,"line_start":37,"line_end":37,"column_start":34,"column_end":40},"kind":{"Impl":{"id":585}},"from":{"krate":5,"index":4867},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/from_stream.rs","byte_start":8632734,"byte_end":8632740,"line_start":52,"line_end":52,"column_start":29,"column_end":35},"kind":{"Impl":{"id":586}},"from":{"krate":5,"index":4867},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/string/from_stream.rs","byte_start":8633128,"byte_end":8633134,"line_start":67,"line_end":67,"column_start":39,"column_end":45},"kind":{"Impl":{"id":587}},"from":{"krate":5,"index":4867},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/binary_heap/extend.rs","byte_start":8634289,"byte_end":8634299,"line_start":7,"line_end":7,"column_start":36,"column_end":46},"kind":{"Impl":{"id":588}},"from":{"krate":5,"index":412},"to":{"krate":0,"index":2196}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/binary_heap/from_stream.rs","byte_start":8634766,"byte_end":8634776,"line_start":7,"line_end":7,"column_start":32,"column_end":42},"kind":{"Impl":{"id":589}},"from":{"krate":5,"index":412},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/btree_map/extend.rs","byte_start":8635393,"byte_end":8635401,"line_start":7,"line_end":7,"column_start":44,"column_end":52},"kind":{"Impl":{"id":590}},"from":{"krate":5,"index":670},"to":{"krate":0,"index":2196}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/btree_map/from_stream.rs","byte_start":8635836,"byte_end":8635844,"line_start":7,"line_end":7,"column_start":40,"column_end":48},"kind":{"Impl":{"id":591}},"from":{"krate":5,"index":670},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/btree_set/extend.rs","byte_start":8636459,"byte_end":8636467,"line_start":7,"line_end":7,"column_start":36,"column_end":44},"kind":{"Impl":{"id":592}},"from":{"krate":5,"index":4682},"to":{"krate":0,"index":2196}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/btree_set/from_stream.rs","byte_start":8636884,"byte_end":8636892,"line_start":7,"line_end":7,"column_start":32,"column_end":40},"kind":{"Impl":{"id":593}},"from":{"krate":5,"index":4682},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/hash_map/extend.rs","byte_start":8637590,"byte_end":8637597,"line_start":8,"line_end":8,"column_start":42,"column_end":49},"kind":{"Impl":{"id":594}},"from":{"krate":1,"index":6209},"to":{"krate":0,"index":2196}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/hash_map/from_stream.rs","byte_start":8638791,"byte_end":8638798,"line_start":8,"line_end":8,"column_start":38,"column_end":45},"kind":{"Impl":{"id":595}},"from":{"krate":1,"index":6209},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/hash_set/extend.rs","byte_start":8639578,"byte_end":8639585,"line_start":8,"line_end":8,"column_start":34,"column_end":41},"kind":{"Impl":{"id":596}},"from":{"krate":1,"index":6235},"to":{"krate":0,"index":2196}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/hash_set/from_stream.rs","byte_start":8640954,"byte_end":8640961,"line_start":8,"line_end":8,"column_start":30,"column_end":37},"kind":{"Impl":{"id":597}},"from":{"krate":1,"index":6235},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/linked_list/extend.rs","byte_start":8641674,"byte_end":8641684,"line_start":7,"line_end":7,"column_start":31,"column_end":41},"kind":{"Impl":{"id":598}},"from":{"krate":5,"index":2076},"to":{"krate":0,"index":2196}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/linked_list/from_stream.rs","byte_start":8642105,"byte_end":8642115,"line_start":7,"line_end":7,"column_start":27,"column_end":37},"kind":{"Impl":{"id":599}},"from":{"krate":5,"index":2076},"to":{"krate":0,"index":2212}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/vec_deque/extend.rs","byte_start":8642769,"byte_end":8642777,"line_start":7,"line_end":7,"column_start":31,"column_end":39},"kind":{"Impl":{"id":600}},"from":{"krate":5,"index":2495},"to":{"krate":0,"index":2196}},{"span":{"file_name":"/home/chrisp/.cargo/registry/src/github.com-1ecc6299db9ec823/async-std-1.6.2/src/collections/vec_deque/from_stream.rs","byte_start":8643242,"byte_end":8643250,"line_start":7,"line_end":7,"column_start":27,"column_end":35},"kind":{"Impl":{"id":601}},"from":{"krate":5,"index":2495},"to":{"krate":0,"index":2212}}]}